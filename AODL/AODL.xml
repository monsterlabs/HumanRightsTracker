<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AODL</name>
    </assembly>
    <members>
        <member name="T:AODL.Document.Collections.CollectionWithEvents">
            <summary>
            The events for all collections used within AODL
            </summary>
        </member>
        <member name="M:AODL.Document.Collections.CollectionWithEvents.OnClear">
            <summary>
            Executes additional processes while deleting <see cref="T:System.Collections.CollectionBase"/>
            </summary>
        </member>
        <member name="M:AODL.Document.Collections.CollectionWithEvents.OnClearComplete">
            <summary>
            Executes additional processes after content deleted <see cref="T:System.Collections.CollectionBase"/>
            </summary>
        </member>
        <member name="M:AODL.Document.Collections.CollectionWithEvents.OnInsert(System.Int32,System.Object)">
            <summary>
            Executes additional processes before deleting an object.<see cref="T:System.Collections.CollectionBase"/>
            </summary>
            <param name="index">Zero based index <paramref name="value"/> which should be inserted</param>
            <param name="value">The new value at <paramref name="index"/>.</param>
        </member>
        <member name="M:AODL.Document.Collections.CollectionWithEvents.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Executes additional processes after inserting a new object<see cref="T:System.Collections.CollectionBase"/>
            </summary>
            <param name="index">Zero based index <paramref name="value"/> which should be inserted</param>
            <param name="value">The new value at <paramref name="index"/>.</param>
        </member>
        <member name="M:AODL.Document.Collections.CollectionWithEvents.OnRemove(System.Int32,System.Object)">
            <summary>
            Executes additional processes while deleting an object<see cref="T:System.Collections.CollectionBase"/>
            </summary>
            <param name="index">The zero based index of the object <paramref name="value"/> to delete</param>
            <param name="value">The object to <paramref name="index"/> delete.</param>
        </member>
        <member name="M:AODL.Document.Collections.CollectionWithEvents.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Executes additional processes after an object is deleted <see cref="T:System.Collections.CollectionBase"/>
            </summary>
            <param name="index">Th zero based index, of the object <paramref name="value"/> which was deleted</param>
            <param name="value">The object <paramref name="index"/> which was deleted.</param>
        </member>
        <member name="E:AODL.Document.Collections.CollectionWithEvents.Clearing">
            <summary>
            The clearing event
            </summary>
        </member>
        <member name="E:AODL.Document.Collections.CollectionWithEvents.Cleared">
            <summary>
            The cleared event
            </summary>
        </member>
        <member name="E:AODL.Document.Collections.CollectionWithEvents.Inserting">
            <summary>
            The inserting event
            </summary>
        </member>
        <member name="E:AODL.Document.Collections.CollectionWithEvents.Inserted">
            <summary>
            The inserted event
            </summary>
        </member>
        <member name="E:AODL.Document.Collections.CollectionWithEvents.Removing">
            <summary>
            The removing event
            </summary>
        </member>
        <member name="E:AODL.Document.Collections.CollectionWithEvents.Removed">
            <summary>
            The removed event
            </summary>
        </member>
        <member name="T:AODL.Document.Collections.CollectionWithEvents.CollectionClear">
            <summary>
            The collection clear delegate
            </summary>
        </member>
        <member name="T:AODL.Document.Collections.CollectionWithEvents.CollectionChange">
            <summary>
            The collection change event.
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Charts.AxisCollection">
            <summary>
            Summary description for AxisCollection.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.AxisCollection.Add(AODL.Document.Content.Charts.ChartAxis)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.AxisCollection.Remove(AODL.Document.Content.Charts.ChartAxis)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.AxisCollection.Insert(System.Int32,AODL.Document.Content.Charts.ChartAxis)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.AxisCollection.Contains(AODL.Document.Content.Charts.ChartAxis)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Charts.AxisCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:Cell"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Charts.Chart">
            <summary>
            chart respresents a chart object which embed into the spresdsheet document.
            It is inherited from the EmbedObject
            </summary>
        </member>
        <member name="T:AODL.Document.Content.EmbedObjects.EmbedObject">
            <summary>
            Summary description for EmbedObject.
            </summary>
        </member>
        <member name="T:AODL.Document.Content.IContent">
            <summary>
            All classes that will act as content document
            must implement this interface.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.IContent.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.IContent.Node">
            <summary>
            Represents the XmlNode within the content.xml from the odt file.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.IContent.StyleName">
            <summary>
            The stylename wihich is referenced with the content object.
            If no style is available this is null.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.IContent.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.EmbedObjects.EmbedObject._objectname">
            <summary>
            gets and sets the object name
            </summary>
        </member>
        <member name="F:AODL.Document.Content.EmbedObjects.EmbedObject.objecttype">
            <summary>
            gets and sets the object type
            </summary>
        </member>
        <member name="F:AODL.Document.Content.EmbedObjects.EmbedObject._parentnode">
            <summary>
            gets and sets the parent node 
            </summary>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.HRef">
            <summary>
            Gets or sets the H ref.
            </summary>
            <value>The H ref.</value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.Actuate">
            <summary>
            Gets or sets the actuate.
            e.g. onLoad
            </summary>
            <value>The actuate.</value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.XLinkType">
            <summary>
            Gets or sets the type of the Xlink.
            e.g. simple, standard, ..
            </summary>
            <value>The type of the X link.</value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.Show">
            <summary>
            Gets or sets the show.
            e.g. embed
            </summary>
            <value>The show.</value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.ObjectRealPath">
            <summary>
            Gets or sets the embed object real path.
            </summary>
            <value>The object real path.</value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.ObjectFileName">
            <summary>
            Gets or sets the name of the object file.
            </summary>
            <value>The name of the object file.</value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.Frame">
            <summary>
            Gets or sets the frame.
            </summary>
            <value>The frame.</value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.EmbedObjects.EmbedObject.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="F:AODL.Document.Content.Charts.Chart._chartstyles">
            <summary>
            styles from the styles.xml file
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.LoadBlankContent">
            <summary>
            Load the blank content
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.LoadBlankStyles">
            <summary>
            Load the blank style
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateParentNode(System.String)">
            <summary>
            create the parentnode of the chart
            </summary>
            <param name="objectlink"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateFromCellRange(System.String)">
            <summary>
            create the chart from the cell range of the data table
            </summary>
            <param name="CellRange"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.GetCellRangeFromXMLString">
            <summary>
            analyse the xml string which 
            contains the cell range of the data table
            </summary>
            <returns>CellRange</returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.GetTable(System.String)">
            <summary>
            gets the table according to the name of the table
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.GetCellPos(System.String,AODL.Document.Content.Tables.Table)">
            <summary>
            gets the rowIndex and colIndex of the chart according to the name of the cell
            </summary>
            <param name="cellName"></param>
            <param name="tableData"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.InitChart">
            <summary>
            Init the chart
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateContentBody">
            <summary>
            Creates the content body
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateTableFromCellRange">
            <summary>
            build the data table of the chart according to the struct of the cell range
            copy the data from the spreadsheet document table according to the cell range
            </summary>
            <returns>the data table</returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateNullStringCell(AODL.Document.Content.Tables.Table)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <returns>the null string cell</returns>
            <example ><texp/></example>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateRowSerialCell(AODL.Document.Content.Tables.Table,System.Int32)">
            <summary>
            create the row serial cell
            </summary>
            <param name="table"></param>
            <param name="SerialNum"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateRowHeader(AODL.Document.Content.Tables.Table)">
            <summary>
            create the row header of the data table of the chart
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.AdddDataTableToChart">
            <summary>
            add  data table to the content of the chart
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.SaveTo(System.String)">
            <summary>
            save the content of the chart
            </summary>
            <param name="dir"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateLocalStyleContent">
            <summary>
            Creates the content of the local style.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateAttribute(System.String,System.String,System.String)">
            <summary>
             Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name</param>
            <param name="text">The attribute value</param>
            <param name="prefix">The namespace prefix</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateSeries">
            <summary>
            create the series of the chart
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Chart.CreateSingleSeries(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            create a single series 
            </summary>
            <param name="rowStartIndex">the start row index</param>
            <param name="rowEndINdex">the end row index</param>
            <param name="colStartIndex">the start col index</param>
            <param name="colEndIndex">the end col index</param>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.ChartTitle">
            <summary>
            Gets or Sets the chart Title
            
            <value>The chart Title.</value>
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.ChartLegend">
            <summary>
            Gets or Sets the chart Legend
            
            <value>The chart Legend.</value>
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.ChartPlotArea">
            <summary>
            Gets or Sets the chart PlotArea
            
            <value>The chart PlotArea.</value>
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.ChartStyle">
            <summary>
            Gets or sets the chart style.
            </summary>
            <value>The chart style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.Styles">
            <summary>
            Collection of local styles used with the chart.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.IsNewed">
            <summary>
            If this file was loaded
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.SvgWidth">
            <summary>
            Gets or sets the width of the chart
            </summary>
            <value>The name of the width of the chart</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.SvgHeight">
            <summary>
            Gets or sets the height of the chart
            </summary>
            <value>The name of the height of the chart</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.ChartType">
            <summary>
            Gets or sets the type of the chart
            </summary>
            <value>The name of the type of the chart</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.CellRange">
            <summary>
            Gets or sets the cellrange of the data table
            It sets or gets from the parentNode 
            </summary>
            <value>the cellrange of the data table</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.XAxisName">
            <summary>
            sets the title of the xaxis
            </summary>
            <value>the title of the xaxis</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.YAxisName">
            <summary>
            sets the title of the yaxis
            </summary>
            <value>the title of the yaxis</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.EndCellAddress">
            <summary>
            gets and sets the end cell address of the chart 
            It sets and gets from the frame node which contains the embed object
            <value> the end cell range of the frame</value>
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.EndX">
            <summary>
            gets and sets the end x of  the frame which chart in 
            It sets and gets from the frame node which contains the embed object
            <value> the end x of the frame</value>
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.EndY">
            <summary>
            gets and sets the end y of  the frame which chart in 
            It sets and gets from the frame node which contains the embed object
            <value> the end y of the frame</value>
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.SvgX">
            <summary>
            Gets or sets the horizontal position where
            the chart should be
            anchored. 
            </summary>
            <example>myFrame.SvgX = "1.5cm"</example>
            <value>The SVG X.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.SvgY">
            <summary>
            Gets or sets the vertical position where
            the chart should be
            anchored. 
            </summary>
            <example>myFrame.SvgY = "1.5cm"</example>
            <value>The SVG Y.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.ChartDoc">
            <summary>
            the xml document which save the content of the chart
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.Chart.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.CellRanges">
            <summary>
            the selected range of the cell
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Charts.CellPos">
            <summary>
            the position of the cell
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartTypes">
            <summary>
            the type of the chart
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartAxis">
            <summary>
            Summary description for ChartAxis.
            </summary>
        </member>
        <member name="T:AODL.Document.Content.IContentContainer">
            <summary>
            All classes that want to act as a content conatiner
            have to implement this interface.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.IContentContainer.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartAxis._chart">
            <summary>
            the chart which include the chartaxis
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartAxis.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartAxis.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            the constructor of the chart axes
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartAxis.#ctor(AODL.Document.Content.Charts.Chart)">
            <summary>
            Initializes a new instance of the chartaxis class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartAxis.#ctor(AODL.Document.Content.Charts.Chart,System.String)">
            <summary>
            Initializes a new instance of the ChartAxis class.
            </summary>
            <param name="table">The table.</param>
            <param name="styleName">The style name.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartAxis.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartAxis.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartAxis.Dimension">
            <summary>
            Gets or sets the axis dimension
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartAxis.AxisName">
            <summary>
            Gets or sets the axis name
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartAxis.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartAxis.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartAxis.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartAxis.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartAxis.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartBuilder">
            <summary>
            Summary description for ChartBuilder.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartBuilder.CreateChart(AODL.Document.Content.Tables.Table,AODL.Document.Content.Charts.ChartTypes,System.String)">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartCategories">
            <summary>
            Summary description for ChartCategories.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartCategories._chart">
            <summary>
            the chart which include the ChartCategories
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartCategories.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            the constructor of the chart category
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartCategories.TableCellRange">
            <summary>
            gets and sets the table cell address of the categories
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartCategories.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartCategories.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartCategories.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartCategories.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartDataPoint">
            <summary>
            Summary description for ChartDataPoint.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartDataPoint._chart">
            <summary>
            the chart which include the chartdatapoint
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartDataPoint.#ctor(AODL.Document.Content.Charts.Chart)">
            <summary>
            Initializes a new instance of the ChartPlotArea class.
            This will create an empty cell that use the default cell style
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDataPoint.DataPointStyle">
            <summary>
            gets and sets the style of the datapoint
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDataPoint.Repeated">
            <summary>
            gets and sets the cell repeat count
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDataPoint.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDataPoint.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDataPoint.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDataPoint.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartDomain">
            <summary>
            Summary description for ChartDomain.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartDomain._chart">
            <summary>
            the chart which contains the chart domain
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartDomain.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            the constructor of the chart domain
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDomain.TableRangeAddress">
            <summary>
            gets and sets the table range address
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDomain.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDomain.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDomain.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartDomain.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartExporter">
            <summary>
            Summary description for OpenDocumentTextExporter.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartExporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:OpenDocumentTextExporter"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartExporter.Export(AODL.Document.IDocument,System.String)">
            <summary>
            Exports the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartExporter.WriteSingleFiles(System.Xml.XmlDocument,System.String)">
            <summary>
            Writes the single files.
            </summary>
            <param name="document">The document.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartExporter.PrepareDirectory(System.String)">
            <summary>
            Create an output directory with all necessary subfolders.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartFloor">
            <summary>
            Summary description for ChartFloor.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartFloor._chart">
            <summary>
            the chart which contains the floor
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartFloor.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            the constructor of the chartfloor class
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartFloor.#ctor(AODL.Document.Content.Charts.Chart)">
            <summary>
            Initializes a new instance of the ChartPlotArea class.
            This will create an empty cell that use the default cell style
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartFloor.FloorStyle">
            <summary>
            the style of the floor
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartFloor.SvgWidth">
            <summary>
            the width of the floor
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartFloor.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartFloor.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartFloor.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartFloor.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartGrid">
            <summary>
            Summary description for ChartGrid.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartGrid._chart">
            <summary>
            the chart which contains the chart grid
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartGrid.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            the constructor of the chartgrid class
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartGrid.GridStyle">
            <summary>
            gets and sets the style of the grid
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartGrid.GridClass">
            <summary>
            gets and sets the type of the grid
            </summary>		
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartGrid.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartGrid.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartGrid.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartGrid.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartImporter">
            <summary>
            Summary description for ChartImporter.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartImporter._chart">
            <summary>
            the chart which  is imported
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.#ctor(AODL.Document.Content.Charts.Chart)">
            <summary>
            the constructor of the ChartImporter
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.Import">
            <summary>
            import the content and style of the chart
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.ImportChartStyles">
            <summary>
            import the style of the chart
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.ReadContent">
            <summary>
            read the content of the chart
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateMainContent(System.Xml.XmlNode)">
            <summary>
            create the main content of the chart
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateContent(System.Xml.XmlNode)">
            <summary>
            create the content of the chart
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChart(System.Xml.XmlNode)">
            <summary>
            create the chart 
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartTitle(System.Xml.XmlNode)">
            <summary>
            create the chart title
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartLegend(System.Xml.XmlNode)">
            <summary>
            create the chart legend
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartPlotArea(System.Xml.XmlNode)">
            <summary>
            create the chart plotarea
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartAxes(System.Xml.XmlNode)">
            <summary>
            create the chart axes
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartCategories(System.Xml.XmlNode)">
            <summary>
            create the chart category
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartGrid(System.Xml.XmlNode)">
            <summary>
            create the chart grid
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartSeries(System.Xml.XmlNode)">
            <summary>
            create the chart series
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartDataPoint(System.Xml.XmlNode)">
            <summary>
            create the chart data point
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartWall(System.Xml.XmlNode)">
            <summary>
            create the chart wall
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateChartFloor(System.Xml.XmlNode)">
            <summary>
            create the chart floor
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartImporter.CreateDr3dLight(System.Xml.XmlNode)">
            <summary>
            create the dr3d light
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartLegend">
            <summary>
            Summary description for ChartLegend.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartLegend._chart">
            <summary>
            the chart which contains the legend
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartLegend.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            the consturctor of the chart legend
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartLegend.SvgX">
            <summary>
            Gets or sets the horizontal position 
            where the legend should be anchored
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartLegend.SvgY">
            <summary>
            Gets or sets the vertical position where
            the legend should be
            anchored. 
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartLegend.LegendStyle">
            <summary>
            gets and sets the style of the legend
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartLegend.LegendPosition">
            <summary>
            gets and sets the  position of the legend
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartLegend.LegendAlign">
            <summary>
            gets and sets the align of the legend
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartLegend.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartLegend.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartLegend.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartLegend.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartPlotArea">
            <summary>
            Summary description for ChartPlotArea.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartPlotArea._chart">
            <summary>
            the chart which contains the plotarea
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartPlotArea.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the ChartPlotArea class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartPlotArea.#ctor(AODL.Document.Content.Charts.Chart,System.String)">
            <summary>
            Initializes a new instance of the ChartPlotArea class.
            </summary>
            <param name="table">The table.</param>
            <param name="styleName">The style name.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartPlotArea.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartPlotArea.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartPlotArea.BuildNode">
            <summary>
            Builds the node.
            </summary>
            <returns>XmlNode</returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartPlotArea.FirstLineHasLabels">
            <summary>
            if  fistLine has labels or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartPlotArea.FirstColumnHasLabels">
            <summary>
            if  fistColumnl  has labels          
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartPlotArea.InitPlotArea">
            <summary>
            Init the plotarea
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.PlotAreaStyle">
            <summary>
            Gets or sets the plotarea style.
            </summary>
            <value>The plotarea style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.SvgX">
            <summary>
            Gets or sets the horizontal position where
            the plotarea should be
            anchored. 
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.SvgY">
            <summary>
            Gets or sets the vertical position where
            the plotarea should be
            anchored. 
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Width">
            <summary>
            the width of the plotarea
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Height">
            <summary>
            the height of the plotarea
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.DataSourceHasLabels">
            <summary>
            sets and gets the data source has labels
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.TableNumberList">
            <summary>
            gets and sets the table number list
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Dr3dVrp">
            <summary>
            gets and sets the dr3dvrp
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Dr3dVpn">
            <summary>
            gets and sets the dr3dvpn
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Dr3dVup">
            <summary>
            gets and sets the dr3dvup
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Projection">
            <summary>
            gets and sets the projection
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Distance">
            <summary>
            gets and sets the distance
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.FocalLength">
            <summary>
            gets and sets the focallength
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.ShadowSlant">
            <summary>
            gets and sets the shadowslant
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.ShadeMode">
            <summary>
            gets and sets the shademode
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.AmbientColor">
            <summary>
            gets and sets the ambientcolor
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.LightingMode">
            <summary>
            gets and sets the lightingmode
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.TableCellRange">
            <summary>
            gets and sets table cell range
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartPlotArea.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartSeries">
            <summary>
            Summary description for ChartSeries.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartSeries._chart">
            <summary>
            the chart which contains the series
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartSeries._plotarea">
            <summary>
            the plotarea which contains the series
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartSeries._datapointcollection">
            <summary>
            the collection of the data point which the series contains
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartSeries.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            the constructor of the chartseries
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartSeries.#ctor(AODL.Document.Content.Charts.Chart)">
            <summary>
            Initializes a new instance of the ChartPlotArea class.
            This will create an empty cell that use the default cell style
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartSeries.#ctor(AODL.Document.Content.Charts.Chart,System.String)">
            <summary>
            Initializes a new instance of the ChartPlotArea class.
            </summary>
            <param name="table">The table.</param>
            <param name="styleName">The style name.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartSeries.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartSeries.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartSeries.BuildNode">
            <summary>
            builds the content
            </summary>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.SeriesStyle">
            <summary>
            the style of the series
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.ValuesCellRangeAddress">
            <summary>
            gets and sets the value cell range address
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.LabelCellAddress">
            <summary>
            gets and sets the label cell address
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.Class">
            <summary>
            gets and sets the class 
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.AttachAxis">
            <summary>
            gets and sets the attached axis
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartSeries.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartStyleProcessor">
            <summary>
            Summary description for ChartStyleProcessor.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartStyleProcessor._chart">
            <summary>
            the chart which processor deal with
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.#ctor(AODL.Document.Content.Charts.Chart)">
            <summary>
            the constructor of the chartStyleProcesser
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.ReadStyle(System.Xml.XmlNode,System.String)">
            <summary>
            read the styles of the chart
            </summary>
            <param name="node"></param>
            <param name="styleType"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.ReadStyleNode(System.String)">
            <summary>
            read the style node 
            </summary>
            <param name="styleName"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartTitleStyle(System.Xml.XmlNode)">
            <summary>
            create chart title style
            </summary>
            <param name="nodeStyle"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartStyle(System.Xml.XmlNode)">
            <summary>
            create chart style
            </summary>
            <param name="nodeStyle"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartLegendStyle(System.Xml.XmlNode)">
            <summary>
            create chart legend style
            </summary>
            <param name="nodeStyle"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartPlotAreaStyle(System.Xml.XmlNode)">
            <summary>
            create chart plotarea style
            </summary>
            <param name="nodeStyle"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartAxesStyle(System.Xml.XmlNode)">
            <summary>
            create chart axes style
            </summary>
            <param name="nodeStyle"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartSeriesStyle(System.Xml.XmlNode)">
            <summary>
            create chart series style
            </summary>
            <param name="nodeStyle"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartWallStyle(System.Xml.XmlNode)">
            <summary>
            create chart wall style
            </summary>
            <param name="nodeStyle"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartFloorStyle(System.Xml.XmlNode)">
            <summary>
            create chart floor style
            </summary>
            <param name="nodeStyle"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.GetProperty(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            get the property of the style
            </summary>
            <param name="nodeStyle"></param>
            <param name="propertyNode"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateGraphicProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            create the graphic property
            </summary>
            <param name="style"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateTextProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            create the text property
            </summary>
            <param name="style"></param>
            <param name="propertyNode"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartProperty(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            create the chart property
            </summary>
            <param name="style"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreatePlotAreaProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            create the plotarea property
            </summary>
            <param name="style"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateAxesProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            create the axes property
            </summary>
            <param name="style"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateChartProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            create the chart property
            </summary>
            <param name="style"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartStyleProcessor.CreateUnknownProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            create unknown property
            </summary>
            <param name="style"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartTitle">
            <summary>
            Summary description for ChartTitle.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartTitle._chart">
            <summary>
            the chart which include the charttitle
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartTitle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the charttitle class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartTitle.#ctor(AODL.Document.Content.Charts.Chart)">
            <summary>
            Initializes a new instance of the charttitle class.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartTitle.#ctor(AODL.Document.Content.Charts.Chart,System.String)">
            <summary>
            Initializes a new instance of the charttitle class.
            </summary>
            <param name="table">The table.</param>
            <param name="styleName">The style name.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartTitle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartTitle.InitTitle">
            <summary>
            Init the title's default text
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartTitle.SetTitle(System.String)">
            <summary>
            set the title
            </summary>
            <param name="styleName"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartTitle.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartTitle.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartTitle.TitleStyle">
            <summary>
            Gets or sets the title style.
            </summary>
            <value>The title style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartTitle.SvgX">
            <summary>
            Gets or sets the horizontal position where
            the title should be
            anchored. 
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartTitle.SvgY">
            <summary>
            Gets or sets the vertical position where
            the title should be
            anchored. 
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartTitle.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartTitle.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartTitle.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartTitle.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartTitle.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.ChartWall">
            <summary>
            Summary description for ChartWall.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.ChartWall._chart">
            <summary>
            the chart which contains the wall
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.ChartWall.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            the constructor of the chart wall
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartWall.WallStyle">
            <summary>
            the style of the chart wall
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartWall.SvgWidth">
            <summary>
            Gets or sets the width of the wall
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartWall.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartWall.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartWall.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.ChartWall.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Charts.DataPointCollection">
            <summary>
            Summary description for DataPointCollection.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.DataPointCollection.Add(AODL.Document.Content.Charts.ChartDataPoint)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.DataPointCollection.Remove(AODL.Document.Content.Charts.ChartDataPoint)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.DataPointCollection.Insert(System.Int32,AODL.Document.Content.Charts.ChartDataPoint)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.DataPointCollection.Contains(AODL.Document.Content.Charts.ChartDataPoint)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Charts.DataPointCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:Cell"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Charts.Dr3dLight">
            <summary>
            Summary description for Dr3dLight.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.Dr3dLight._chart">
            <summary>
            the chart which contains the dr3dlight
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Charts.Dr3dLight._plotarea">
            <summary>
            the plotarea which contains the dr3dlight
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Dr3dLight.#ctor(AODL.Document.Content.Charts.Chart)">
            <summary>
            the constructor of the dr3dlight
            </summary>
            <param name="chart"></param>
        </member>
        <member name="P:AODL.Document.Content.Charts.Dr3dLight.DiffuseColor">
            <summary>
            gets and sets the diffusecolor
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Dr3dLight.Direction">
            <summary>
            gets and sets the direction
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Dr3dLight.Enabled">
            <summary>
            gets and sets the enabled
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Dr3dLight.Specular">
            <summary>
            gets and sets the specular
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Dr3dLight.StyleName">
            <summary>
            gets and sets the name of the style
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.Dr3dLight.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Charts.Dr3dLightCollection">
            <summary>
            Summary description for Dr3dLightCollection.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.Dr3dLightCollection.Add(AODL.Document.Content.Charts.Dr3dLight)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.Dr3dLightCollection.Remove(AODL.Document.Content.Charts.Dr3dLight)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.Dr3dLightCollection.Insert(System.Int32,AODL.Document.Content.Charts.Dr3dLight)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.Dr3dLightCollection.Contains(AODL.Document.Content.Charts.Dr3dLight)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Charts.Dr3dLightCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:Cell"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Charts.SeriesCollection">
            <summary>
            Summary description for SeriesCollection.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesCollection.Add(AODL.Document.Content.Charts.ChartSeries)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesCollection.Remove(AODL.Document.Content.Charts.ChartSeries)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesCollection.Insert(System.Int32,AODL.Document.Content.Charts.ChartSeries)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesCollection.Contains(AODL.Document.Content.Charts.ChartSeries)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Charts.SeriesCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.Charts.ChartSeries"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Draw.DrawAreaRectangle">
            <summary>
            DrawAreaRectangle represent draw area rectangle which
            could be used within a ImageMap.
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Draw.DrawArea">
            <summary>
            Summary for DrawArea.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawArea.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawArea.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawArea"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawArea.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawArea.NewXmlNode">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawAreaRectangle"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawArea.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawArea.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawArea.Href">
            <summary>
            Gets or sets the href. e.g http://www.sourceforge.net
            </summary>
            <value>The href.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawArea.XLinkType">
            <summary>
            Gets or sets the type of the X link.
            </summary>
            <value>The type of the X link.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawArea.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description of the draw area.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawArea.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawArea.StyleName">
            <summary>
            A draw:area-rectangle doesn't have a style-name.
            </summary>
            <value>The name</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawArea.Style">
            <summary>
            A draw:area-rectangle doesn't have a style.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawArea.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawArea.Content">
            <summary>
            Gets or sets the content collection.
            </summary>
            <value>The content collection.</value>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawAreaRectangle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawAreaRectangle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawAreaRectangle.#ctor(AODL.Document.IDocument,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawAreaRectangle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawAreaRectangle.#ctor(AODL.Document.IDocument,System.String,System.String,System.String,System.String,AODL.Document.Content.OfficeEvents.EventListeners)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawAreaRectangle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="listeners">The listeners.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawAreaRectangle.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawAreaRectangle.X">
            <summary>
            Gets or sets the x-position.
            </summary>
            <value>The description of the area-position.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawAreaRectangle.Y">
            <summary>
            Gets or sets the y-position.
            </summary>
            <value>The y-position of the area-rectangle.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawAreaRectangle.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width of the area-rectangle.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawAreaRectangle.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height of the area-rectangle.</value>
        </member>
        <member name="T:AODL.Document.Content.Draw.DrawAreaCircle">
            <summary>
            Summary for DrawAreaRectangle.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawAreaCircle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawAreaCircle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawAreaCircle.#ctor(AODL.Document.IDocument,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawAreaCircle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="cx">The cx.</param>
            <param name="cy">The cy.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawAreaCircle.#ctor(AODL.Document.IDocument,System.String,System.String,System.String,AODL.Document.Content.OfficeEvents.EventListeners)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawAreaCircle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="cx">The cx.</param>
            <param name="cy">The cy.</param>
            <param name="radius">The radius.</param>
            <param name="listeners">The listeners.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawAreaCircle.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawAreaCircle.CX">
            <summary>
            Gets or sets the cx-position.
            </summary>
            <value>The center of the area-circle.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawAreaCircle.CY">
            <summary>
            Gets or sets the cy-position.
            </summary>
            <value>The center position of the area-cicle.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawAreaCircle.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
            <value>The radius of the area-circle.</value>
        </member>
        <member name="T:AODL.Document.Content.Draw.DrawTextBox">
            <summary>
            DrawTextBox represent a draw text box which could be e.g. used
            to host graphic frame
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawTextBox.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawTextBox"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawTextBox.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.DrawTextBox"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawTextBox.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawTextBox.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawTextBox.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawTextBox.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.DrawTextBox.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.Chain">
            <summary>
            If the context of the text box exceedes it's capacity,
            the content flows into the next text box in the chain
            and get or set the name of the next text box within this property.
            [optional]
            </summary>
            <value>The chain.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            [optional]
            </summary>
            <value>The corner radius.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.MinHeight">
            <summary>
            Gets or sets the minimum height of the text box.
            [optional]
            </summary>
            <value>The height of the min.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.MinWidth">
            <summary>
            Gets or sets the minimum height of the text box.
            [optional]
            </summary>
            <value>The height of the min.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.MaxHeight">
            <summary>
            Gets or sets the maximum width of the text box.
            [optional]
            </summary>
            <value>The height of the min.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.MaxWidth">
            <summary>
            Gets or sets the maximum width of the text box.
            [optional]
            </summary>
            <value>The height of the min.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.DrawTextBox.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:AODL.Document.Content.Draw.Frame">
            <summary>
            Frame represent graphic resp. a draw container.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.Frame.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.Frame"/> class.
            </summary>
            <param name="document">The textdocument.</param>
            <param name="stylename">The stylename.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.Frame.#ctor(AODL.Document.IDocument,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.Frame"/> class.
            </summary>
            <param name="document">The textdocument.</param>
            <param name="stylename">The stylename.</param>
            <param name="drawName">The  draw name.</param>
            <param name="graphicfile">The graphicfile.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.Frame.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.Frame.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.Frame.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.Frame.LoadImageFromFile(System.String)">
            <summary>
            Loads the image from file.
            </summary>
            <param name="graphicfilename">The graphicfilename.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.Frame.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.Frame.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.FrameStyle">
            <summary>
            Gets or sets the frame style.
            </summary>
            <value>The frame style.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.RealGraphicName">
            <summary>
            Gets the name of the real graphic.
            </summary>
            <value>The name of the real graphic.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.GraphicSourcePath">
            <summary>
            Gets or sets the graphic source path.
            </summary>
            <value>The graphic source path.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.HeightInPixel">
            <summary>
            Gets the image height in pixel.
            </summary>
            <value>The height in pixel.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.WidthInPixel">
            <summary>
            Gets the image width in pixel.
            </summary>
            <value>The width in pixel.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.Height">
            <summary>
            Gets the frame height in cm or inch depending on which format is used in the current document.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.Width">
            <summary>
            Gets the frame width in cm or inch depending on which format is used in the current document.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.MeasurementFormat">
            <summary>
            Gets the measurement format. This will depent on the current document.
            Possible values are cm or in (inch).
            </summary>
            <value>The measurement format.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.DPI_Y">
            <summary>
            Gets the image vertical resulotion.
            </summary>
            <value>The vertical resulotion.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.DPI_X">
            <summary>
            Gets the image horizontal resulotion.
            </summary>
            <value>The horízontal resulotion.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.DrawName">
            <summary>
            Gets or sets the draw name.
            </summary>
            <value>The name of the graphic.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.AnchorType">
            <summary>
            Gets or sets the type of the anchor. e.g paragraph
            </summary>
            <value>The type of the anchor.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.ZIndex">
            <summary>
            Gets or sets the z index.
            </summary>
            <value>The index of the Z.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.SvgWidth">
            <summary>
            Gets or sets the width of the frame. e.g 2.98cm
            </summary>
            <value>The width of the graphic.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.SvgHeight">
            <summary>
            Gets or sets the height of the frame. e.g 3.00cm
            </summary>
            <value>The height of the graphic.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.SvgX">
            <summary>
            Gets or sets the horizontal position where
            the hosted drawing e.g Graphic should be
            anchored. 
            </summary>
            <example>myFrame.SvgX = "1.5cm"</example>
            <value>The SVG X.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.SvgY">
            <summary>
            Gets or sets the vertical position where
            the hosted drawing e.g Graphic should be
            anchored. 
            </summary>
            <example>myFrame.SvgY = "1.5cm"</example>
            <value>The SVG Y.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.GraphicIdentifier">
            <summary>
            Gets or sets the graphic identifier.
            </summary>
            <value>The graphic identifier.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Frame.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:AODL.Document.Content.Draw.FrameBuilder">
            <summary>
            Use the FrameBuilder class to create several types of Frame implementations
            like illustration frame, a standard graphic frame, ...
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.FrameBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.FrameBuilder"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.FrameBuilder.BuildStandardGraphicFrame(AODL.Document.IDocument,System.String,System.String,System.String)">
            <summary>
            Builds the standard graphic frame.
            </summary>
            <param name="document">The document.</param>
            <param name="frameStyleName">Name of the frame style.</param>
            <param name="graphicName">Name of the graphic.</param>
            <param name="pathToGraphic">The path to graphic.</param>
            <returns>
            A new Frame object containing the Graphic object.
            </returns>
        </member>
        <member name="M:AODL.Document.Content.Draw.FrameBuilder.BuildIllustrationFrame(AODL.Document.IDocument,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Builds the illustration frame.
            </summary>
            <param name="document">The document.</param>
            <param name="frameStyleName">Name of the frame style.</param>
            <param name="graphicName">Name of the graphic.</param>
            <param name="pathToGraphic">The path to graphic.</param>
            <param name="illustrationText">The illustration text.</param>
            <param name="illustrationNumber">The illustration number.</param>
            <returns>
            A new Frame object containing a DrawTextBox which contains the
            illustration Graphic object and a text sequence representing
            the displayed illustration text.
            </returns>
        </member>
        <member name="T:AODL.Document.Content.Draw.Graphic">
            <summary>
            Graphic represent a graphic resp. image.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.Graphic.#ctor(AODL.Document.IDocument,AODL.Document.Content.Draw.Frame,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.Graphic"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="frame">The frame.</param>
            <param name="graphiclink">The graphiclink.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.Graphic.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.Graphic.NewXmlNode(System.String)">
            <summary>
            Create a new XmlNode.
            </summary>
            <param name="graphiclink">The stylename which should be referenced with this frame.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.Graphic.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.Graphic.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.Graphic.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.HRef">
            <summary>
            Gets or sets the H ref.
            </summary>
            <value>The H ref.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.Actuate">
            <summary>
            Gets or sets the actuate.
            e.g. onLoad
            </summary>
            <value>The actuate.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.XLinkType">
            <summary>
            Gets or sets the type of the Xlink.
            e.g. simple, standard, ..
            </summary>
            <value>The type of the X link.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.Show">
            <summary>
            Gets or sets the show.
            e.g. embed
            </summary>
            <value>The show.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.GraphicRealPath">
            <summary>
            Gets or sets the graphic real path.
            </summary>
            <value>The graphic real path.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.GraphicFileName">
            <summary>
            Gets or sets the name of the graphic file.
            </summary>
            <value>The name of the graphic file.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.Frame">
            <summary>
            Gets or sets the frame.
            </summary>
            <value>The frame.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.Graphic.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:AODL.Document.Content.Draw.ImageMap">
            <summary>
            Summary for ImageMap.
            Example ImageMap
            </summary>
            <example>
            &lt;draw:image-map&gt;
            	&lt;draw:area-rectangle
            		svg:width="5cm" svg:height="5cm" svg:x="10.949cm" svg:y="5.724cm"&gt;
            		&lt;office:event-listeners&gt;
                        &lt;script:event-listener script:language="JavaScript"
            				script:event-name="dom:onmouseover"
            				xlink:href="setCursor('hand')"/&gt;
            		&lt;/office:event-listeners&gt;
            	&lt;draw:area-rectangle&gt;
            &lt;/draw:image-map&gt;
            </example>
        </member>
        <member name="M:AODL.Document.Content.Draw.ImageMap.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.ImageMap"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.ImageMap.#ctor(AODL.Document.IDocument,AODL.Document.Content.Draw.DrawArea[])">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Draw.ImageMap"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="drawareas">Array of drawareas.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.ImageMap.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.ImageMap.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Draw.ImageMap.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Draw.ImageMap.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Content.Draw.ImageMap.Content">
            <summary>
            Gets or sets the content collection.
            </summary>
            <value>The content collection.</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.ImageMap.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Draw.ImageMap.StyleName">
            <summary>
            A draw:area-rectangle doesn't have a style-name.
            </summary>
            <value>The name</value>
        </member>
        <member name="P:AODL.Document.Content.Draw.ImageMap.Style">
            <summary>
            A draw:area-rectangle doesn't have a style.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Draw.ImageMap.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.EmbedObjects.EmbedObjectHandler">
            <summary>
            Summary description for EmbedObjectHandler.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.EmbedObjects.EmbedObjectHandler._document">
            <summary>
            the document which contains the embed object
            </summary>
        </member>
        <member name="M:AODL.Document.Content.EmbedObjects.EmbedObjectHandler.#ctor(AODL.Document.IDocument)">
            <summary>
            the constructor 
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:AODL.Document.Content.EmbedObjects.EmbedObjectHandler.CreateEmbedObject(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            create a embed object
            </summary>
            <param name="ParentNode"></param>
            <param name="MediaType"></param>
            <param name="ObjectRealPath"></param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.EmbedObjects.EmbedObjectHandler.CreateChart(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            create the chart
            </summary>
            <param name="ParentNode"></param>
            <param name="ObjectRealPath"></param>
            <returns></returns>
        </member>
        <member name="T:AODL.Document.Content.Fields.Field">
            <summary>
            A base abstract class for all the fields
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.Field.StyleName">
            <summary>
            The stylename wihich is referenced with the content object.
            If no style is available this is null.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.Field.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.Field.Value">
            <summary>
            The inner content of the field
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.DateField.Fixed">
            <summary>
            Specifies whether or not the value of a field element is fixed
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.DateField.DateValue">
            <summary>
            Specifies a particular date value.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.DateField.DateAdjust">
            <summary>
            The adjustment of the date
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Fields.FieldsCollection">
            <summary>
            A typed IContent Collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Fields.FieldsCollection.Add(AODL.Document.Content.Fields.Field)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Fields.FieldsCollection.Remove(AODL.Document.Content.Fields.Field)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Fields.FieldsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a field at the specified position.
            </summary>
            <param name="pos">position.</param>
        </member>
        <member name="M:AODL.Document.Content.Fields.FieldsCollection.Insert(System.Int32,AODL.Document.Content.Fields.Field)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Fields.FieldsCollection.Contains(AODL.Document.Content.Fields.Field)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AODL.Document.Content.Fields.FieldsCollection.FindFieldByValue(System.String)">
            <summary>
            Looks for a specific field by its internal value
            </summary>
            <param name="val">Internal value of the field</param>
            <returns>The specific field if found, null otherwise</returns>
        </member>
        <member name="P:AODL.Document.Content.Fields.FieldsCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.IContent"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Fields.PageNumber.PageAdjustment">
            <summary>
            The value of a page number field can be adjusted by a specified number, allowing the display of 
            page numbers of following or preceding pages.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.PageNumber.SelectPage">
            <summary>
             Is used to display the number of the previous or the following page rather than the number of the current page.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.PageNumber.Fixed">
            <summary>
            Specifies whether or not the value of a field element is fixed
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.PageNumber.NumFormat">
            <summary>
            Specifies the format of the number in the same way as the [XSLT] format attribute
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.Placeholder.PlaceholderType">
            <summary>
            This attribute is mandatory and it indicates which type of text content the placeholder represents
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.Placeholder.Description">
            <summary>
            Provides additional description for the placeholder
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.TextInput.Description">
            <summary>
            Provides additional description for the text input field
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Fields.VariableDecl.#ctor(AODL.Document.IDocument,AODL.Document.Content.Fields.VariableValueType)">
            <summary>
            Creates an VariableDecl instance
            </summary>
            <param name="document">The document it belogs to</param>
            <param name="valueType">Variable value type</param>
        </member>
        <member name="M:AODL.Document.Content.Fields.VariableDecl.#ctor(AODL.Document.IDocument,AODL.Document.Content.Fields.VariableValueType,System.String)">
            <summary>
            Creates an VariableDecl instance
            </summary>
            <param name="document">The document it belogs to</param>
            <param name="valueType">Variable value type</param>
            <param name="name">Variable name</param>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableDecl.Document">
            <summary>
            The document
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableDecl.Name">
            <summary>
            The name of the variable
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableDecl.VariableValueType">
            <summary>
            Defines the type of the variable
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Fields.VariableDeclCollection">
            <summary>
            A typed IContent Collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Fields.VariableDeclCollection.Add(AODL.Document.Content.Fields.VariableDecl)">
            <summary>
            Adds the specified form property to the collection.
            </summary>
            <param name="value">The variable declaration to be added.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Fields.VariableDeclCollection.Remove(AODL.Document.Content.Fields.VariableDecl)">
            <summary>
            Removes the specified variable declaration from the collection
            </summary>
            <param name="value">The variable declaration to be deleted.</param>
        </member>
        <member name="M:AODL.Document.Content.Fields.VariableDeclCollection.Insert(System.Int32,AODL.Document.Content.Fields.VariableDecl)">
            <summary>
            Inserts the specified variable declaration at the specified index
            </summary>
            <param name="index">The index.</param>
            <param name="value">The variable declaration.</param>
        </member>
        <member name="M:AODL.Document.Content.Fields.VariableDeclCollection.Contains(AODL.Document.Content.Fields.VariableDecl)">
            <summary>
            Determines whether the collection contains the given variable declaration
            </summary>
            <param name="value">The variable declaration.</param>
        </member>
        <member name="M:AODL.Document.Content.Fields.VariableDeclCollection.GetVariableDeclByName(System.String)">
            <summary>
            Gets a variable declaration by its name
            </summary>
            <param name="name">Name</param>
            <returns>Variable declaration, null if not found</returns>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableDeclCollection.Item(System.Int32)">
            <summary>
            Gets the variable declaration at the specified index.
            </summary>
            <value>Index</value>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableSet.Formula">
            <summary>
            The formula to compute the value of the variable field
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableSet.VariableDeclaration">
            <summary>
            The formula to compute the value of the variable field
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableSet.Display">
            <summary>
            Defines the way the variable is displayed
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableSet.VariableValueType">
            <summary>
            Defines the type of the variable
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableSet.DataStyleName">
            <summary>
            Refers to the data style used to format the numeric value.
            If no style is available this is null.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Fields.VariableSet.DataStyle">
            <summary>
            Refers to the data style used to format the numeric value.
            If no style is available this is null.
            </summary>
        </member>
        <member name="T:AODL.Document.Content.OfficeEvents.EventListener">
            <summary>
            Summary for EventListener.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListener.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListener.#ctor(AODL.Document.IDocument,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.OfficeEvents.EventListener"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="eventname">The eventname.</param>
            <param name="language">The language.</param>
            <param name="href">The href.</param>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListener.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.OfficeEvents.EventListener"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListener.NewXmlNode">
            <summary>
            News the XML node.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListener.Clone">
            <summary>
            Create a deep clone of this EventListener object.
            </summary>
            <remarks>A possible Attached Style wouldn't be cloned!</remarks>
            <returns>
            A clone of this object.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListener.Href">
            <summary>
            Gets or sets the href. e.g http://www.sourceforge.net
            </summary>
            <value>The href.</value>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListener.XLinkType">
            <summary>
            Gets or sets the type of the X link.
            </summary>
            <value>The type of the X link.</value>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListener.EventName">
            <summary>
            Gets or sets the event name ("dom:onclick").
            </summary>
            <value>The event name of the event listener.</value>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListener.Language">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The language of the event listener.</value>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListener.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListener.StyleName">
            <summary>
            A draw:area-rectangle doesn't have a style-name.
            </summary>
            <value>The name</value>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListener.Style">
            <summary>
            A draw:area-rectangle doesn't have a style.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListener.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.OfficeEvents.EventListeners">
            <summary>
            Summary for EventListeners
            </summary>
            <example>
            	<code>
            	<pre>
                   &lt;office:event-listeners&gt;
                       &lt;script:event-listener
                           script:language="JavaScript"
                          script:event-name="dom:onclick"
                           xlink:href="changeImage(‘dim’)"/&gt;
                       &lt;script:event-listener
                           script:language="JavaScript"
                           script:event-name="dom:onmouseover"
                           xlink:href="setCursor('hand')"/&gt;
                       &lt;script:event-listener
                           script:language="JavaScript"
                           script:event-name="dom:onmouseout"
                           xlink:href="setCursor('arrow')"/&gt;
                   &lt;/office:event-listeners&gt;
                 </pre>
                 </code>
            </example>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListeners.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.OfficeEvents.EventListeners"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListeners.#ctor(AODL.Document.IDocument,AODL.Document.Content.OfficeEvents.EventListener[])">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.OfficeEvents.EventListeners"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="EventListeners">Array of EventListeners.</param>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListeners.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListeners.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListeners.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListeners.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.OfficeEvents.EventListeners.Clone">
            <summary>
            Create a deep clone of this EventListeners object.
            </summary>
            <remarks>A possible Attached Style wouldn't be cloned!</remarks>
            <returns>
            A clone of this object.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListeners.Content">
            <summary>
            Gets or sets the content collection.
            </summary>
            <value>The content collection.</value>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListeners.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListeners.StyleName">
            <summary>
            A office:event-listeners doesn't have a style-name.
            </summary>
            <value>The name</value>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListeners.Style">
            <summary>
            A office:event-listeners doesn't have a style.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.OfficeEvents.EventListeners.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Tables.Cell">
            <summary>
            Cell represent a table cell.
            </summary>
        </member>
        <member name="T:AODL.Document.Content.IHtml">
            <summary>
            All content that could offer their text as
            HTML must implement this interface.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.IHtml.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Cell"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.#ctor(AODL.Document.Content.Tables.Table)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Cell"/> class.
            This will create an empty cell that use the default cell style
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.#ctor(AODL.Document.Content.Tables.Table,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Cell"/> class.
            Use this if you plan to add a custom style to this
            cell.
            </summary>
            <param name="table">The table.</param>
            <param name="styleName">Name of the style.</param>
            <param name="officeValueTyp">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.#ctor(AODL.Document.Content.Tables.Table,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Cell"/> class.
            </summary>
            <param name="table">The table.</param>
            <param name="styleName">The style name.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.NewXmlNode(System.String)">
            <summary>
            Create a new Xml node.
            </summary>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Cell.GetHtmlWidth">
            <summary>
            Gets the width of the HTML.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.CellStyle">
            <summary>
            Gets or sets the cell style.
            </summary>
            <value>The cell style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.ColumnRepeating">
            <summary>
            Use this to merge cells, the count of ColumnRepeating,
            need the same count of following CellSpan objects e.g. "2"
            </summary>
            <value>Count of Columns to be repeated</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.Table">
            <summary>
            Gets or sets the row.
            </summary>
            <value>The row.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.Row">
            <summary>
            Gets or sets the row.
            </summary>
            <value>The row.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.OfficeValueType">
            <summary>
            Gets or sets the type of the office value.
            See class OfficeValueTypes for possible
            settings.
            </summary>
            <value>The type of the office value.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.OfficeValue">
            <summary>
            Gets or sets the office value.
            </summary>
            <value>The office value.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.Formula">
            <summary>
            Gets or set a formula for this cell.
            </summary>
            <value>The formula.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Cell.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:AODL.Document.Content.Tables.CellCollection">
            <summary>
            CellCollection
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellCollection.Add(AODL.Document.Content.Tables.Cell)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellCollection.Remove(AODL.Document.Content.Tables.Cell)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellCollection.Insert(System.Int32,AODL.Document.Content.Tables.Cell)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellCollection.Contains(AODL.Document.Content.Tables.Cell)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Tables.CellCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.Tables.Cell"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Tables.CellSpan">
            <summary>
            CellSpan used when cells are merged.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellSpan.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.CellSpan"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellSpan.#ctor(AODL.Document.Content.Tables.Row,AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.CellSpan"/> class.
            The CellSpan class is only usable in TextDocuments.
            </summary>
            <param name="row">The row.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellSpan.NewXmlNode">
            <summary>
            News the XML node.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Tables.CellSpan._node">
            <summary>
            The Xml node
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Tables.CellSpan.Row">
            <summary>
            Gets or sets the row.
            </summary>
            <value>The row.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.CellSpan.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.CellSpan.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.CellSpan.StyleName">
            <summary>
            The stylename wihich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.CellSpan.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Tables.CellSpanCollection">
            <summary>
            CellSpanCollection
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellSpanCollection.Add(AODL.Document.Content.Tables.CellSpan)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellSpanCollection.Remove(AODL.Document.Content.Tables.CellSpan)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellSpanCollection.Insert(System.Int32,AODL.Document.Content.Tables.CellSpan)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.CellSpanCollection.Contains(AODL.Document.Content.Tables.CellSpan)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Tables.CellSpanCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.Tables.CellSpan"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Tables.Column">
            <summary>
            Column represent a table column.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.Column.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Column"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Column.#ctor(AODL.Document.Content.Tables.Table,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Column"/> class.
            </summary>
            <param name="table">The table.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Column.NewXmlNode(System.String)">
            <summary>
            Create a new Xml node.
            </summary>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Column.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="P:AODL.Document.Content.Tables.Column.ParentCellStyleName">
            <summary>
            Gets or sets the name of the parent cell style.
            </summary>
            <value>The name of the parent cell style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Column.NumberColumnsRepeated">
            <summary>
            Gets or sets the number columns repeated.
            </summary>
            <value>The number columns repeated.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Column.Table">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Column.ColumnStyle">
            <summary>
            Gets or sets the column style.
            </summary>
            <value>The column style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Column.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Column.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Column.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Column.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Tables.ColumnCollection">
            <summary>
            ColumnCollection
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.ColumnCollection.Add(AODL.Document.Content.Tables.Column)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.ColumnCollection.Remove(AODL.Document.Content.Tables.Column)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.ColumnCollection.Insert(System.Int32,AODL.Document.Content.Tables.Column)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.ColumnCollection.Contains(AODL.Document.Content.Tables.Column)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Tables.ColumnCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.Tables.Column"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Tables.Row">
            <summary>
            Row represent a row within a table. If the row is part of a table which is
            used in a text document, then Cell merging is possible.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Row"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.#ctor(AODL.Document.Content.Tables.Table)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Row"/> class.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.#ctor(AODL.Document.Content.Tables.Table,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Row"/> class.
            </summary>
            <param name="table">The table.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.InsertCellAt(System.Int32,AODL.Document.Content.Tables.Cell)">
            <summary>
            Inserts the cell at the given zero based position.
            </summary>
            <param name="position">The position.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.MergeCells(AODL.Document.TextDocuments.TextDocument,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Merge cells. This is only possible if the rows table is part
            of a text document.
            </summary>
            <param name="document">The TextDocument this row belongs to.</param>
            <param name="cellStartIndex">Start index of the cell.</param>
            <param name="mergeCells">The count of cells to merge incl. the starting cell.</param>
            <param name="mergeContent">if set to <c>true</c> [merge content].</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.GetCellIndex(AODL.Document.Content.Tables.Cell)">
            <summary>
            Gets the index of the cell.
            </summary>
            <param name="cell">The cell.</param>
            <returns>The index of the cell wthin the cell collection. If the
            cell isn't part of the collection -1 will be returned.</returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.NewXmlNode(System.String)">
            <summary>
            Create a new Xml node.
            </summary>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.CellCollection_Removed(System.Int32,System.Object)">
            <summary>
            Cells the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.CellCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Cells the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.CellSpanCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Cells the span collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.CellSpanCollection_Removed(System.Int32,System.Object)">
            <summary>
            Cells the span collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.GetRowIndex">
            <summary>
            Gets the index of the row.
            </summary>
            <returns>The index within the table rowcollection of this row.</returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Row.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="E:AODL.Document.Content.Tables.Row.OnRowChanged">
            <summary>
            Fired if the the row cellcollection was changed
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Tables.Row.Table">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Row.RowStyle">
            <summary>
            Gets or sets the row style.
            </summary>
            <value>The row style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Row.CellCollection">
            <summary>
            Gets or sets the cell collection.
            </summary>
            <value>The cell collection.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Row.CellSpanCollection">
            <summary>
            Gets or sets the cell collection.
            </summary>
            <value>The cell collection.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Row.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Row.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Row.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Row.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Tables.Row.RowChanged">
            <summary>
            RowChanged delegate
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Tables.RowCollection">
            <summary>
            RowCollection
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowCollection.Add(AODL.Document.Content.Tables.Row)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowCollection.Remove(AODL.Document.Content.Tables.Row)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowCollection.Insert(System.Int32,AODL.Document.Content.Tables.Row)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowCollection.Contains(AODL.Document.Content.Tables.Row)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Tables.RowCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.Tables.Row"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Tables.RowHeader">
            <summary>
            RowHeader represent a table row header.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowHeader.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.RowHeader"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowHeader.#ctor(AODL.Document.Content.Tables.Table)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.RowHeader"/> class.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowHeader.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowHeader.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowHeader.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowHeader.RowCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Rows the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowHeader.RowCollection_Removed(System.Int32,System.Object)">
            <summary>
            Rows the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowHeader.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.RowHeader.HtmlCleaner(System.String)">
            <summary>
            Table row header cleaner, this is needed,
            because in OD, the style of the table header
            row is used for to and bottom margin, but
            some brother use this from the text inside
            the cells. Which result in to large height
            settings.
            </summary>
            <param name="text">The text.</param>
            <returns>The cleaned text</returns>
        </member>
        <member name="P:AODL.Document.Content.Tables.RowHeader.Table">
            <summary>
            Gets or sets the table.
            </summary>
            <value>The table.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.RowHeader.RowCollection">
            <summary>
            Gets or sets the row collection.
            </summary>
            <value>The row collection.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.RowHeader.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.RowHeader.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.RowHeader.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.RowHeader.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Tables.Table">
            <summary>
            Table represent a table that is used within a spreadsheet document
            or a TextDocument! 
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Table"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.#ctor(AODL.Document.IDocument,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Tables.Table"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="name">The name.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.CreateCell">
            <summary>
            Create a new cell within this table which use the standard style.
            The cell isn't part of the table until you insert it
            via the InsertCellAt(int rowIndex, int columnIndex, Cell cell)
            </summary>
            <returns>The new cell</returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.CreateCell(System.String)">
            <summary>
            Create a new cell within this table which will have a custom
            cellstyle.
            The cell isn't part of the table until you insert it
            via the InsertCellAt(int rowIndex, int columnIndex, Cell cell)
            </summary>
            <param name="styleName">Name of the style.</param>
            <returns>The new cell.</returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.CreateCell(System.String,System.String)">
            <summary>
            Create a new cell within this table which will have a custom
            cellstyle and the cell content is type of the given office value typ.
            The cell isn't part of the table until you insert it
            via the InsertCellAt(int rowIndex, int columnIndex, Cell cell)
            </summary>
            <param name="styleName">Name of the style.</param>
            <param name="officeValueType">Type of the office value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.InsertCellAt(System.Int32,System.Int32,AODL.Document.Content.Tables.Cell)">
            <summary>
            Inserts the cell at the specified position. Both indexes are zero
            based indexes!
            The RowCollection, the rows CellCollection and the ColumnCollection
            will be resized automatically.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.NewXmlNode(System.String,System.String)">
            <summary>
            Create a new Xml node.
            </summary>
            <param name="name">The name.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.BuildNode">
            <summary>
            Builds the node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.Reset">
            <summary>
            Resets the table node.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.FindControlById(System.String)">
            <summary>
            Looks for a specific control through all the forms by its ID
            </summary>
            <param name="id">Control ID</param>
            <returns>The control</returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.FindControlByName(System.String)">
            <summary>
            Looks for a specific control through all the forms by its name
            </summary>
            <param name="id">Control name</param>
            <returns>The control</returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.AddNewForm(System.String)">
            <summary>
            Adds new form to the forms collection
            </summary>
            <param name="name">Form name</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.Row_OnRowChanged(System.Int32,System.Int32)">
            <summary>
            After a row size changed all rows before the changed row
            maybe need to be resized. This also belongs to the columns.
            </summary>
            <param name="rowNumber">The row number.</param>
            <param name="cellCount">The cell count.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.Table.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="P:AODL.Document.Content.Tables.Table.RowHeader">
            <summary>
            Gets or sets the row header.
            </summary>
            <value>The row header.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Table.TableStyle">
            <summary>
            Gets or sets the table style.
            </summary>
            <value>The table style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Table.RowCollection">
            <summary>
            Gets or sets the row collection.
            </summary>
            <value>The row collection.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Table.ColumnCollection">
            <summary>
            Gets or sets the column collection.
            </summary>
            <value>The column collection.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Table.TableName">
            <summary>
            Gets or sets the name of the table.
            </summary>
            <value>The name of the table.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Table.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Table.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Table.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Tables.Table.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Tables.TableBuilder">
            <summary>
            TableBuilder offer static methode to build table for different
            document types.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.TableBuilder.CreateSpreadsheetTable(AODL.Document.SpreadsheetDocuments.SpreadsheetDocument,System.String,System.String)">
            <summary>
            Create a spreadsheet table.
            </summary>
            <param name="document">The document.</param>
            <param name="tableName">Name of the table.</param>
            <param name="styleName">Name of the style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.TableBuilder.CreateTextDocumentTable(AODL.Document.TextDocuments.TextDocument,System.String,System.String,System.Int32,System.Int32,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Creates the text document table.
            </summary>
            <param name="document">The document.</param>
            <param name="tableName">Name of the table.</param>
            <param name="styleName">Name of the style.</param>
            <param name="rows">The rows.</param>
            <param name="columns">The columns.</param>
            <param name="width">The width.</param>
            <param name="useTableRowHeader">if set to <c>true</c> [use table row header].</param>
            <param name="useBorder">The useBorder.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.TableBuilder.GetColumnCellWidth(System.Int32,System.Double)">
            <summary>
            Gets the width of the column cell.
            </summary>
            <param name="columns">The columns.</param>
            <param name="tableWith">The table with.</param>
            <returns></returns>
        </member>
        <member name="T:AODL.Document.Content.Tables.TableCollection">
            <summary>
            TableCollection
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Tables.TableCollection.Add(AODL.Document.Content.Tables.Table)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Tables.TableCollection.Remove(AODL.Document.Content.Tables.Table)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.TableCollection.Insert(System.Int32,AODL.Document.Content.Tables.Table)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Tables.TableCollection.Contains(AODL.Document.Content.Tables.Table)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Tables.TableCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.Tables.Table"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.Indexes.Bookmark">
            <summary>
            Represent a Bookmark.
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Text.IText">
            <summary>
            IText all content that is text content must implement
            this interface.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.IText.Node">
            <summary>
            The node that represent the text content.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.IText.Text">
            <summary>
            The text.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.IText.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.IText.Style">
            <summary>
            The style which is referenced with this text object.
            This is null if no style is available.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.IText.StyleName">
            <summary>
            The style name which is used for the referenced style.
            This is null is no  style is available.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.Bookmark.#ctor(AODL.Document.IDocument,AODL.Document.Content.Text.Indexes.BookmarkType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Indexes.Bookmark"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="type">The type.</param>
            <param name="bookmarkname">The bookmarkname.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.Bookmark.NewXmlNode(AODL.Document.Content.Text.Indexes.BookmarkType,System.String)">
            <summary>
            Create the XmlNode.
            </summary>
            <param name="type">The bookmark type.</param>
            <param name="bookmarkname">The bookmark name.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.Bookmark.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.Bookmark.Clone">
            <summary>
            Create a deep clone of this Bookmark object.
            </summary>
            <remarks>A possible Attached Style wouldn't be cloned!</remarks>
            <returns>
            A clone of this object.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.Bookmark.BookmarkName">
            <summary>
            Gets or sets the name of the bookmark.
            </summary>
            <value>The name of the bookmark.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.Bookmark.BookmarkType">
            <summary>
            Gets the type of the bookmark.
            </summary>
            <value>The type of the bookmark.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.Bookmark.Node">
            <summary>
            The node that represent the text content.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.Bookmark.Text">
            <summary>
            The text.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.Bookmark.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.Bookmark.Style">
            <summary>
            Is null no style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.Bookmark.StyleName">
            <summary>
            No style name available
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.Indexes.BookmarkType">
            <summary>
            Enum that represent the possible Bookmark types.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.BookmarkType.Start">
            <summary>
            A StartBookmark, requires also a EndBookmark!
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.BookmarkType.Standard">
            <summary>
            Standard bookmark
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.BookmarkType.End">
            <summary>
            A EndBookmark
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Text.Indexes.TableOfContents">
            <summary>
            TableOfContent represent a table of contents.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.TableOfContents._indexBodyNode">
            <summary>
            This node will represent the visible entries
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.TableOfContents._contentStyleName">
            <summary>
            The style name for content entries
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.TableOfContents._contentStyleDisplayName">
            <summary>
            The display name for content entries
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.TableOfContents._isNew">
            <summary>
            Is created
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.#ctor(AODL.Document.TextDocuments.TextDocument,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Indexes.TableOfContents"/> class.
            </summary>
            <param name="textDocument">The text document.</param>
            <param name="styleName">Name of the style.</param>
            <param name="useHyperlinks">if set to <c>true</c> [use hyperlinks].</param>
            <param name="protectChanges">if set to <c>true</c> [protect changes].</param>
            <param name="textName">Title for the Table of content e.g. Table of Content</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.#ctor(AODL.Document.TextDocuments.TextDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Indexes.TableOfContents"/> class.
            </summary>
            <param name="textDocument">The text document.</param>
            <param name="tocNode">The toc node.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.RegisterEvents">
            <summary>
            Registers the events.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.NewXmlNode(System.String,System.Boolean,System.String)">
            <summary>
            News the XML node.
            </summary>
            <param name="stylename">The stylename.</param>
            <param name="protectChanges">if set to <c>true</c> [protect changes].</param>
            <param name="textName">Name of the text.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.CreateIndexBody">
            <summary>
            Creates the index body node.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.CreateTitlePargraph">
            <summary>
            Creates the title pargraph.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.InsertContentStyle">
            <summary>
            Insert the content style nodes. These are 10 styles for
            each outline number one style.
            TODO: Section Style move to document common styles
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.SetOutlineStyle">
            <summary>
            Set the outline style.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content was inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content was removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.GetTabStopStyle(System.String,System.String,System.Double)">
            <summary>
            Gets the tab stop style.
            </summary>
            <param name="leaderStyle">The leader style.</param>
            <param name="leadingChar">The leading char.</param>
            <param name="position">The position.</param>
            <returns>A for a table of contents optimized TabStopStyleCollection</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.InsertEntry(System.String,System.Int32)">
            <summary>
            Insert the given text as an Table of contents entry.
            e.g. You just insert a Headline 1. My headline to
            the document and want this text also as an Table of
            contents entry, so you can simply add the text using
            this method.
            </summary>
            <param name="textEntry">The text entry.</param>
            <param name="outLineLevel">The outline level possible 1-10.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContents.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContents.UseHyperlinks">
            <summary>
            Gets or sets a value indicating whether [use hyperlinks].
            If it's set to true, the text entries automaticaly will
            extended with Hyperlinks.
            </summary>
            <value><c>true</c> if [use hyperlinks]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContents.Title">
            <summary>
            Gets the title which is displayed
            for this table of content in english
            this will always be Table of Content,
            but this is free of choice.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContents.TitleParagraph">
            <summary>
            Gets or sets the title paragraph.
            </summary>
            <value>The title paragraph.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContents.TableOfContentsSource">
            <summary>
            Gets or sets the table of content source.
            </summary>
            <value>The table of content source.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContents.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContents.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContents.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContents.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContents.Content">
            <summary>
            Represent all visible entries of this Table of contents.
            Normally you should only insert paragraph objects as
            entry which match the following structure
            e.g. 3.1 My header text \t
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate">
            <summary>
            TableOfContentsIndexTemplate represent the table of content
            index template. It is used to set the index entries and their
            order within a table of content.
            A common order would be:
            Chapter Text TabStop PageNumber
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate.#ctor(AODL.Document.Content.Text.Indexes.TableOfContents,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate"/> class.
            </summary>
            <param name="tableOfContents">Content of the table of.</param>
            <param name="outlineLevel">For which outline level this template should be used.</param>
            <param name="styleName">Style name.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate.InitStandardTemplate">
            <summary>
            Inits the standard template.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate.InsertIndexEntry(AODL.Document.Content.Text.Indexes.IndexEntryTypes)">
            <summary>
            Insert a index entry to the template.
            You can define the order through the order you insert
            the index entry types.
            </summary>
            <param name="indexEntryType">Type of the index entry.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate.NewXmlNode(System.Int32,System.String)">
            <summary>
            Create the XmlNode which represent this object.
            </summary>
            <param name="outlineLevel">For which outline level this template should
            be used.</param>
            <param name="styleName">The name of the style which is referenced with
            this template</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate.AddIndexEntryNode(System.String,AODL.Document.Content.Text.Indexes.IndexEntryTypes)">
            <summary>
            Add the index entry node, with given type
            </summary>
            <param name="nodeName">Name of the node.</param>
            <param name="indexEntryType">Type of the index entry.</param>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate.TableOfContents">
            <summary>
            Gets or sets the content of the table of.
            </summary>
            <value>The content of the table of.</value>
        </member>
        <member name="T:AODL.Document.Content.Text.Indexes.IndexEntryTypes">
            <summary>
            The possible index entry types
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.IndexEntryTypes.Chapter">
            <summary>
            Index entry type Chapter
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.IndexEntryTypes.Text">
            <summary>
            Index entry type Text
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.IndexEntryTypes.TabStop">
            <summary>
            Index entry type TabStop
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.IndexEntryTypes.PageNumber">
            <summary>
            Index entry type PageNumber
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.IndexEntryTypes.HyperlinkStart">
            <summary>
            Index entry type Hyperlink start
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Indexes.IndexEntryTypes.HyperlinkEnd">
            <summary>
            Index entry type Hyperlink start
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplateCollection">
            <summary>
            TableOfContentsIndexTemplateCollection
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplateCollection.Add(AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplateCollection.Remove(AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplateCollection.Insert(System.Int32,AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplateCollection.Contains(AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplateCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.Text.Indexes.TableOfContentsIndexTemplate"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.Indexes.TableOfContentsSource">
            <summary>
            TableOfContentSource.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsSource.#ctor(AODL.Document.Content.Text.Indexes.TableOfContents)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Indexes.TableOfContentsSource"/> class.
            </summary>
            <param name="tableOfContents">Content of the table of.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsSource.InitStandardTableOfContentStyle">
            <summary>
            Init the standard style source template styles.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TableOfContentsSource.NewXmlNode">
            <summary>
            Create the XmlNode which represent this object.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContentsSource.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContentsSource.TableOfContents">
            <summary>
            Gets or sets the content of the table of.
            </summary>
            <value>The content of the table of.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TableOfContentsSource.TableOfContentsIndexTemplateCollection">
            <summary>
            Gets or sets the table of content index template collection.
            </summary>
            <value>The table of content index template collection.</value>
        </member>
        <member name="T:AODL.Document.Content.Text.Indexes.TextSequence">
            <summary>
            Zusammenfassung für TextSequence.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TextSequence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Indexes.TextSequence"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TextSequence.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Indexes.TextSequence"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TextSequence.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Indexes.TextSequence"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TextSequence.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TextSequence.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TextSequence.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TextSequence.TextContent_Inserted(System.Int32,System.Object)">
            <summary>
            Texts the content_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TextSequence.TextContent_Removed(System.Int32,System.Object)">
            <summary>
            Texts the content_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Indexes.TextSequence.Clone">
            <summary>
            Create a deep clone of this FormatedText object.
            </summary>
            <remarks>A possible Attached Style wouldn't be cloned!</remarks>
            <returns>
            A clone of this object.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.RefName">
            <summary>
            Gets or sets the ref name.
            e.g. for a Illustration refIllustration0
            </summary>
            <value>The name of the ref.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.Name">
            <summary>
            Gets or sets the name of the TextSequence.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.NumFormat">
            <summary>
            Gets or sets the num format.
            e.g. 1, I, A ..
            </summary>
            <value>The num format.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.Formula">
            <summary>
            Gets or sets the formula.
            </summary>
            <value>The formula.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.Node">
            <summary>
            The node that represent the text content.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.Text">
            <summary>
            Use this if use text without control character,
            otherwise use the the TextColllection TextContent. 
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.Style">
            <summary>
            Not supported. A TextSequence doesn't has a style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.StyleName">
            <summary>
            Not supported. A TextSequence doesn't has a style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Indexes.TextSequence.TextContent">
            <summary>
            All Content objects have a Text container. Which represents
            his Text this could be SimpleText, FormatedText or mixed.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.TextControl.LineBreak">
            <summary>
            LineBreak represent a line break.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.LineBreak.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.TextControl.LineBreak"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.LineBreak.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.LineBreak.Node">
            <summary>
            The node that represent the text content.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.LineBreak.Text">
            <summary>
            A tab stop doesn't have a text.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.LineBreak.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.LineBreak.Style">
            <summary>
            Is null no style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.LineBreak.StyleName">
            <summary>
            No style name available
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.TextControl.TabStop">
            <summary>
            TabStop represent a tab stop.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.TabStop.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.TextControl.TabStop"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.TabStop.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.TabStop.Node">
            <summary>
            The node that represent the text content.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.TabStop.Text">
            <summary>
            A tab stop doesn't have a text.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.TabStop.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.TabStop.Style">
            <summary>
            Is null no style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.TabStop.StyleName">
            <summary>
            No style name available
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.TextControl.WhiteSpace">
            <summary>
            WhiteSpace represent a white space element.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.WhiteSpace.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.TextControl.WhiteSpace"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.WhiteSpace.#ctor(AODL.Document.IDocument,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.TextControl.WhiteSpace"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="whiteSpacesCount">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.WhiteSpace.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.WhiteSpace.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.WhiteSpace.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.WhiteSpace.Node">
            <summary>
            The node that represent the text content.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.WhiteSpace.Text">
            <summary>
            A tab stop doesn't have a text.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.WhiteSpace.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.WhiteSpace.Style">
            <summary>
            Is null no style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.TextControl.WhiteSpace.StyleName">
            <summary>
            No style name available
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.TextControl.WhiteSpaceHelper">
            <summary>
            WhiteSpace convesation
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.TextControl.WhiteSpaceHelper.Value">
            <summary>
            Value -> \ws3 which means 3 whitespace
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.TextControl.WhiteSpaceHelper.Replacement">
            <summary>
            Replace with the real Xml textnode &gt;text:s text:c="2" /&lt;
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.WhiteSpaceHelper.GetWhiteSpaceXml(System.String)">
            <summary>
            Convert all whitespace groups "    "
            into OpenDocument Xml textnodes
            </summary>
            <param name="stringToConvert">The string to convert.</param>
            <returns>The parsed string</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.WhiteSpaceHelper.GetWhiteSpaceHtml(System.String)">
            <summary>
            Convert all AODL whitespace control character \ws3
            into their OpenDocument Xml textnodes
            </summary>
            <param name="text">The string to convert.</param>
            <returns>The parsed string</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.WhiteSpaceHelper.GetHtmlWhiteSpace(System.Int32)">
            <summary>
            Gets the HTML white space.
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.TextControl.WhiteSpaceHelper.GetXmlWhiteSpace(System.Int32)">
            <summary>
            Gets the XML white space.
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="T:AODL.Document.Content.Text.Footnote">
            <summary>
            Represent a Footnote which could be 
            a Foot- or a Endnote
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Text.ITextContainer">
            <summary>
            ITextContainer.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.ITextContainer.TextContent">
            <summary>
            All Content objects have a Text container. Which represents
            his Text this could be SimpleText, FormatedText or mixed.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Footnote.#ctor(AODL.Document.IDocument,System.String,System.String,AODL.Document.Content.Text.FootnoteType)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Footnote"/> class.
            </summary>
            <param name="document">The text document.</param>
            <param name="notetext">The notetext.</param>
            <param name="id">The id.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Footnote.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Footnote"/> class.
            </summary>
            <param name="document">The text document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Footnote.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Footnote.NewXmlNode(System.String,System.String,AODL.Document.Content.Text.FootnoteType)">
            <summary>
            News the XML node.
            </summary>
            <param name="id">The id.</param>
            <param name="notetext">The notetext.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Footnote.TextContent_Inserted(System.Int32,System.Object)">
            <summary>
            Texts the content_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Footnote.TextContent_Removed(System.Int32,System.Object)">
            <summary>
            Texts the content_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Footnote.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="P:AODL.Document.Content.Text.Footnote.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Footnote.Node">
            <summary>
            The node that represent the text content.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Footnote.Text">
            <summary>
            The text.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Footnote.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Footnote.Style">
            <summary>
            Is null no style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Footnote.StyleName">
            <summary>
            No style name available
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Footnote.TextContent">
            <summary>
            All Content objects have a Text container. Which represents
            his Text this could be SimpleText, FormatedText or mixed.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.FootnoteType">
            <summary>
            Represent the possible footnodes
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.FootnoteType.footnode">
            <summary>
            A footnode
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.FootnoteType.endnote">
            <summary>
            A endnote
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Text.FormatedText">
            <summary>
            Represent a formated Text e.g bold, italic, underline etc.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.FormatedText"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.#ctor(AODL.Document.IDocument,System.String,System.String)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="document">The content object to which the formated text belongs to.</param>
            <param name="name">The stylename which should be referenced with this FormatedText object.</param>
            <param name="text">The Displaytext.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.#ctor(AODL.Document.IDocument,AODL.Document.Styles.TextStyle,System.String)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="document">The content object to which the formated text belongs to.</param>
            <param name="textstyle">An existing TextStyle object.</param>
            <param name="text">The Displaytext.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.NewXmlNode(System.String)">
            <summary>
            Create a new XmlNode.
            </summary>
            <param name="stylename">The stylename which should be referenced with this FormatedText.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.GetTextWithHtmlControl">
            <summary>
            Gets the text with HTML controls
            as Tab as &amp;nbsp; and line-break as br tag
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.GetSubOrSupStartTag">
            <summary>
            Gets the sub or sup start tag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.GetSubOrSupEndTag">
            <summary>
            Gets the sub or sup end tag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.TextContent_Inserted(System.Int32,System.Object)">
            <summary>
            Texts the content_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.TextContent_Removed(System.Int32,System.Object)">
            <summary>
            Texts the content_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.FormatedText.Clone">
            <summary>
            Create a deep clone of this FormatedText object.
            </summary>
            <remarks>A possible Attached Style wouldn't be cloned!</remarks>
            <returns>
            A clone of this object.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.FormatedText.TextStyle">
            <summary>
            Gets or sets the text style.
            </summary>
            <value>The text style.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.FormatedText.Node">
            <summary>
            The node that represent the text content.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.FormatedText.Text">
            <summary>
            Use this if use text without control character,
            otherwise use the the TextColllection TextContent. 
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.FormatedText.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.FormatedText.Style">
            <summary>
            The style which is referenced with this text object.
            This is null if no style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.FormatedText.StyleName">
            <summary>
            The style name which is used for the referenced style.
            This is null is no  style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.FormatedText.TextContent">
            <summary>
            All Content objects have a Text container. Which represents
            his Text this could be SimpleText, FormatedText or mixed.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.Header">
            <summary>
            Header represent a header.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.#ctor(AODL.Document.IDocument,AODL.Document.Content.Text.Headings)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Header"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="heading">The heading.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.#ctor(System.Xml.XmlNode,AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Header"/> class.
            </summary>
            <param name="headernode">The headernode.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.GetHeading(AODL.Document.Content.Text.Headings)">
            <summary>
            Gets the heading.
            </summary>
            <param name="heading">The heading.</param>
            <returns>The heading stylename</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.TextContent_Inserted(System.Int32,System.Object)">
            <summary>
            Append the xml from added IText object.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.TextContent_Removed(System.Int32,System.Object)">
            <summary>
            Texts the content_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.GetHtmlStyle(System.String)">
            <summary>
            Gets the HTML style.
            </summary>
            <param name="headingname">The headingname.</param>
            <returns>The css style element</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.GetAnchor">
            <summary>
            Gets the html anchor, if the document use a table of contents
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.GetHeadingNumber">
            <summary>
            Gets the heading number, if used via Outline-Level.
            Support for outline numbering up to deepth of 6, yet.
            </summary>
            <returns>The number string.</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Header.Clone">
            <summary>
            Create a deep clone of this Header object.
            </summary>
            <remarks>A possible Attached Style wouldn't be cloned!</remarks>
            <returns>
            A clone of this object.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.Header.OutLineLevel">
            <summary>
            Gets or sets the out line level.
            e.g
            start header = "1"
            some paragraphs here
            subheader	 = "2"
            some paragraphs here
            start header = "1"
            will result in:
            1. a header
            some text
            1.1 a subheader
            some text
            2. a header
            </summary>
            <value>The out line level.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Header.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Header.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Header.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Header.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Header.TextContent">
            <summary>
            All Content objects have a Text container. Which represents
            his Text this could be SimpleText, FormatedText or mixed.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.Headings">
            <summary>
            All possible Standard Headings
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading">
            <summary>
            Standard Heading
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_1">
            <summary>
            Heading 1
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_2">
            <summary>
            Heading 2
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_3">
            <summary>
            Heading 3
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_4">
            <summary>
            Heading 4
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_5">
            <summary>
            Heading 5
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_6">
            <summary>
            Heading 6
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_7">
            <summary>
            Heading 7
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_8">
            <summary>
            Heading 8
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_9">
            <summary>
            Heading 9
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Headings.Heading_20_10">
            <summary>
            Heading 10
            </summary>
        </member>
        <member name="T:AODL.Document.Content.Text.ITextCollection">
            <summary>
            A typed IText collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.ITextCollection.Add(AODL.Document.Content.Text.IText)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.ITextCollection.Remove(AODL.Document.Content.Text.IText)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.ITextCollection.Insert(System.Int32,AODL.Document.Content.Text.IText)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.ITextCollection.Contains(AODL.Document.Content.Text.IText)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.ITextCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.Text.IText"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.List">
            <summary>
            Represent a list which could be a numbered or bullet style list.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.List.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.List"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.List.#ctor(AODL.Document.IDocument,System.String,AODL.Document.Styles.ListStyles,System.String)">
            <summary>
            Create a new List object
            </summary>
            <param name="document">The IDocument</param>
            <param name="styleName">The style name</param>
            <param name="typ">The list typ bullet, ..</param>
            <param name="paragraphStyleName">The style name for the ParagraphStyle.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.List.#ctor(AODL.Document.IDocument,AODL.Document.Content.Text.List)">
            <summary>
            Create a new List which is used to represent a inner list.
            </summary>
            <param name="document">The IDocument</param>
            <param name="outerlist">The List to which this List belongs.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.List.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.List.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.List.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.List.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.List.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.List.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="P:AODL.Document.Content.Text.List.ParagraphStyle">
            <summary>
            The ParagraphStyle to which this List belongs.
            There is only one ParagraphStyle per List and
            its ListItems.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.List.ListStyle">
            <summary>
            Gets or sets the list style.
            </summary>
            <value>The list style.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.List.Content">
            <summary>
            The ContentCollection of access
            to their list items.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.List.ListType">
            <summary>
            Gets the type of the list.
            </summary>
            <value>The type of the list.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.List.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.List.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.List.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.List.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Text.ListItem">
            <summary>
            ListItem represent a list item which is used within a list.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.ListItem.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.ListItem"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.ListItem.#ctor(AODL.Document.Content.Text.List)">
            <summary>
            Create a new ListItem
            </summary>
            <param name="list">The List object to which this ListItem belongs.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.ListItem.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.ListItem.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.ListItem.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.ListItem.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.ListItem.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.ListItem.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="P:AODL.Document.Content.Text.ListItem.List">
            <summary>
            The List object to which this ListItem belongs.
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Text.ListItem.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.ListItem.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.ListItem.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.ListItem.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.ListItem.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Text.Paragraph">
            <summary>
            Represent a paragraph within a opendocument document.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.Paragraph._parentStyle">
            <summary>
            Mixed content - needed for alternative
            exporter implementations. In OpenDocument
            the order will be right automatically.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Paragraph"/> class.
            This is a blank paragraph.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Create a new Paragraph object.
            </summary>
            <param name="document">The Texdocumentocument.</param>
            <param name="styleName">The styleName which should be referenced with this paragraph.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.#ctor(AODL.Document.IDocument,AODL.Document.Styles.ParentStyles,System.String)">
            <summary>
            Overloaded constructor.
            Use this to create a standard paragraph with the given text from
            string simpletext. Notice, the text will be styled as standard.
            You won't be able to style it bold, underline, etc. this will only
            occur if standard style attributes of the texdocumentocument are set to
            this.
            </summary>
            <param name="document">The IDocument.</param>
            <param name="style">The only accepted ParentStyle is Standard! All other styles will be ignored!</param>
            <param name="simpletext">The text which should be append within this paragraph.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.#ctor(System.Xml.XmlNode,AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.Paragraph"/> class.
            </summary>
            <param name="node">The node.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.Init(System.String)">
            <summary>
            Create the Paragraph.
            </summary>
            <param name="styleName">The style name.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.TextContent_Inserted(System.Int32,System.Object)">
            <summary>
            Append the xml from added IText object.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.TextContent_Removed(System.Int32,System.Object)">
            <summary>
            Texts the content_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.RemoveMixedContent(System.Object)">
            <summary>
            Removes the mixed content
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.GetTextHtmlContent">
            <summary>
            Gets the content of the text HTML.
            </summary>
            <returns>Textcontent as Html string</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.GetContentHtmlContent">
            <summary>
            Gets the content of the text HTML.
            </summary>
            <returns>Textcontent as Html string</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.GetHtmlStyleFromGlobalStyles">
            <summary>
            Gets the HTML style from global styles.
            This isn't supported by AODL yet. But if
            OpenDocument text documents are loaded,
            this could be.
            </summary>
            <returns>The style from Global Styles</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.GetGlobalStyleElement(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the global style element.
            </summary>
            <param name="node">The node.</param>
            <param name="style">The style.</param>
            <returns>The element style value</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.Paragraph.Clone">
            <summary>
            Create a deep clone of this paragraph object.
            </summary>
            <remarks>A possible Attached Style wouldn't be cloned!</remarks>
            <returns>
            A clone of this object.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.Paragraph.MixedContent">
            <summary>
            Gets the content of the mixed.
            </summary>
            <value>The content of the mixed.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Paragraph.ParentStyle">
            <summary>
            Gets the parent style.
            </summary>
            <value>The parent style.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Paragraph.ParagraphStyle">
            <summary>
            Gets or sets the paragraph style.
            </summary>
            <value>The paragraph style.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Paragraph.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Paragraph.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Paragraph.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.Paragraph.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Paragraph.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.Paragraph.TextContent">
            <summary>
            All Content objects have a Text container. Which represents
            his Text this could be SimpleText, FormatedText or mixed.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.ParagraphBuilder">
            <summary>
            ParagraphBuilder use the methods of this class to create
            different kinds of paragraph.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.ParagraphBuilder.ParagraphSeperator">
            <summary>
            Use \n\n as pargraph seperator for building a pargraph collection
            with the ParagraphBuilder.
            </summary>
        </member>
        <member name="F:AODL.Document.Content.Text.ParagraphBuilder.ParagraphSeperator2">
            <summary>
            Use \r\n\r\n as pargraph seperator for building a pargraph collection
            with the ParagraphBuilder.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.ParagraphBuilder"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphBuilder.CreateSpreadsheetParagraph(AODL.Document.IDocument)">
            <summary>
            Create a spreadsheet paragraph.
            </summary>
            <param name="document">The document.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphBuilder.CreateStandardTextParagraph(AODL.Document.IDocument)">
            <summary>
            Create a standard text paragraph.
            </summary>
            <param name="document">The document.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphBuilder.CreateStandardTextTableParagraph(AODL.Document.IDocument)">
            <summary>
            Create a standard text table paragraph.
            </summary>
            <param name="document">The document.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphBuilder.CreateParagraphWithCustomStyle(AODL.Document.IDocument,System.String)">
            <summary>
            Create a paragraph with custom style.
            </summary>
            <param name="document">The document.</param>
            <param name="styleName">Name of the style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphBuilder.CreateParagraphWithExistingNode(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Create a paragraph with existing node.
            </summary>
            <param name="document">The document.</param>
            <param name="paragraphNode">The paragraph node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphBuilder.CreateParagraphCollection(AODL.Document.IDocument,System.String,System.Boolean,System.String)">
            <summary>
            Creates the paragraph collection.
            </summary>
            <param name="document">The document.</param>
            <param name="text">The text.</param>
            <param name="useStandardStyle">if set to <c>true</c> [use standard style].</param>
            <param name="paragraphSeperator">The paragraph seperator.</param>
            <returns></returns>
        </member>
        <member name="T:AODL.Document.Content.Text.ParagraphCollection">
            <summary>
            A Paragraph collection
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphCollection.Add(AODL.Document.Content.Text.Paragraph)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphCollection.Remove(AODL.Document.Content.Text.Paragraph)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphCollection.Insert(System.Int32,AODL.Document.Content.Text.Paragraph)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.ParagraphCollection.Contains(AODL.Document.Content.Text.Paragraph)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.ParagraphCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.Text.Paragraph"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.SimpleText">
            <summary>
            The class SimpleText represent simple unformatted text
            that could be used within the spreadsheet cell content.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.SimpleText.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.SimpleText"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="simpleText">The simple text.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.SimpleText.NewNode(System.String)">
            <summary>
            News the node.
            </summary>
            <param name="simpleText">The simple text.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.SimpleText.Clone">
            <summary>
            Create a deep clone of this SimpleText object.
            </summary>
            <remarks>A possible Attached Style wouldn't be cloned!</remarks>
            <returns>
            A clone of this object.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.SimpleText.Node">
            <summary>
            The node that represent the text content.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.SimpleText.Text">
            <summary>
            The text.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.SimpleText.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.SimpleText.Style">
            <summary>
            Is null no style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.SimpleText.StyleName">
            <summary>
            No style name available
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Text.TextBuilder">
            <summary>
            TextBuilder use this class to build TextCollection from
            text that contains text control character like whitespaces,
            tab stops and line breaks.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.TextBuilder.BuildTextCollection(AODL.Document.IDocument,System.String)">
            <summary>
            Builds the text collection.
            </summary>
            <param name="document">The document.</param>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="T:AODL.Document.Content.Text.UnknownTextContent">
            <summary>
            UnknownTextContent represent an unknown text element.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.UnknownTextContent.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.UnknownTextContent"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="P:AODL.Document.Content.Text.UnknownTextContent.GetElementName">
            <summary>
            Gets the name of the get element.
            </summary>
            <value>The name of the get element.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.UnknownTextContent.StyleName">
            <summary>
            Return null, because the attribute name is unknown.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.UnknownTextContent.Text">
            <summary>
            The text.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.UnknownTextContent.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.UnknownTextContent.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.UnknownTextContent.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Content.Text.XLink">
            <summary>
            Represent a hyperlink, which could be 
            a web-, ftp- or telnet link
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.#ctor(AODL.Document.IDocument,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.XLink"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="href">The href.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.Text.XLink"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.NewXmlNode">
            <summary>
            News the XML node.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Creates the attribute.
            </summary>
            <param name="name">The name.</param>
            <param name="text">The text.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.TextContent_Inserted(System.Int32,System.Object)">
            <summary>
            Append the xml from added IText object.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.TextContent_Removed(System.Int32,System.Object)">
            <summary>
            Texts the content_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.GetLink">
            <summary>
            Gets the link.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.Text.XLink.Clone">
            <summary>
            Create a deep clone of this XLink object.
            </summary>
            <remarks>A possible Attached Style wouldn't be cloned!</remarks>
            <returns>
            A clone of this object.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.Href">
            <summary>
            Gets or sets the href. e.g http://www.sourceforge.net
            </summary>
            <value>The href.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.XLinkType">
            <summary>
            Gets or sets the type of the X link.
            </summary>
            <value>The type of the X link.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.OfficeName">
            <summary>
            This is not the display text! Gets or sets the office name 
            </summary>
            <value>The name of the office.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.TargetFrameName">
            <summary>
            Gets or sets the name of the target frame.
            e.g. _blank, _top
            </summary>
            <value>The name of the target frame.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.Show">
            <summary>
            Gets or sets the show.
            Standard value is <b>new</b>
            </summary>
            <value>The show.</value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.Node">
            <summary>
            The node that represent the text content.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.Text">
            <summary>
            The text.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.Document">
            <summary>
            The document to which this text content belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.Style">
            <summary>
            The style which is referenced with this text object.
            This is null if no style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.StyleName">
            <summary>
            The style name which is used for the referenced style.
            This is null is no  style is available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Text.XLink.TextContent">
            <summary>
            All Content objects have a Text container. Which represents
            his Text this could be SimpleText, FormatedText or mixed.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.IContentCollection">
            <summary>
            A typed IContent Collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.IContentCollection.Add(AODL.Document.Content.IContent)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Content.IContentCollection.Remove(AODL.Document.Content.IContent)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.IContentCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an element at the specified position.
            </summary>
            <param name="pos">position.</param>
        </member>
        <member name="M:AODL.Document.Content.IContentCollection.RemoveOnlyHere(AODL.Document.Content.IContent)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.IContentCollection.Insert(System.Int32,AODL.Document.Content.IContent)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.IContentCollection.Contains(AODL.Document.Content.IContent)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Content.IContentCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Content.IContent"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.UnknownContent">
            <summary>
            UnknownContent represent an unknown element.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.UnknownContent.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Content.UnknownContent"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="P:AODL.Document.Content.UnknownContent.GetElementName">
            <summary>
            Gets the name of the get element.
            </summary>
            <value>The name of the get element.</value>
        </member>
        <member name="P:AODL.Document.Content.UnknownContent.StyleName">
            <summary>
            Return null, because the attribute name is unknown.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.UnknownContent.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.UnknownContent.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.UnknownContent.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:AODL.Document.Exceptions.AODLException">
            <summary>
            AODLException is a special exception which will let you also
            access possible broken XmlNodes.
            </summary>
        </member>
        <member name="M:AODL.Document.Exceptions.AODLException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Exceptions.AODLException"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Exceptions.AODLException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Exceptions.AODLException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:AODL.Document.Exceptions.AODLException.GetExceptionSourceInfo(System.Diagnostics.StackFrame)">
            <summary>
            Gets the exception source info.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Exceptions.AODLException.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Exceptions.AODLException.InMethod">
            <summary>
            Gets or sets the in method.
            </summary>
            <value>The in method.</value>
        </member>
        <member name="P:AODL.Document.Exceptions.AODLException.CalledParams">
            <summary>
            Gets or sets the called params.
            e.g. a param was string aString
            -> CalledParams.Add("string", aString as object);
            </summary>
            <value>The called params.</value>
        </member>
        <member name="P:AODL.Document.Exceptions.AODLException.OriginalException">
            <summary>
            Gets or sets the original exception.
            </summary>
            <value>The original exception.</value>
        </member>
        <member name="P:AODL.Document.Exceptions.AODLException.Message">
            <summary>
            The message
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Exceptions.AODLWarning">
            <summary>
            You can use an AODLWarning instead of an AODLException
            if the whole result isn't really in danger.
            </summary>
        </member>
        <member name="M:AODL.Document.Exceptions.AODLWarning.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Exceptions.AODLWarning"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Exceptions.AODLWarning.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Exceptions.AODLWarning"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:AODL.Document.Export.Html.HTMLContentBuilder">
            <summary>
            HTMLContentBuilder offer public  methods
            to build HTML element string from AODL
            OpenDocument objects.
            </summary>
        </member>
        <member name="F:AODL.Document.Export.Html.HTMLContentBuilder._nextImageMapName">
            <summary>
            The next image map name. A frame will check if it contain
            a image map and will set the name which will be used
            by the next graphic and image map.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Export.Html.HTMLContentBuilder"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Export.Html.HTMLContentBuilder"/> class.
            </summary>
            <param name="graphicTargetFolder">The graphic target folder.</param>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetIContentCollectionAsHtml(AODL.Document.Content.IContentCollection)">
            <summary>
            Gets the I content collection as HTML.
            </summary>
            <param name="iContentCollection">The i content collection.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetITextCollectionAsHtml(AODL.Document.Content.Text.ITextCollection,AODL.Document.Styles.ParagraphStyle)">
            <summary>
            Gets the I text collection as HTML.
            </summary>
            <param name="iTextCollection">The i text collection.</param>
            <param name="paragraphStyle">The paragraph style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetMixedContentAsHTML(System.Collections.ArrayList,AODL.Document.Styles.ParagraphStyle)">
            <summary>
            Gets the mixed content as HTML.
            </summary>
            <param name="mixedContent">ArrayList of objects. The objects could be
            IContent or IText.</param>
            <param name="paragraphStyle">The paragraph style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetTableOfContentsAsHtml(AODL.Document.Content.Text.Indexes.TableOfContents)">
            <summary>
            Gets the table of contents as HTML.
            </summary>
            <param name="tableOfContents">The table of contents.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetTableAsHtml(AODL.Document.Content.Tables.Table)">
            <summary>
            Gets the table as HTML.
            </summary>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetRowAsHtml(AODL.Document.Content.Tables.Row)">
            <summary>
            Gets the row as HTML.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetCellAsHtml(AODL.Document.Content.Tables.Cell)">
            <summary>
            Gets the cell as HTML.
            </summary>
            <param name="cell">The cell.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetParagraphAsHtml(AODL.Document.Content.Text.Paragraph)">
            <summary>
            Gets the paragraph as HTML.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetHeadingAsHtml(AODL.Document.Content.Text.Header)">
            <summary>
            Gets the heading as HTML.
            </summary>
            <param name="heading">The heading.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetOutlineString(AODL.Document.Content.Text.Header)">
            <summary>
            Gets the outline string.
            </summary>
            <param name="header">The header.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetListAsHtml(AODL.Document.Content.Text.List)">
            <summary>
            Gets the list as HTML.
            </summary>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetFieldAsHtml(AODL.Document.Content.Fields.Field)">
            <summary>
            Gets a Field as HTML.
            </summary>
            <param name="list">The field reference.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetODFControlAsHtml(AODL.Document.Forms.Controls.ODFControlRef)">
            <summary>
            Gets a ODFControlRef as HTML.
            </summary>
            <param name="list">The control reference.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetListItemAsHtml(AODL.Document.Content.Text.ListItem)">
            <summary>
            Gets the list item as HTML.
            </summary>
            <param name="listItem">The list item.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetDrawFrameAsHtml(AODL.Document.Content.Draw.Frame)">
            <summary>
            Gets the draw frame as HTML.
            </summary>
            <param name="frame">The frame.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetDrawTextBoxAsHtml(AODL.Document.Content.Draw.DrawTextBox)">
            <summary>
            Gets the draw text box as HTML.
            </summary>
            <param name="drawTextBox">The draw text box.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetImageMapAsHtml(AODL.Document.Content.Draw.ImageMap)">
            <summary>
            Gets the image map as HTML.
            </summary>
            <param name="imageMap">The image map.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetDrawAreaAsHtml(AODL.Document.Content.Draw.DrawArea)">
            <summary>
            Gets the draw rectangle as HTML.
            </summary>
            <param name="drawArea">The draw area.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetGraphicAsHtml(AODL.Document.Content.Draw.Graphic)">
            <summary>
            Gets the graphic as HTML.
            </summary>
            <param name="graphic">The graphic.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetUnknowContentAsHtml(AODL.Document.Content.UnknownContent)">
            <summary>
            Gets the unknow content as HTML.
            AODL will try to search inside the node of the UnknownContent
            object for content this could be displayed.
            </summary>
            <param name="unknownContent">Content of the unknown.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetFormatedTextAsHtml(AODL.Document.Content.Text.FormatedText)">
            <summary>
            Gets the formated text as HTML.
            </summary>
            <param name="formatedText">The formated text.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetXLinkAsHtml(AODL.Document.Content.Text.XLink)">
            <summary>
            Gets the X link as HTML.
            </summary>
            <param name="xLink">The x link.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetAnchorLink(System.String,AODL.Document.Content.Text.XLink)">
            <summary>
            Gets the anchor link.
            </summary>
            <param name="outlineLinkTarget">The outline link target.</param>
            <param name="xLink">The x link.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetUnknowTextContentAsHtml(AODL.Document.Content.Text.UnknownTextContent)">
            <summary>
            Gets the unknow text content as HTML.
            Maybe it's a bibliographic index or something else.
            The method will try to find text that could be displayed.
            </summary>
            <param name="unknownTextContent">Content of the unknown text.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetTabStopAsHtml(AODL.Document.Content.Text.TextControl.TabStop,System.Int32,System.String,AODL.Document.Styles.ParagraphStyle)">
            <summary>
            Gets the tab stop as HTML.
            Because of the fact that no tabstop html element exist,
            AODL will try to simulate this with a the non breaking 
            line entity.
            </summary>
            <param name="tabStop">The tab stop.</param>
            <param name="tabStopIndex">The tab stop position from all tabstops from the textcollectio,
            where this tabstop belongs to.</param>
            <param name="htmlStringBefore">The complete html string before this tabstop.</param>
            <param name="paragraphStyle">The paragraph style from the enclosing paragraph.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetWhiteSpacesAsHtml(AODL.Document.Content.Text.TextControl.WhiteSpace)">
            <summary>
            Gets the white spaces as HTML.
            </summary>
            <param name="whiteSpace">The white space.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.GetLineBreakAsHtml">
            <summary>
            Gets the line break as HTML.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLContentBuilder.ReplaceControlNodes(System.String)">
            <summary>
            Replaces the control nodes.
            </summary>
            <param name="text">The text.</param>
            <returns>The cleaned text</returns>
        </member>
        <member name="E:AODL.Document.Export.Html.HTMLContentBuilder.OnWarning">
            <summary>
            OnWarning event fired if something unexpected
            occour.
            </summary>
        </member>
        <member name="P:AODL.Document.Export.Html.HTMLContentBuilder.HTMLStyleBuilder">
            <summary>
            Gets or sets the HTML style builder.
            </summary>
            <value>The HTML style builder.</value>
        </member>
        <member name="P:AODL.Document.Export.Html.HTMLContentBuilder.GraphicTargetFolder">
            <summary>
            Gets or sets the graphic target folder.
            </summary>
            <value>The graphic target folder.</value>
        </member>
        <member name="T:AODL.Document.Export.Html.HTMLContentBuilder.Warning">
            <summary>
            Warning delegate
            </summary>
        </member>
        <member name="T:AODL.Document.Export.Html.HTMLStyleBuilder">
            <summary>
            HTMLStyleBuilder offer public  methods
            to build HTML style strings from AODL
            OpenDocument IStyle objects and from
            global style nodes
            </summary>
        </member>
        <member name="F:AODL.Document.Export.Html.HTMLStyleBuilder.CSSStyle">
            <summary>
            Global css style for text standards
            </summary>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLStyleBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Export.Html.HTMLStyleBuilder"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLStyleBuilder.GetParagraphStyleAsHtml(AODL.Document.Styles.ParagraphStyle)">
            <summary>
            Gets the paragraph style as HTML.
            </summary>
            <param name="paragraphStyle">The paragraph style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLStyleBuilder.GetCellStyleAsHtml(AODL.Document.Styles.CellStyle)">
            <summary>
            Gets the cell style as HTML.
            </summary>
            <param name="cellStyle">The cell style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLStyleBuilder.GetColumnStyleAsHtml(AODL.Document.Styles.ColumnStyle)">
            <summary>
            Gets the column style as HTML.
            </summary>
            <param name="columnStyle">The column style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLStyleBuilder.GetTableStyleAsHtml(AODL.Document.Styles.TableStyle)">
            <summary>
            Gets the table style as HTML.
            </summary>
            <param name="tableStyle">The table style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLStyleBuilder.GetFrameStyleAsHtml(AODL.Document.Content.Draw.Frame)">
            <summary>
            Gets the frame style as HTML.
            </summary>
            <param name="frame">The frame.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLStyleBuilder.GetTextStyleAsHtml(AODL.Document.Styles.Properties.TextProperties)">
            <summary>
            Gets the text style as HTML.
            </summary>
            <param name="textStyle">The text style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLStyleBuilder.GetHeadingStyleAsHtml(AODL.Document.Content.Text.Header)">
            <summary>
            Gets the heading style as HTML.
            </summary>
            <param name="header">The header.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.Html.HTMLStyleBuilder.GetAGlobalStylAsHtml(AODL.Document.IDocument,System.String)">
            <summary>
            Gets the A global styl as HTML.
            </summary>
            <param name="document">The document.</param>
            <param name="styleName">Name of the style.</param>
            <returns></returns>
        </member>
        <member name="E:AODL.Document.Export.Html.HTMLStyleBuilder.OnWarning">
            <summary>
            OnWarning event fired if something unexpected
            occour.
            </summary>
        </member>
        <member name="P:AODL.Document.Export.Html.HTMLStyleBuilder.HeaderHtmlStyles">
            <summary>
            Gets the header html styles.
            </summary>
            <value>The headings.</value>
        </member>
        <member name="T:AODL.Document.Export.Html.HTMLStyleBuilder.Warning">
            <summary>
            Warning delegate
            </summary>
        </member>
        <member name="T:AODL.Document.Export.Html.OpenDocumentHtmlExporter">
            <summary>
            Export the OpenDocument content as Html
            </summary>
        </member>
        <member name="T:AODL.Document.Export.IExporter">
            <summary>
            IExporter all classes that want to act as exporter
            have to implement this interface.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.IExporter.Export(AODL.Document.IDocument,System.String)">
            <summary>
            Exports the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="P:AODL.Document.Export.IExporter.ExportError">
            <summary>
            Gets the export erros.
            </summary>
            <value>The export erros.</value>
        </member>
        <member name="P:AODL.Document.Export.IExporter.DocumentSupportInfos">
            <summary>
            ArrayList of DocumentSupportInfo objects
            </summary>
            <value>ArrayList of DocumentSupportInfo objects.</value>
        </member>
        <member name="T:AODL.Document.Export.IPublisherInfo">
            <summary>
            Information about Author, Info url
            and description of the importer
            resp. exporter.
            </summary>
        </member>
        <member name="P:AODL.Document.Export.IPublisherInfo.Author">
            <summary>
            The name the Author
            </summary>
        </member>
        <member name="P:AODL.Document.Export.IPublisherInfo.InfoUrl">
            <summary>
            Url to a info site
            </summary>
        </member>
        <member name="P:AODL.Document.Export.IPublisherInfo.Description">
            <summary>
            Description about the exporter resp. importer
            </summary>
        </member>
        <member name="M:AODL.Document.Export.Html.OpenDocumentHtmlExporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Export.Html.OpenDocumentHtmlExporter"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.Html.OpenDocumentHtmlExporter.Export(AODL.Document.IDocument,System.String)">
            <summary>
            Exports the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:AODL.Document.Export.Html.OpenDocumentHtmlExporter.GetTemplate">
            <summary>
            Gets the template.
            </summary>
            <returns>The template as sring</returns>
        </member>
        <member name="M:AODL.Document.Export.Html.OpenDocumentHtmlExporter.AppendHtml(AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Appends the HTML.
            </summary>
            <param name="contentlist">The contentlist.</param>
            <param name="template">The template.</param>
            <returns>The filled template string</returns>
        </member>
        <member name="M:AODL.Document.Export.Html.OpenDocumentHtmlExporter.WriteHtmlFile(System.String,System.String)">
            <summary>
            Writes the HTML file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="html">The HTML.</param>
        </member>
        <member name="M:AODL.Document.Export.Html.OpenDocumentHtmlExporter.SetMetaContent(System.String)">
            <summary>
            Sets the content of the meta.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Export.Html.OpenDocumentHtmlExporter.DocumentSupportInfos">
            <summary>
            ArrayList of DocumentSupportInfo objects
            </summary>
            <value>ArrayList of DocumentSupportInfo objects.</value>
        </member>
        <member name="P:AODL.Document.Export.Html.OpenDocumentHtmlExporter.ExportError">
            <summary>
            Gets the export error.
            </summary>
            <value>The export error.</value>
        </member>
        <member name="P:AODL.Document.Export.Html.OpenDocumentHtmlExporter.Author">
            <summary>
            The name the Author
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Export.Html.OpenDocumentHtmlExporter.InfoUrl">
            <summary>
            Url to a info site
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Export.Html.OpenDocumentHtmlExporter.Description">
            <summary>
            Description about the exporter resp. importer
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter">
            <summary>
            OpenDocumentTextExporter is the standard exporter of AODL for the export
            of documents in the OpenDocument format.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.Export(AODL.Document.IDocument,System.String)">
            <summary>
            Exports the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.WriteSingleFiles(System.Xml.XmlDocument,System.String)">
            <summary>
            Writes the single files.
            </summary>
            <param name="document">The document.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.CreateOpenDocument(System.String,System.String)">
            <summary>
            Create a zip archive with .odt.
            </summary>
            <param name="filename">The filename.</param>
            <param name="directory">The directory to zip.</param>
        </member>
        <member name="M:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.PrepareDirectory(System.String)">
            <summary>
            Create an output directory with all necessary subfolders.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.WriteMimetypeFile(System.String)">
            <summary>
            Helper Method: Don't know why, but it seems to be impossible
            to embbed a textfile as resource
            </summary>
            <param name="file">The filename.</param>
        </member>
        <member name="M:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.CleanUpReadAndWriteDirectories">
            <summary>
            Cleans the up read and write directories.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.CopyGraphics(AODL.Document.IDocument,System.String)">
            <summary>
            Copies the graphics.
            </summary>
            <param name="document">The document.</param>
            <param name="directory">The directory.</param>
        </member>
        <member name="P:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.DocumentSupportInfos">
            <summary>
            ArrayList of DocumentSupportInfo objects
            </summary>
            <value>ArrayList of DocumentSupportInfo objects.</value>
        </member>
        <member name="P:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.ExportError">
            <summary>
            Gets the export error.
            </summary>
            <value>The export error.</value>
        </member>
        <member name="P:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.Author">
            <summary>
            The name the Author
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.InfoUrl">
            <summary>
            Url to a info site
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Export.OpenDocument.OpenDocumentTextExporter.Description">
            <summary>
            Description about the exporter resp. importer
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Export.ExportHandler">
            <summary>
            ExportHandler class to get the right IExporter implementations
            for the document to export.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.ExportHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Export.ExportHandler"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.ExportHandler.GetFirstExporter(AODL.Document.DocumentTypes,System.String)">
            <summary>
            Gets the first exporter that match the parameter criteria.
            </summary>
            <param name="documentType">Type of the document.</param>
            <param name="savePath">The save path.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.ExportHandler.LoadExporter">
            <summary>
            Load internal and external exporter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Export.ExportHandler.GetExtension(System.String)">
            <summary>
            Gets the extension.
            </summary>
            <param name="aFullPathOrFileName">Name of a full path or file.</param>
            <returns></returns>
        </member>
        <member name="T:AODL.Document.Export.DocumentSupportInfo">
            <summary>
            DocumentSupportInfo is used within a implementation
            of IImporter and IExporter for determining
            which file extension and which DocumentType
            will be supported.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.DocumentSupportInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Export.DocumentSupportInfo"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Export.DocumentSupportInfo.#ctor(System.String,AODL.Document.DocumentTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Export.DocumentSupportInfo"/> class.
            </summary>
            <param name="extension">The extension.</param>
            <param name="documentTyp">The document typ.</param>
        </member>
        <member name="P:AODL.Document.Export.DocumentSupportInfo.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
            <value>The extension.</value>
        </member>
        <member name="P:AODL.Document.Export.DocumentSupportInfo.DocumentType">
            <summary>
            Gets or sets the type of the document.
            </summary>
            <value>The type of the document.</value>
        </member>
        <member name="T:AODL.Document.Forms.Controls.ODFFormControl">
            <summary>
            Summary description for IODFFormControl.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFFormControl.GetFormProperty(System.String)">
            <summary>
            Look for a control generic property by its name
            </summary>
            <param name="name">Property name</param>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.Properties">
            <summary>
            Collection of generic form properties (form:property in ODF)
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.ParentForm">
            <summary>
            Parent form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.Node">
            <summary>
            XML node that represents the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.ControlImplementation">
            <summary>
            Control implementation. Don't change it unless required
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.Name">
            <summary>
            The name of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.ID">
            <summary>
            Control ID
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.Type">
            <summary>
            Returns the type of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.X">
            <summary>
            X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.Y">
            <summary>
            Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.Width">
            <summary>
            Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.Height">
            <summary>
            Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.ZIndex">
            <summary>
            Control's Z index
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.Style">
            <summary>
            A Style class which is referenced with the content object.
            If no style is available this is null.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.StyleName">
            <summary>
            Style name
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.TextStyleName">
            <summary>
            Text style name
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.TextStyle">
            <summary>
            A text style.
            If no style is available this is null.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.AnchorPageNumber">
            <summary>
            Number of page to use as an anchor
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.AnchorType">
            <summary>
            What to use as an anchor
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.TableBackground">
            <summary>
            Table background
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormControl.Transform">
            <summary>
            Transform. For the details, see ODF v1.0 specification
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFButton.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFButton
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFButton.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFButton
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.Label">
            <summary>
            Contains a label for the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.ImageData">
            <summary>
            Links the control to an external file containing image data
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.Toggle">
            <summary>
            specifies whether a form button control, when it is operated (via 
            mouse or keyboard), should be toggled between a "pressed" and a "not pressed" state
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.DefaultButton">
            <summary>
            Determines whether  or not the button is the default button on the form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.FocusOnClick">
            <summary>
            Specifies whether a form button control should grab the focus when it is clicked with the mouse
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.ButtonType">
            <summary>
            Specifies the type of the button
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.TargetFrame">
            <summary>
            Specifies the target frame
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFButton.TargetLocation">
            <summary>
            Specifies the URL that is loaded if a button is clicked
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFCheckBox.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFCheckBox
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFCheckBox.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFCheckBox
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.Label">
            <summary>
            Contains a label for the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.IsTristate">
            <summary>
            Specifies that the check box can have three states instead of 
            the common two states
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.VisualEffect">
            <summary>
            Specifies a visual affect to apply to a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.ImagePosition">
            <summary>
            Specifies the position of an image to be displayed in a form control, relative to the label text
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.ImageAlign">
            <summary>
            Specifies the position of an image to be displayed in a form control, relative to the label text
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.State">
            <summary>
            Specifies the default state of the check box control. This state is used 
            to initialize the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFCheckBox.CurrentState">
            <summary>
            Specifies the current state of the check box contro
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFComboBox.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFComboBox
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFComboBox.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFComboBox
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFComboBox.GetItemByLabel(System.String)">
            <summary>
            Looks for a specified item by its label
            </summary>
            <param name="val">Option value</param>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.Items">
            <summary>
            Collection of combo box items
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.AutoComplete">
            <summary>
            Specifies whether, when the user enters text in the 
            combobox that matches one of the list items in the combobox, the application automatically 
            completes the text for the user.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.ListSource">
            <summary>
            Specifies the source used to populate the list in a list box or 
            combo box. The first column of the list source result set populates the list.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.ListSourceType">
            <summary>
            Specifies the type of data source that is used to 
            populate the list data in a list box or combo box
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.DropDown">
            <summary>
            Specifies whether the list in a combo box or list box is always 
            visible or is only visible when the user clicks the drop-down button
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.Size">
            <summary>
            specifies the number of rows that are visible at a time in a combo box 
            list or a list box list
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.ConvertEmptyToNull">
            <summary>
            specifies whether or not empty current values are regarded as NULL
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.CurrentValue">
            <summary>
            Specifies the current status of an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.MaxLength">
            <summary>
            Specifies the maximum number of characters that a user can 
            enter in an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFComboBox.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="T:AODL.Document.Forms.Controls.AnchorType">
            <summary>
            Summary description for ODFControlRef.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFControlRef.Node">
            <summary>
            Represents the XmlNode within the content.xml from the odt file.
            </summary>
            
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFControlRef.StyleName">
            <summary>
            The stylename which is referenced with the content object.
            If no style is available this is null.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFControlRef.TextStyleName">
            <summary>
            The text style name.
            If no style is available this is null.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFControlRef.TextStyle">
            <summary>
            A Style class wich is referenced with the text content object.
            If no style is available this is null.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFControlRef.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
        </member>
        <member name="T:AODL.Document.Forms.Controls.ODFControlsCollection">
            <summary>
            Summary description for ODFControlsCollection.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFControlsCollection.FindControlById(System.String)">
            <summary>
            Looks up a specific control by its id
            </summary>
            <param name="id">Control ID</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFControlsCollection.Add(AODL.Document.Forms.Controls.ODFFormControl)">
            <summary>
            Adds the specified control
            </summary>
            <param name="value">Control to be added</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFControlsCollection.Remove(AODL.Document.Forms.Controls.ODFFormControl)">
            <summary>
            Removes the specified control.
            </summary>
            <param name="value">The control.</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFControlsCollection.Insert(System.Int32,AODL.Document.Forms.Controls.ODFFormControl)">
            <summary>
            Inserts a control at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFControlsCollection.Contains(AODL.Document.Forms.Controls.ODFFormControl)">
            <summary>
            Determines whether the collection contains the specified control.
            </summary>
            <param name="value">The control.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFControlsCollection.Item(System.Int32)">
            <summary>
            Gets the control at the specified index.
            </summary>
            <value>Index</value>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFDate.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFDate. 
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFDate.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFDate
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.MaxLength">
            <summary>
            Specifies the maximum number of characters that a user can 
            enter in an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.MinValue">
            <summary>
            Specifies the minimum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.MaxValue">
            <summary>
            Specifies the maximum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.ConvertEmptyToNull">
            <summary>
            specifies whether or not empty current values are regarded as NULL
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFDate.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFFile.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFFile
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFFile.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFFile
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFile.CurrentValue">
            <summary>
            Specifies the current status of an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFile.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFile.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFile.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFile.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFile.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFile.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFile.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFFixedText.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFFixedText
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFFixedText.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFFixedText
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFixedText.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFixedText.For">
            <summary>
            Specifies the IDs of the controls with which control element is labeling
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFixedText.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFixedText.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFixedText.MultiLine">
            <summary>
            Specifies whether or not the label is displayed on multiple lines
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFixedText.Label">
            <summary>
            Contains a label for the control
            </summary>
        </member>
        <member name="T:AODL.Document.Forms.Controls.ODFFormattedText">
            <summary>
            Summary description for ODFFormattedText.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFTextArea.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFTextArea
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFTextArea.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFTextArea
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.CurrentValue">
            <summary>
            Specifies the current status of an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.MaxLength">
            <summary>
            Specifies the maximum number of characters that a user can 
            enter in an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTextArea.ConvertEmptyToNull">
            <summary>
            specifies whether or not empty current values are regarded as NULL
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFFormattedText.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFFormattedText
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFFormattedText.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFFormattedText
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.MinValue">
            <summary>
            Specifies the minimum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.MaxValue">
            <summary>
            Specifies the maximum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.Validation">
            <summary>
            Specifies whether or not the text that the user enters is 
            validated during input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.CurrentValue">
            <summary>
            Specifies the current status of an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.MaxLength">
            <summary>
            Specifies the maximum number of characters that a user can 
            enter in an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.ConvertEmptyToNull">
            <summary>
            specifies whether or not empty current values are regarded as NULL
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFormattedText.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFFrame.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFFrame
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFFrame.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFFrame
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFrame.Label">
            <summary>
            Contains a label for the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFrame.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFrame.For">
            <summary>
            Specifies the IDs of the controls with which control element is labeling
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFrame.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFFrame.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGrid.GetColumnByName(System.String)">
            <summary>
            Looks for a specified column by its value
            </summary>
            <param name="val">column value</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGrid.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFGrid
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGrid.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFGrid
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGrid.Columns">
            <summary>
            The collection of the ODFGridColumns (each column stand for a list box element)
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGrid.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGrid.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGrid.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGrid.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGrid.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGridColumn.#ctor(AODL.Document.IDocument,System.String,System.String,System.String)">
            <summary>
            Creates an ODFGridColumn
            </summary>
            <param name="document">Main document</param>
            <param name="name">Column name</param>
            <param name="label">Column label</param>
            <param name="style">Column style</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGridColumn.#ctor(AODL.Document.IDocument,System.String,System.String)">
            <summary>
            Creates an ODFGridColumn
            </summary>
            <param name="document">Main document</param>
            <param name="name">Column name</param>
            <param name="label">Column label</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGridColumn.#ctor(AODL.Document.IDocument)">
            <summary>
            Creates an ODFGridColumn
            </summary>
            <param name="document">Main document</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGridColumn.Document">
            <summary>
            The document
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGridColumn.Name">
            <summary>
            Specifies the name of the column
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGridColumn.Label">
            <summary>
            Specifies the label of the column
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGridColumn.ColumnStyle">
            <summary>
            Specifies the style of the column
            </summary>
        </member>
        <member name="T:AODL.Document.Forms.Controls.ODFGridColumnCollection">
            <summary>
            A typed IContent Collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGridColumnCollection.Add(AODL.Document.Forms.Controls.ODFGridColumn)">
            <summary>
            Adds the specified ODFGridColumn.
            </summary>
            <param name="value">The option.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGridColumnCollection.Remove(AODL.Document.Forms.Controls.ODFGridColumn)">
            <summary>
            Removes the specified ODFGridColumn.
            </summary>
            <param name="value">The option.</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGridColumnCollection.Insert(System.Int32,AODL.Document.Forms.Controls.ODFGridColumn)">
            <summary>
            Inserts the specified ODFGridColumn at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The option.</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFGridColumnCollection.Contains(AODL.Document.Forms.Controls.ODFGridColumn)">
            <summary>
            Determines whether the collection contains the specifies ODFGridColumn
            </summary>
            <param name="value">The option.</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFGridColumnCollection.Item(System.Int32)">
            <summary>
            Gets the ODFGridColumn at the specified index.
            </summary>
            <value>Index</value>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFHidden.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFHidden
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFHidden.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFHidden
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFHidden.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFImage.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFImage
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFImage.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFImage
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.ImageData">
            <summary>
            Links the control to an external file containing image data
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.ButtonType">
            <summary>
            Specifies the type of the button
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.TargetFrame">
            <summary>
            Specifies the target frame
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImage.TargetLocation">
            <summary>
            Specifies the URL that is loaded if a button is clicked
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFImageFrame.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFImageFrame
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFImageFrame.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFImageFrame
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImageFrame.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImageFrame.ImageData">
            <summary>
            Links the control to an external file containing image data
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImageFrame.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImageFrame.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImageFrame.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFImageFrame.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFItem.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Creates an ODFItem instance
            </summary>
            <param name="document">The document it belogs to</param>
            <param name="label">Item label</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFItem.#ctor(AODL.Document.IDocument)">
            <summary>
            Creates an ODFItem instance
            </summary>
            <param name="document">The document it belogs to</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFItem.Document">
            <summary>
            The document
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFItem.Label">
            <summary>
            Contains a label for the control
            </summary>
        </member>
        <member name="T:AODL.Document.Forms.Controls.ODFItemCollection">
            <summary>
            A typed IContent Collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFItemCollection.Add(AODL.Document.Forms.Controls.ODFItem)">
            <summary>
            Adds the specified ODFItem.
            </summary>
            <param name="value">The item.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFItemCollection.Remove(AODL.Document.Forms.Controls.ODFItem)">
            <summary>
            Removes the specified ODFItem.
            </summary>
            <param name="value">The item.</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFItemCollection.Insert(System.Int32,AODL.Document.Forms.Controls.ODFItem)">
            <summary>
            Inserts the specified item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The item.</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFItemCollection.Contains(AODL.Document.Forms.Controls.ODFItem)">
            <summary>
            Determines whether the collection contains the specified item
            </summary>
            <param name="value">The item.</param>
            <returns>
            	<c>true</c> if the collection contains the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFItemCollection.Item(System.Int32)">
            <summary>
            Gets the ODFItem at the specified index.
            </summary>
            <value>Index</value>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFListBox.GetOptionByValue(System.String)">
            <summary>
            Looks for a specified option by its value
            </summary>
            <param name="val">Option value</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFListBox.GetOptionByLabel(System.String)">
            <summary>
            Looks for a specified option by its label
            </summary>
            <param name="lbl">Option label</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFListBox.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFListBox
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFListBox.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFListBox
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.Options">
            <summary>
            The collection of the ODFOptions (each option stand for a list box element)
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.ListSource">
            <summary>
            Specifies the source used to populate the list in a list box or 
            combo box. The first column of the list source result set populates the list.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.BoundColumn">
            <summary>
            Specifies the column values of the list source result set that 
            are used to fill the data field values
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.ListSourceType">
            <summary>
            Specifies the type of data source that is used to 
            populate the list data in a list box or combo box
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.DropDown">
            <summary>
            Specifies whether the list in a combo box or list box is always 
            visible or is only visible when the user clicks the drop-down button
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.Size">
            <summary>
            specifies the number of rows that are visible at a time in a combo box 
            list or a list box list
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFListBox.ConvertEmptyToNull">
            <summary>
            specifies whether or not empty current values are regarded as NULL
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFNumber.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFNumber
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFNumber.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFNumber
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.MaxLength">
            <summary>
            Specifies the maximum number of characters that a user can 
            enter in an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.MinValue">
            <summary>
            Specifies the minimum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.MaxValue">
            <summary>
            Specifies the maximum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.ConvertEmptyToNull">
            <summary>
            specifies whether or not empty current values are regarded as NULL
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFNumber.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFOption.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Creates an ODFOption
            </summary>
            <param name="document">Main document</param>
            <param name="label">Option label</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFOption.#ctor(AODL.Document.IDocument,System.String,System.String)">
            <summary>
            Creates an ODFOption
            </summary>
            <param name="document">Main document</param>
            <param name="label">Option label</param>
            <param name="val">Option value</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFOption.#ctor(AODL.Document.IDocument,System.String,System.String,AODL.Document.XmlBoolean)">
            <summary>
            Creates an ODFOption
            </summary>
            <param name="document">Main document</param>
            <param name="label">Option label</param>
            <param name="val">Option value</param>
            <param name="currentSelected">Is it currently selected?</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFOption.#ctor(AODL.Document.IDocument)">
            <summary>
            Creates an ODFOption
            </summary>
            <param name="document">Main document</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFOption.Document">
            <summary>
            The document
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFOption.CurrentSelected">
            <summary>
            Specifies if the option is currently selected
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFOption.Selected">
            <summary>
            Specifies the default state of a radio button or option
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFOption.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFOption.Label">
            <summary>
            Contains a label for the control
            </summary>
        </member>
        <member name="T:AODL.Document.Forms.Controls.ODFOptionCollection">
            <summary>
            A typed IContent Collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFOptionCollection.Add(AODL.Document.Forms.Controls.ODFOption)">
            <summary>
            Adds the specified ODFOption.
            </summary>
            <param name="value">The option.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFOptionCollection.Remove(AODL.Document.Forms.Controls.ODFOption)">
            <summary>
            Removes the specified ODFOption.
            </summary>
            <param name="value">The option.</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFOptionCollection.Insert(System.Int32,AODL.Document.Forms.Controls.ODFOption)">
            <summary>
            Inserts the specified ODFOption at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The option.</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFOptionCollection.Contains(AODL.Document.Forms.Controls.ODFOption)">
            <summary>
            Determines whether the collection contains the specifies ODFOption
            </summary>
            <param name="value">The option.</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFOptionCollection.Item(System.Int32)">
            <summary>
            Gets the ODFOption at the specified index.
            </summary>
            <value>Index</value>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFRadioButton.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFRadioButton
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFRadioButton.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFRadioButton
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.Label">
            <summary>
            Contains a label for the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.Selected">
            <summary>
            Specifies the default state of a radio button or option
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.CurrentSelected">
            <summary>
            Specifies if the radio button is currently selected
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.VisualEffect">
            <summary>
            Specifies a visual affect to apply to a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.ImagePosition">
            <summary>
            Specifies the position of an image to be displayed in a form control, relative to the label text
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFRadioButton.ImageAlign">
            <summary>
            Specifies the position of an image to be displayed in a form control, relative to the label text
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFText.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFText
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFText.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFText
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.CurrentValue">
            <summary>
            Specifies the current status of an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.MaxLength">
            <summary>
            Specifies the maximum number of characters that a user can 
            enter in an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFText.ConvertEmptyToNull">
            <summary>
            specifies whether or not empty current values are regarded as NULL
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFTime.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFTime
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFTime.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFTime
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.MaxLength">
            <summary>
            Specifies the maximum number of characters that a user can 
            enter in an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.MinValue">
            <summary>
            Specifies the minimum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.MaxValue">
            <summary>
            Specifies the maximum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.ConvertEmptyToNull">
            <summary>
            specifies whether or not empty current values are regarded as NULL
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFTime.DataField">
            <summary>
            Specifies the name of a result set column. The result set is 
            determined by the form which the control belongs to
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFValueRange.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String)">
            <summary>
            Creates an ODFValueRange
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
        </member>
        <member name="M:AODL.Document.Forms.Controls.ODFValueRange.#ctor(AODL.Document.Forms.ODFForm,AODL.Document.Content.IContentCollection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ODFValueRange
            </summary>
            <param name="ParentForm">Parent form that the control belongs to</param>
            <param name="contentCollection">Collection of content where the control will be referenced</param>
            <param name="id">Control ID. Please specify a unique ID!</param>
            <param name="x">X coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="y">Y coordinate of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="width">Width of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
            <param name="height">Height of the control in ODF format (eg. "1cm", "15mm", 3.2cm" etc)</param>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.CurrentValue">
            <summary>
            Specifies the current status of an input control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.Disabled">
            <summary>
            Specifies whether or not a control can accept user input
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.Value">
            <summary>
            Specifies the default value of the control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.Title">
            <summary>
            Contains additional information about a control.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.TabIndex">
            <summary>
            Specifies the tabbing navigation order of a control within a form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.TabStop">
            <summary>
            Specifies whether or not a control is included in the tabbing 
            navigation order
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.Printable">
            <summary>
            Specifies whether or not a control is printed when a user prints 
            the document in which the control is contained
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.ReadOnly">
            <summary>
            Specifies whether or not a user can modify the value of a control
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.MinValue">
            <summary>
            Specifies the minimum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.MaxValue">
            <summary>
            Specifies the maximum value that a user can enter.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.StepSize">
            <summary>
            Specifies the increment to be used for a control representing a value
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.PageStepSize">
            <summary>
            Specifies a second-level increment to be used for a control representing a value
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.RepeatDelay">
            <summary>
            Specifies a time-out to be used  before a pressed mouse button results in repeating an action
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.Controls.ODFValueRange.Orientation">
            <summary>
            Specifies the orientation of the control, which could be either 
            horizontal or vertical
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.FormProperty.Node">
            <summary>
            The XML node representing the property
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.FormProperty.Document">
            <summary>
            The document that contains the form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.FormProperty.Name">
            <summary>
            Property name
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.SingleFormProperty.#ctor(AODL.Document.IDocument,AODL.Document.Forms.PropertyValueType,System.String,System.String)">
            <summary>
            Creates the SingleFormProperty
            </summary>
            <param name="document">Document containing the form</param>
            <param name="PropValueType">Type of the property value</param>
            <param name="PropName">Property name</param>
            <param name="PropValue">Property value</param>
        </member>
        <member name="M:AODL.Document.Forms.SingleFormProperty.#ctor(AODL.Document.IDocument,AODL.Document.Forms.PropertyValueType)">
            <summary>
            Creates the SingleFormProperty
            </summary>
            <param name="document">Document containing the form</param>
            <param name="PropValueType">Type of the property value</param>
        </member>
        <member name="P:AODL.Document.Forms.SingleFormProperty.Value">
            <summary>
            Property value
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.SingleFormProperty.Name">
            <summary>
            Property name
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.ListFormPropertyElement.#ctor(AODL.Document.Forms.ListFormProperty,System.String)">
            <summary>
            Creates the ListFormPropertyElement
            </summary>
            <param name="property">Property containing this element</param>
            <param name="PropValue">Element value</param>
        </member>
        <member name="M:AODL.Document.Forms.ListFormPropertyElement.#ctor(AODL.Document.Forms.ListFormProperty)">
            <summary>
            Creates the ListFormPropertyElement
            </summary>
            <param name="property">Property containing this element</param>
        </member>
        <member name="P:AODL.Document.Forms.ListFormPropertyElement.Node">
            <summary>
            XML node representing the ListFormProperty element
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ListFormPropertyElement.Document">
            <summary>
            Main document
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ListFormPropertyElement.Value">
            <summary>
            Element value
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.ListFormProperty.#ctor(AODL.Document.IDocument,AODL.Document.Forms.PropertyValueType)">
            <summary>
            Creates the ListFormProperty
            </summary>
            <param name="document">Main document</param>
            <param name="PropValueType">Property value type</param>
        </member>
        <member name="P:AODL.Document.Forms.ListFormProperty.PropertyValues">
            <summary>
            Get the list of property elements
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ListFormProperty.Name">
            <summary>
            Propert name
            </summary>
        </member>
        <member name="T:AODL.Document.Forms.FormPropertyCollection">
            <summary>
            A typed IContent Collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.FormPropertyCollection.Add(AODL.Document.Forms.FormProperty)">
            <summary>
            Adds the specified form property to the collection.
            </summary>
            <param name="value">The form property to be added.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.FormPropertyCollection.Remove(AODL.Document.Forms.FormProperty)">
            <summary>
            Removes the specified form property from the collection
            </summary>
            <param name="value">The form property to be deleted.</param>
        </member>
        <member name="M:AODL.Document.Forms.FormPropertyCollection.Insert(System.Int32,AODL.Document.Forms.FormProperty)">
            <summary>
            Inserts the specified form property at the specified index
            </summary>
            <param name="index">The index.</param>
            <param name="value">The form property.</param>
        </member>
        <member name="M:AODL.Document.Forms.FormPropertyCollection.Contains(AODL.Document.Forms.FormProperty)">
            <summary>
            Determines whether the collection contains the given form property
            </summary>
            <param name="value">The form property.</param>
        </member>
        <member name="P:AODL.Document.Forms.FormPropertyCollection.Item(System.Int32)">
            <summary>
            Gets the form property at the specified index.
            </summary>
            <value>Index</value>
        </member>
        <member name="T:AODL.Document.Forms.ListFormPropertyElemCollection">
            <summary>
            A typed IContent Collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.ListFormPropertyElemCollection.Add(AODL.Document.Forms.ListFormPropertyElement)">
            <summary>
            Adds the ListFormPropertyElem.
            </summary>
            <param name="value">The ListFormPropertyElem to be added</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.ListFormPropertyElemCollection.Remove(AODL.Document.Forms.ListFormPropertyElement)">
            <summary>
            Removes the specified ListFormPropertyElem.
            </summary>
            <param name="value">The ListFormPropertyElem to be deleted</param>
        </member>
        <member name="M:AODL.Document.Forms.ListFormPropertyElemCollection.Insert(System.Int32,AODL.Document.Forms.ListFormPropertyElement)">
            <summary>
            Inserts the ListFormPropertyElem at the specified index.
            </summary>
            <param name="index">The index</param>
            <param name="value">The ListFormPropertyElem to be inserted.</param>
        </member>
        <member name="M:AODL.Document.Forms.ListFormPropertyElemCollection.Contains(AODL.Document.Forms.ListFormPropertyElement)">
            <summary>
            Determines whether the collection contains the specified value
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ListFormPropertyElemCollection.Item(System.Int32)">
            <summary>
            Gets the ListFormPropertyElem at the specified index.
            </summary>
            <value>Index</value>
        </member>
        <member name="T:AODL.Document.Forms.ODFForm">
            <summary>
            Summary description for ODFForm.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.ODFForm.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Creates an ODFForm
            </summary>
            <param name="document">Parent document</param>
            <param name="name">Form name</param>
        </member>
        <member name="M:AODL.Document.Forms.ODFForm.FindControlById(System.String,System.Boolean)">
            <summary>
            Looks up a control by its ID
            </summary>
            <param name="id">Control ID</param>
            <param name="searchInSubforms">Specifies whether to look in the subforms</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.ODFForm.FindControlByName(System.String,System.Boolean)">
            <summary>
            Looks up a control by its name
            </summary>
            <param name="id">Control name</param>
            <param name="searchInSubforms">Specifies whether to look in the subforms</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.ODFForm.GetFormProperty(System.String)">
            <summary>
            Gets the generic form property by its name
            </summary>
            <param name="name">Generic form property</param>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Href">
            <summary>
            Represents the IRI of the processing agent for the form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.ControlImplementation">
            <summary>
            Do not change it unless it is necessary
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Name">
            <summary>
            Form name
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.TargetFrame">
            <summary>
            Specifies the target frame of the form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Method">
            <summary>
            Specifies the HTTP method to use to submit the data in the form to 
            the server
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Enctype">
            <summary>
             Specifies the content type used to submit the form to the server
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.AllowDeletes">
            <summary>
            Specifies whether or not data records can be deleted
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.AllowInserts">
            <summary>
            Specifies whether or not new data records can be inserted
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.AllowUpdates">
            <summary>
            Specifies whether or not data records can be updated
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.ApplyFilter">
            <summary>
            Specifies whether or not filters should be applied to the form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.CommandType">
            <summary>
            Specifies the type of command to execute on the data source
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Command">
            <summary>
            Specifies the command to execute on the data source
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.DataSource">
            <summary>
            Specifies the name of a data source to use for the form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.MasterFields">
            <summary>
            Specifies the names of the columns in the result set represented by the parent form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.DetailFields">
            <summary>
            Specifies the names of the columns in detail forms that are related to columns in the parent form
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.EscapeProcessing">
            <summary>
            Specifies whether or not the application processes the command before passing it to the 
            database driver
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Filter">
            <summary>
            Specifies a filter for the command to base the form on
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.NavigationMode">
            <summary>
            Specifies how the records in a database form are navigated
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.IgnoreResult">
            <summary>
            Specifies whether or not to discard all results that are 
            retrieved from the underlying data source
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Order">
            <summary>
            Specifies a sort criteria for the command.
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.TabCycle">
            <summary>
            Specifies how the application responds when the user presses 
            the TAB key in the controls in a for
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.ConnectionResource">
            <summary>
            Specifies the source database by an [XLink].
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Node">
            <summary>
            The XML node that represents the form and its content
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Document">
            <summary>
            Parent document
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Controls">
            <summary>
            List of the child controls
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.Properties">
            <summary>
            Generic form:property collection
            </summary>
        </member>
        <member name="P:AODL.Document.Forms.ODFForm.ChildForms">
            <summary>
            Child forms collection
            </summary>
        </member>
        <member name="T:AODL.Document.Forms.ODFFormCollection">
            <summary>
            A typed IContent Collection.
            </summary>
        </member>
        <member name="M:AODL.Document.Forms.ODFFormCollection.Add(AODL.Document.Forms.ODFForm)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Forms.ODFFormCollection.Remove(AODL.Document.Forms.ODFForm)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Forms.ODFFormCollection.Insert(System.Int32,AODL.Document.Forms.ODFForm)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Forms.ODFFormCollection.Contains(AODL.Document.Forms.ODFForm)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Forms.ODFFormCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:IContent"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Helper.Colors">
            <summary>
            Converter class. Convert any enum Color from System.Drawing.Color
            into his rgb hex value.
            </summary>
        </member>
        <member name="M:AODL.Document.Helper.Colors.GetColor(System.Drawing.Color)">
            <summary>
            Convert any enum Color from System.Drawing.Color
            into his rgb hex value.
            </summary>
            <param name="color">A System.Drawing.Color</param>
            <returns>The rgb hex value.</returns>
        </member>
        <member name="T:AODL.Document.Helper.SizeConverter">
            <summary>
            The SizeConverter class offer different methods for size 
            type conversation.
            </summary>
            <remarks>obsolete - don't start to use it, it will maybe deleted within an upcoming version</remarks>
        </member>
        <member name="F:AODL.Document.Helper.SizeConverter.pxtocm">
            <summary>
            Pixel to cm factor
            </summary>
        </member>
        <member name="F:AODL.Document.Helper.SizeConverter.intocm">
            <summary>
            Inch to cm factor
            </summary>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Helper.SizeConverter"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.CmToInch(System.Double)">
            <summary>
            Cms to inch.
            </summary>
            <param name="cm">The cm.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.CmToPixel(System.Double)">
            <summary>
            Cms to pixel.
            </summary>
            <param name="cm">The cm.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.MmToPixel(System.Double)">
            <summary>
            Cms to pixel.
            </summary>
            <param name="cm">The cm.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.InchToCm(System.Double)">
            <summary>
            Inches to cm.
            </summary>
            <param name="inch">The inch.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.InchToPixel(System.Double)">
            <summary>
            Inches to pixel.
            </summary>
            <param name="inch">The inch.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.InchToPixelAsString(System.Double)">
            <summary>
            Inches to pixel as string.
            </summary>
            <param name="inch">The inch.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.InchToCmAsString(System.Double)">
            <summary>
            Inches to cm as string.
            </summary>
            <param name="inch">The inch.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.CmToInchAsString(System.Double)">
            <summary>
            Cms to inch as string.
            </summary>
            <param name="cm">The cm.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.CmToPixelAsString(System.Double)">
            <summary>
            Cms to pixel as string.
            </summary>
            <param name="cm">The cm.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.GetPixelFromAnOfficeSizeValue(System.String)">
            <summary>
            Gets the pixel from an office size value.
            e.g pass 1.54cm and get back 58
            </summary>
            <param name="aSizeValue">A size value.</param>
            <returns>If something goes wrong it will return 0.</returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.GetDoubleFromAnOfficeSizeValue(System.String)">
            <summary>
            Gets the double from an office size value.
            </summary>
            <remarks>
            There is no translation between cm or inch. You will just get the
            size you posted as double value.
            </remarks>
            <param name="aSizeValue">A size value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.IsCm(System.String)">
            <summary>
            Determines whether the specified value is in cm.
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if the specified value is in cm; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.IsInch(System.String)">
            <summary>
            Determines whether the specified value is in inch.
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if the specified value is in inch; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.GetWidthInPixel(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Cacluates the width in pixel from width in cm or inch by using the horizontal resolution.
            </summary>
            <param name="width">The width.</param>
            <param name="dpiX">The dpi X.</param>
            <param name="cm">if set to <c>true</c> in cm otherwise inch.</param>
            <returns>The relative width in pixel</returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.GetHeightInPixel(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Cacluates the relative height in pixel from height in cm or inch by using the vertical resolution.
            </summary>
            <param name="height">The height.</param>
            <param name="dpiY">The dpi vertical.</param>
            <param name="cm">if set to <c>true</c> in cm otherwise inch.</param>
            <returns>The relative height in pixel</returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.GetWidthInCm(System.Int32,System.Int32)">
            <summary>
            Cacluates the width in cm from width in pixel by using the horizontal resolution.
            </summary>
            <param name="widthPixel">The width.</param>
            <param name="dpiX">The dpi X.</param>
            <returns>The real width in cm</returns>
        </member>
        <member name="M:AODL.Document.Helper.SizeConverter.GetHeightInCm(System.Int32,System.Int32)">
            <summary>
            Cacluates the height in cm from height in pixel by using the vertical resolution.
            </summary>
            <param name="heightPixel">The height.</param>
            <param name="dpiY">The dpi Y.</param>
            <returns>The real height in cm</returns>
        </member>
        <member name="T:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor">
            <summary>
            Internal class FormsProcessor. This class is for
            internal usage only!
            </summary>
        </member>
        <member name="F:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor._debugMode">
            <summary>
            If set to true all node content would be directed
            to Console.Out
            </summary>
        </member>
        <member name="F:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor._document">
            <summary>
            The textdocument
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor.ReadFormNodes">
            <summary>
            Reads the content nodes.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor.CreateCellForms(AODL.Document.Content.Tables.Table)">
            <summary>
            Creates the document forms.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor.CreateDocumentForms(System.Xml.XmlNode)">
            <summary>
            Creates the document forms.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor.CreateForm(System.Xml.XmlNode)">
            <summary>
            Gets the form.
            </summary>
            <param name="formnode">The node of the form.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor.LogNode(System.Xml.XmlNode,System.String)">
            <summary>
            Logs the node.
            </summary>
            <param name="node">The node.</param>
            <param name="msg">The MSG.</param>
        </member>
        <member name="E:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor.OnWarning">
            <summary>
            OnWarning event fired if something unexpected
            occour.
            </summary>
        </member>
        <member name="T:AODL.Document.Import.OpenDocument.NodeProcessors.FormsProcessor.Warning">
            <summary>
            Warning delegate
            </summary>
        </member>
        <member name="T:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor">
            <summary>
            LocalStyleProcessor.
            </summary>
        </member>
        <member name="F:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor._document">
            <summary>
            The document
            </summary>
        </member>
        <member name="F:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor._common">
            <summary>
            Is true if the common styles are read.
            </summary>
        </member>
        <member name="F:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor._xmlPathCommonStyle">
            <summary>
            XPath for the common styles.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.#ctor(AODL.Document.IDocument,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="readCommonStyles">if set to <c>true</c> [read common styles].</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.ReadStyles">
            <summary>
            Reads the styles.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.ReReadKnownAutomaticStyles">
            <summary>
            Re read known automatic styles.
            </summary>
            <remarks>
            NOTICE: The re read nodes will be deleted.
            </remarks>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.GetProperty(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Gets the property.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateUnknownStyle(System.Xml.XmlNode)">
            <summary>
            Creates the unknown style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateTableStyle(System.Xml.XmlNode)">
            <summary>
            Creates the table style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateColumnStyle(System.Xml.XmlNode)">
            <summary>
            Creates the column style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateRowStyle(System.Xml.XmlNode)">
            <summary>
            Creates the row style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateCellStyle(System.Xml.XmlNode)">
            <summary>
            Creates the cell style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateListStyle(System.Xml.XmlNode)">
            <summary>
            Creates the list style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateParagraphStyle(System.Xml.XmlNode)">
            <summary>
            Creates the paragraph style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateTextStyle(System.Xml.XmlNode)">
            <summary>
            Creates the text style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateFrameStyle(System.Xml.XmlNode)">
            <summary>
            Creates the frame style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateSectionStyle(System.Xml.XmlNode)">
            <summary>
            Creates the section style.
            </summary>
            <param name="styleNode">The style node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateTabStopStyle(System.Xml.XmlNode)">
            <summary>
            Creates the tab stop style.
            </summary>
            <param name="styleNode">The style node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateTableProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Creates the table properties.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateColumnProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Creates the column properties.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateRowProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Creates the row properties.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateCellProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Creates the cell properties.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateGraphicProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Creates the graphic properties.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateParagraphProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Creates the paragraph properties.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateTextProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Creates the text properties.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateSectionProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Creates the section properties.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CreateUnknownProperties(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Creates the unknown properties.
            </summary>
            <param name="style">The style.</param>
            <param name="propertyNode">The property node.</param>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Import.OpenDocument.NodeProcessors.LocalStyleProcessor.CurrentXmlDocument">
            <summary>
            Gets or sets the current XML document.
            </summary>
            <value>The current XML document.</value>
        </member>
        <member name="T:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor">
            <summary>
            Internal class MainContentProcessor. This class is for
            internal usage only!
            </summary>
        </member>
        <member name="F:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor._debugMode">
            <summary>
            If set to true all node content would be directed
            to Console.Out
            </summary>
        </member>
        <member name="F:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor._document">
            <summary>
            The textdocument
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.ReadContentNodes">
            <summary>
            Reads the content nodes.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateMainContent(System.Xml.XmlNode)">
            <summary>
            Creates the content.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateContent(System.Xml.XmlNode)">
            <summary>
            Gets the content.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateTableOfContents(System.Xml.XmlNode)">
            <summary>
            Creates the table of contents.
            </summary>
            <param name="tocNode">The toc node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateParagraph(System.Xml.XmlNode)">
            <summary>
            Creates the paragraph.
            </summary>
            <param name="paragraphNode">The paragraph node.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.ReadParagraphTextContent(AODL.Document.Content.Text.Paragraph)">
            <summary>
            Reads the content of the paragraph text.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateHeader(System.Xml.XmlNode)">
            <summary>
            Creates the header.
            </summary>
            <param name="headernode">The headernode.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateGraphic(System.Xml.XmlNode)">
            <summary>
            Creates the graphic.
            </summary>
            <param name="graphicnode">The graphicnode.</param>
            <returns>The Graphic object</returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateDrawTextBox(System.Xml.XmlNode)">
            <summary>
            Creates the draw text box.
            </summary>
            <param name="drawTextBoxNode">The draw text box node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateDrawAreaRectangle(System.Xml.XmlNode)">
            <summary>
            Creates the draw area rectangle.
            </summary>
            <param name="drawAreaRectangleNode">The draw area rectangle node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateDrawAreaCircle(System.Xml.XmlNode)">
            <summary>
            Creates the draw area circle.
            </summary>
            <param name="drawAreaCircleNode">The draw area circle node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateImageMap(System.Xml.XmlNode)">
            <summary>
            Creates the image map.
            </summary>
            <param name="imageMapNode">The image map node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateEventListener(System.Xml.XmlNode)">
            <summary>
            Creates the event listener.
            </summary>
            <param name="eventListenerNode">The event listener node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateEventListeners(System.Xml.XmlNode)">
            <summary>
            Creates the event listeners.
            </summary>
            <param name="eventListenersNode">The event listeners node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateControlRef(System.Xml.XmlNode)">
            <summary>
            Creates the frame.
            </summary>
            <param name="frameNode">The framenode.</param>
            <returns>The Frame object.</returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateFrame(System.Xml.XmlNode)">
            <summary>
            Creates the frame.
            </summary>
            <param name="frameNode">The framenode.</param>
            <returns>The Frame object.</returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateList(System.Xml.XmlNode)">
            <summary>
            Creates the list.
            </summary>
            <param name="listNode">The list node.</param>
            <returns>The List object</returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateListItem(System.Xml.XmlNode)">
            <summary>
            Creates the list item.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateTable(System.Xml.XmlNode)">
            <summary>
            Creates the table.
            </summary>
            <param name="tableNode">The tablenode.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateTableRow(System.Xml.XmlNode)">
            <summary>
            Creates the table row.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateTableHeaderRow(System.Xml.XmlNode)">
            <summary>
            Creates the table header row.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateTableColumn(System.Xml.XmlNode)">
            <summary>
            Creates the table column.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateTableCellSpan(System.Xml.XmlNode)">
            <summary>
            Creates the table cell span.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.CreateTableCell(System.Xml.XmlNode)">
            <summary>
            Creates the table cell.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.GetAValueFromAnAttribute(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the A value from an attribute.
            </summary>
            <param name="node">The node.</param>
            <param name="attributname">The attributname.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.GetListStyle(System.Xml.XmlNode)">
            <summary>
            Gets the list style.
            </summary>
            <param name="node">The main list node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.LogNode(System.Xml.XmlNode,System.String)">
            <summary>
            Logs the node.
            </summary>
            <param name="node">The node.</param>
            <param name="msg">The MSG.</param>
        </member>
        <member name="E:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.OnWarning">
            <summary>
            OnWarning event fired if something unexpected
            occour.
            </summary>
        </member>
        <member name="T:AODL.Document.Import.OpenDocument.NodeProcessors.MainContentProcessor.Warning">
            <summary>
            Warning delegate
            </summary>
        </member>
        <member name="T:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor">
            <summary>
            Represent a Text Content Processor.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.CreateTextObject(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Creates the text object.
            </summary>
            <param name="document">The document.</param>
            <param name="aTextNode">A text node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.CreateFormatedText(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Creates the formated text.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.CreateBookmark(AODL.Document.IDocument,System.Xml.XmlNode,AODL.Document.Content.Text.Indexes.BookmarkType)">
            <summary>
            Creates the bookmark.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.CreateXLink(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Creates the X link.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.CreateFootnote(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Creates the footnote.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.CreateTextSequence(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Creates the text sequence.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.ReplaceSpecialCharacter(System.String)">
            <summary>
            Replaces the special character.
            </summary>
            <param name="nodeInnerText">The node inner text.</param>
            <returns></returns>
        </member>
        <member name="E:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.OnWarning">
            <summary>
            OnWarning event fired if something unexpected
            occour.
            </summary>
        </member>
        <member name="T:AODL.Document.Import.OpenDocument.NodeProcessors.TextContentProcessor.Warning">
            <summary>
            Warning delegate
            </summary>
        </member>
        <member name="T:AODL.Document.Import.OpenDocument.OpenDocumentImporter">
            <summary>
            OpenDocumentImporter - Importer for OpenDocuments in different formats.
            </summary>
        </member>
        <member name="T:AODL.Document.Import.IImporter">
            <summary>
            All classes that want to act as an importer have to
            to implement this interface.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.IImporter.Import(AODL.Document.IDocument,System.String)">
            <summary>
            Imports the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="P:AODL.Document.Import.IImporter.ImportError">
            <summary>
            Gets the import error.
            </summary>
            <value>The import error.</value>
        </member>
        <member name="P:AODL.Document.Import.IImporter.DocumentSupportInfos">
            <summary>
            ArrayList of DocumentSupportInfo objects
            </summary>
            <value>ArrayList of DocumentSupportInfo objects.</value>
        </member>
        <member name="P:AODL.Document.Import.IImporter.NeedNewOpenDocument">
            <summary>
            If the import file format isn't any OpenDocument
            format you have to return true and AODL will
            create a new one.
            </summary>
        </member>
        <member name="F:AODL.Document.Import.OpenDocument.OpenDocumentImporter._document">
            <summary>
            The document to fill with content.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Import.OpenDocument.OpenDocumentImporter"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.Import(AODL.Document.IDocument,System.String)">
            <summary>
            Imports the specified filename.
            </summary>
            <param name="document">The TextDocument to fill.</param>
            <param name="filename">The filename.</param>		
            <returns>The created TextDocument</returns>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.UnpackFiles(System.String)">
            <summary>
            Unpacks the files.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.MovePictures">
            <summary>
            Moves the pictures folder
            To avoid gdi errors.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.ReadResources">
            <summary>
            Reads the resources.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.ReadDocumentConfigurations2">
            <summary>
            Reads the document configurations2.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.ReadImageResources(System.String)">
            <summary>
            Reads the image resources.
            </summary>
            <param name="folder">The folder.</param>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.ReadContent">
            <summary>
            Reads the content.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.ImportCommonStyles">
            <summary>
            If the common styles are placed in the DocumentStyles,
            they will be imported into the content file.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.InitMetaData">
            <summary>
            Inits the meta data.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.OpenDocument.OpenDocumentImporter.mcp_OnWarning(AODL.Document.Exceptions.AODLWarning)">
            <summary>
            MCP_s the on warning.
            </summary>
            <param name="warning">The warning.</param>
        </member>
        <member name="P:AODL.Document.Import.OpenDocument.OpenDocumentImporter.DocumentSupportInfos">
            <summary>
            Gets the document support infos.
            </summary>
            <value>The document support infos.</value>
        </member>
        <member name="P:AODL.Document.Import.OpenDocument.OpenDocumentImporter.ImportError">
            <summary>
            Gets the import errors as ArrayList of strings.
            </summary>
            <value>The import errors.</value>
        </member>
        <member name="P:AODL.Document.Import.OpenDocument.OpenDocumentImporter.NeedNewOpenDocument">
            <summary>
            If the import file format isn't any OpenDocument
            format you have to return true and AODL will
            create a new one.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Import.OpenDocument.OpenDocumentImporter.Author">
            <summary>
            The name the Author
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Import.OpenDocument.OpenDocumentImporter.InfoUrl">
            <summary>
            Url to a info site
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Import.OpenDocument.OpenDocumentImporter.Description">
            <summary>
            Description about the exporter resp. importer
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Import.PlainText.CsvImporter">
            <summary>
            CsvImporter, a class for importing csv files into
            OpenDocument spreadsheet documents.
            </summary>
        </member>
        <member name="F:AODL.Document.Import.PlainText.CsvImporter._document">
            <summary>
            The document to fill with content.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.PlainText.CsvImporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Import.PlainText.CsvImporter"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.PlainText.CsvImporter.Import(AODL.Document.IDocument,System.String)">
            <summary>
            Imports the specified filename.
            </summary>
            <param name="document">The TextDocument to fill.</param>
            <param name="filename">The filename.</param>		
            <returns>The created TextDocument</returns>
        </member>
        <member name="M:AODL.Document.Import.PlainText.CsvImporter.CreateTables(System.Collections.ArrayList)">
            <summary>
            Creates the tables.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="M:AODL.Document.Import.PlainText.CsvImporter.GetFileContent(System.String)">
            <summary>
            Gets the content of the file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>All text lines as an ArrayList of strings.</returns>
        </member>
        <member name="P:AODL.Document.Import.PlainText.CsvImporter.DocumentSupportInfos">
            <summary>
            Gets the document support infos.
            </summary>
            <value>The document support infos.</value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.CsvImporter.ImportError">
            <summary>
            Gets the import errors as ArrayList of strings.
            </summary>
            <value>The import errors.</value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.CsvImporter.NeedNewOpenDocument">
            <summary>
            If the import file format isn't any OpenDocument
            format you have to return true and AODL will
            create a new one.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.CsvImporter.Author">
            <summary>
            The name the Author
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.CsvImporter.InfoUrl">
            <summary>
            Url to a info site
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.CsvImporter.Description">
            <summary>
            Description about the exporter resp. importer
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Import.PlainText.PlainTextImporter">
            <summary>
            Plain Text Importer.
            </summary>
        </member>
        <member name="F:AODL.Document.Import.PlainText.PlainTextImporter._document">
            <summary>
            The document to fill with content.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.PlainText.PlainTextImporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Import.PlainText.PlainTextImporter"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.PlainText.PlainTextImporter.Import(AODL.Document.IDocument,System.String)">
            <summary>
            Imports the specified filename.
            </summary>
            <param name="document">The TextDocument to fill.</param>
            <param name="filename">The filename.</param>		
            <returns>The created TextDocument</returns>
        </member>
        <member name="M:AODL.Document.Import.PlainText.PlainTextImporter.ReadTextToDocument(System.String)">
            <summary>
            Reads the text to document.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:AODL.Document.Import.PlainText.PlainTextImporter.ReadContentFromFile(System.String)">
            <summary>
            Reads the content from file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.PlainText.PlainTextImporter.SetConformLineBreaks(System.String)">
            <summary>
            Sets the conform line breaks.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Import.PlainText.PlainTextImporter.DocumentSupportInfos">
            <summary>
            Gets the document support infos.
            </summary>
            <value>The document support infos.</value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.PlainTextImporter.ImportError">
            <summary>
            Gets the import errors as ArrayList of strings.
            </summary>
            <value>The import errors.</value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.PlainTextImporter.NeedNewOpenDocument">
            <summary>
            If the import file format isn't any OpenDocument
            format you have to return true and AODL will
            create a new one.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.PlainTextImporter.Author">
            <summary>
            The name the Author
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.PlainTextImporter.InfoUrl">
            <summary>
            Url to a info site
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Import.PlainText.PlainTextImporter.Description">
            <summary>
            Description about the exporter resp. importer
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Import.ImportHandler">
            <summary>
            ImportHandler class to get the right IImporter implementations
            for the document to import.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.ImportHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Import.ImportHandler"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Import.ImportHandler.GetFirstImporter(AODL.Document.DocumentTypes,System.String)">
            <summary>
            Gets the first importer that match the parameter criteria.
            </summary>
            <param name="documentType">Type of the document.</param>
            <param name="loadPath">The save path.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Import.ImportHandler.LoadImporter">
            <summary>
            Load internal and external importer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:AODL.Document.SpreadsheetDocuments.DocumentManifest">
            <summary>
            DocumentManifest represent the spreadsheet manifest file
            </summary>
        </member>
        <member name="T:AODL.Document.TextDocuments.DocumentManifest">
            <summary>
            DocumentManifest global Document Manifest
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.DocumentManifest.FolderName">
            <summary>
            The folder name
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.DocumentManifest.FileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentManifest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.TextDocuments.DocumentManifest"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentManifest.New">
            <summary>
            Load the style from assmebly resource.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentManifest.LoadFromFile(System.String)">
            <summary>
            Loads from file.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentManifest.DTDReplacer(System.String)">
            <summary>
            DTDs the replacer, XmlDocument couldn't be loaded
            because the DTD wasn't found
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentManifest.Manifest">
            <summary>
            Gets or sets the styles.
            </summary>
            <value>The styles.</value>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.DocumentManifest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.SpreadsheetDocuments.DocumentManifest"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.DocumentManifest.New">
            <summary>
            Load the style from assmebly resource.
            </summary>
        </member>
        <member name="T:AODL.Document.SpreadsheetDocuments.DocumentSetting">
            <summary>
            DocumentSetting represent the document settings
            </summary>
        </member>
        <member name="T:AODL.Document.TextDocuments.DocumentSetting">
            <summary>
            DocumentSetting global Document Metadata
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.DocumentSetting.FileName">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.TextDocuments.DocumentSetting"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentSetting.New">
            <summary>
            Load the style from assmebly resource.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentSetting.LoadFromFile(System.String)">
            <summary>
            Loads from file.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentSetting.Settings">
            <summary>
            Gets or sets the styles.
            </summary>
            <value>The styles.</value>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.DocumentSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.SpreadsheetDocuments.DocumentSetting"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.DocumentSetting.New">
            <summary>
            Load the style from assmebly resource.
            </summary>
        </member>
        <member name="T:AODL.Document.SpreadsheetDocuments.DocumentStyles">
            <summary>
            DocumentStyles represent the styles.xml file of a file in the
            OpenDocument format.
            </summary>
        </member>
        <member name="T:AODL.Document.TextDocuments.DocumentStyles">
            <summary>
            DocumentStyles global Document Style
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.DocumentStyles.FileName">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.DocumentStyles.OfficeStyles">
            <summary>
            XPath to the document office styles
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.TextDocuments.DocumentStyles"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.New">
            <summary>
            Load the style from assmebly resource.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.New(AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Create new document styles document and set the owner text document.
            </summary>
            <param name="ownerTextDocument">The owner text document.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.LoadFromFile(System.String)">
            <summary>
            Loads from file.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.InsertOfficeStylesNode(System.Xml.XmlNode,AODL.Document.IDocument)">
            <summary>
            Inserts a office styles node.
            </summary>
            <param name="aStyleNode">A style node.</param>
            <param name="document">The AODL document.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.InsertOfficeStylesNode(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Inserts the office styles node into this XML style document.
            </summary>
            <param name="aStyleNode">A style node.</param>
            <param name="xmlNamespaceMng">The XML namespace MNG.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.InsertOfficeAutomaticStylesNode(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Inserts the office automatic styles node into this XML style document.
            </summary>
            <param name="aOfficeAutomaticStyleNode">A office automatic style node.</param>
            <param name="xmlNamespaceMng">The XML namespace MNG.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.InsertOfficeMasterStylesNode(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Inserts the office master styles node into this XML style document.
            </summary>
            <param name="aOfficeMasterStyleNode">A office master style node.</param>
            <param name="xmlNamespaceMng">The XML namespace MNG.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.SetOutlineStyle(System.Int32,System.String,AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Sets the outline style.
            </summary>
            <param name="outlineLevel">The outline level.</param>
            <param name="numFormat">The num format.</param>
            <param name="document">The text document.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.InsertFooter(AODL.Document.Content.Text.Paragraph,AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Inserts the footer.
            </summary>
            <param name="content">The content.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.InsertHeader(AODL.Document.Content.Text.Paragraph,AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Inserts the header.
            </summary>
            <param name="content">The content.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.InsertParagraphStyle(AODL.Document.Content.Text.Paragraph,AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Inserts the paragraph style.
            </summary>
            <param name="content">The content.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.GetHtmlHeader(AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Gets the HTML header.
            </summary>
            <param name="document">The document.</param>
            <returns>The html string which represent the document header.</returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.GetHtmlFooter(AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Gets the HTML footer.
            </summary>
            <param name="document">The document.</param>
            <returns>The html string which represent the document footer.</returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentStyles.CreateNode(System.String,System.String,AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Creates the node.
            </summary>
            <param name="name">The name.</param>
            <param name="prefix">The prefix.</param>
            <param name="document">The prefix.</param>
            <returns>The XmlNode</returns>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentStyles.Styles">
            <summary>
            Gets or sets the styles.
            </summary>
            <value>The styles.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentStyles.TextDocument">
            <summary>
            Gets or sets the text document.
            </summary>
            <value>The text document.</value>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.DocumentStyles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.SpreadsheetDocuments.DocumentStyles"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.DocumentStyles.New">
            <summary>
            Load the style from assmebly resource.
            </summary>
        </member>
        <member name="T:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument">
            <summary>
            The SpreadsheetDocument class represent an OpenDocument
            spreadsheet document.
            </summary>
        </member>
        <member name="T:AODL.Document.IDocument">
            <summary>
            IDocument.
            </summary>
        </member>
        <member name="M:AODL.Document.IDocument.CreateNode(System.String,System.String)">
            <summary>
            Every document must offer CreateNode for creating
            new nodes
            </summary>
            <param name="name">The name of the node</param>
            <param name="prefix">The prefix of the node</param>
            <returns>The created node</returns>
        </member>
        <member name="M:AODL.Document.IDocument.CreateAttribute(System.String,System.String)">
            <summary>
            Every document must offer CreateAttribute for creating
            new attributes
            </summary>
            <param name="name">The name of the attribute</param>
            <param name="prefix">The prefix of the attribute</param>
            <returns>The created attribute</returns>
        </member>
        <member name="M:AODL.Document.IDocument.Load(System.String)">
            <summary>
            Load the given file.
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:AODL.Document.IDocument.SaveTo(System.String)">
            <summary>
            Save the document at the given file position.
            </summary>
            <param name="filename">Path and file name.</param>
        </member>
        <member name="M:AODL.Document.IDocument.SaveTo(System.String,AODL.Document.Export.IExporter)">
            <summary>
            Save the document by using the passed IExporter
            with the passed file name.
            </summary>
            <param name="filename">The name of the new file.</param>
        </member>
        <member name="P:AODL.Document.IDocument.NamespaceManager">
            <summary>
            Every document must have a XmlNamespaceManager
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.XmlDoc">
            <summary>
            Every document must have a XmlDocument that
            represent the content.
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.DocumentMetadata">
            <summary>
            Every document must give access to his meta data
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.DocumentConfigurations2">
            <summary>
            Every document must give access to his document configurations
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.DocumentPictures">
            <summary>
            Every document must give access to his pictures
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.DocumentThumbnails">
            <summary>
            Every document must give access to his thumbnails
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.FontList">
            <summary>
            The font list
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.Graphics">
            <summary>
            Graphics used within the document.
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.EmbedObjects">
            <summary>
            EmbedObject used within the document.
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.Styles">
            <summary>
            Collection of local styles used with this document.
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.CommonStyles">
            <summary>
            Collection of common styles used with this document.
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.Content">
            <summary>
            Collection of contents used by this document.
            </summary>
        </member>
        <member name="P:AODL.Document.IDocument.IsLoadedFile">
            <summary>
            If this file was loaded
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.New">
            <summary>
            Create a new blank spreadsheet document.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.ReadCommonStyles">
            <summary>
            Reads the common styles.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.SaveTo(System.String)">
            <summary>
            Save the SpreadsheetDocument as OpenDocument spreadsheet document
            </summary>
            <param name="filename">The filename. With or without full path. Without will save the file to application path!</param>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.SaveTo(System.String,AODL.Document.Export.IExporter)">
            <summary>
            Save the document by using the passed IExporter
            with the passed file name.
            </summary>
            <param name="filename">The name of the new file.</param>
            <param name="iExporter"></param>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.Load(System.String)">
            <summary>
            Load the given file.
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.CreateNode(System.String,System.String)">
            <summary>
            Create a new XmlNode for this document.
            </summary>
            <param name="name">The elementname.</param>
            <param name="prefix">The prefix.</param>
            <returns>The new XmlNode.</returns>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.CreateAttribute(System.String,System.String)">
            <summary>
            Create a new XmlAttribute for this document.
            </summary>
            <param name="name">The attributename.</param>
            <param name="prefix">The prefixname.</param>
            <returns>The new XmlAttribute.</returns>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.GetNamespaceUri(System.String)">
            <summary>
            Return the namespaceuri for the given prefixname.
            </summary>
            <param name="prefix">The prefixname.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.LoadBlankContent">
            <summary>
            Load a blank the spreadsheet content document.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.TableCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Tables the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.TableCollection_Removed(System.Int32,System.Object)">
            <summary>
            Tables the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.Content_Inserted(System.Int32,System.Object)">
            <summary>
            Content_s the inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.Content_Removed(System.Int32,System.Object)">
            <summary>
            Content_s the removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.CreateContentBody">
            <summary>
            Creates the content body.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.CreateLocalStyleContent">
            <summary>
            Creates the content of the local style.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.CreateCommonStyleContent">
            <summary>
            Creates the content of the common style.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.StyleNodeExists(System.String)">
            <summary>
            Styles the node exists.
            </summary>
            <param name="styleName">Name of the style.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.Dispose">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.Dispose(System.Boolean)">
            <summary>
            Disposes the specified disposing.
            </summary>
            <param name="disposing">if set to <c>true</c> [disposing].</param>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:AODL.Document.TextDocuments.TextDocument"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.TableCount">
            <summary>
            Gets the table count.
            </summary>
            <value>The table count.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.XmlDoc">
            <summary>
            The xml document the spreadsheet document based on.
            </summary>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.IsLoadedFile">
            <summary>
            If this file was loaded
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.FontList">
            <summary>
            The font list
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.Styles">
            <summary>
            Collection of local styles used with this document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.CommonStyles">
            <summary>
            Collection of common styles used with this document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.Content">
            <summary>
            Collection of contents used by this document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.TableCollection">
            <summary>
            Gets or sets the table collection.
            </summary>
            <value>The table collection.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.DocumentStyles">
            <summary>
            Gets or sets the document styes.
            </summary>
            <value>The document styes.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.DocumentSetting">
            <summary>
            Gets or sets the document setting.
            </summary>
            <value>The document setting.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.DocumentMetadata">
            <summary>
            Gets or sets the document metadata.
            </summary>
            <value>The document metadata.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.DocumentConfigurations2">
            <summary>
            Gets or sets the document configuration2.
            </summary>
            <value>The document configuration2.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.DocumentManifest">
            <summary>
            Gets or sets the document manifest.
            </summary>
            <value>The document manifest.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.DocumentPictures">
            <summary>
            Gets or sets the document pictures.
            </summary>
            <value>The document pictures.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.DocumentThumbnails">
            <summary>
            Gets or sets the document thumbnails.
            </summary>
            <value>The document thumbnails.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.Graphics">
            <summary>
            Gets the graphics.
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.EmbedObjects">
            <summary>
            Gets the embedobject.
            </summary>
            <value>The embedobject.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.MimeTyp">
            <summary>
            Gets the MIME typ.
            </summary>
            <value>The MIME typ.</value>
        </member>
        <member name="P:AODL.Document.SpreadsheetDocuments.SpreadsheetDocument.NamespaceManager">
            <summary>
            The namespacemanager to access the documents namespace uris.
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.MasterStyles.MasterPageFactory">
            <summary>
            Summary for MasterPageFactory.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.MasterPageFactory.RenameMasterStyles(System.Xml.XmlDocument,System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Rename master styles.
            </summary>
            <param name="styleDocument">The style document.</param>
            <param name="contentDocument">The content document.</param>
            <param name="namespaceMng">The namespace MNG.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.MasterPageFactory.MoveMasterStyles(System.Xml.XmlDocument,System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Moves the master styles.
            </summary>
            <param name="contentDocument">The content document.</param>
            <param name="nodeAutomaticStyles">The node automatic styles.</param>
            <param name="nodeMasterPages">The node master pages.</param>
            <param name="namespaceMng">The namespace MNG.</param>
            <remarks>
            We will move the whole master style and master pages stuff
            from the style document to the text document. This is
            necessary for avoiding xml document owner errors.
            Notice: When the document will be saved this nodes have
            to move back to the styles document. Otherwise they wont
            work resp. diplayed not correct within OpenOffice.
            </remarks>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.MasterPageFactory.FillFromXMLDocument(AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Fill/read the existing master page styles.
            </summary>
            <param name="textDocument">The owner text document.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.MasterPageFactory.GetContentHeaderFooter(System.Xml.XmlNode,AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Gets the content for headers and footers.
            </summary>
            <param name="contentNode">The content node.</param>
            <param name="textDocument">The text document.</param>
            <returns>The contents as IContentCollection.</returns>
        </member>
        <member name="T:AODL.Document.Styles.MasterStyles.TextMasterPage">
            <summary>
            Summary for TextMasterPage.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.MasterStyles.TextMasterPage"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPage.#ctor(AODL.Document.TextDocuments.TextDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.MasterStyles.TextMasterPage"/> class.
            </summary>
            <param name="ownerTextDocument">The owner text document.</param>
            <param name="masterPageNode">The master page node.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPage.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPage.ActivatePageHeader">
            <summary>
            Activate usage of the page header.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPage.ActivatePageFooter">
            <summary>
            Activate usage of the page footer.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPage.ActivatePageHeaderAndFooter">
            <summary>
            Activate usage of the page header and page footer.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextMasterPage.TextPageLayout">
            <summary>
            Gets or sets the text page layout.
            </summary>
            <value>The text page layout.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextMasterPage.TextPageHeader">
            <summary>
            Gets or sets the text page header.
            </summary>
            <value>The text page header.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextMasterPage.TextPageFooter">
            <summary>
            Gets or sets the text page footer.
            </summary>
            <value>The text page footer.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextMasterPage.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextMasterPage.PageLayoutName">
            <summary>
            Gets or sets the name of the page layout.
            </summary>
            <value>The name of the page layout.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextMasterPage.TextDocument">
            <summary>
            Gets or sets the text document.
            </summary>
            <value>The text document.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextMasterPage.Node">
            <summary>
            The XmlNode which represent the master layout element.
            </summary>
            <value>The node</value>
        </member>
        <member name="T:AODL.Document.Styles.MasterStyles.TextMasterPageCollection">
            <summary>
            Summary for TextMasterPageCollection.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPageCollection.Add(AODL.Document.Styles.MasterStyles.TextMasterPage)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPageCollection.Remove(AODL.Document.Styles.MasterStyles.TextMasterPage)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPageCollection.Insert(System.Int32,AODL.Document.Styles.MasterStyles.TextMasterPage)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPageCollection.Contains(AODL.Document.Styles.MasterStyles.TextMasterPage)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPageCollection.GetByStyleName(System.String)">
            <summary>
            Get a text master page by his style name.
            </summary>
            <returns>The TextMasterPage or null if no master page was found for this name.</returns>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextMasterPageCollection.GetDefaultMasterPage">
            <summary>
            Gets the default master page for this text document.
            </summary>
            <returns>The default master page or null if no one was found.</returns>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextMasterPageCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Styles.MasterStyles.TextMasterPage"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.MasterStyles.TextPageFooter">
            <summary>
            Summary for TextPageFooter.
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase">
            <summary>
            Summary for TextPageHeaderFooterBase.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.MasterStyles.TextPageFooter"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.New(AODL.Document.Styles.MasterStyles.TextMasterPage,System.String)">
            <summary>
            Create a new TextPageFooter object.
            !!NOTICE: The TextPageLayout of the TextMasterPage object must exist!
            </summary>
            <param name="textMasterPage">The text master page.</param>
            <param name="typeName">Name of the type to create header or footer.</param>
            <remarks>The TextPageLayout of the TextMasterPage object must exist!</remarks>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.Activate">
            <summary>
            This method call will activate resp. create the header or footer 
            for a master page. There is no need of call it directly so its
            internal. Activation for footer and header will be done through
            the TextMasterPage object. 
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase._contentCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Called after content was added.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase._contentCollection_Removed(System.Int32,System.Object)">
            <summary>
            Called after content was removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.TextMasterPage">
            <summary>
            Gets or sets the owner text master page.
            </summary>
            <value>The text master page.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.TextDocument">
            <summary>
            Gets or sets the text document.
            </summary>
            <value>The text document.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.PropertyNode">
            <summary>
            Gets or sets the property node.
            </summary>
            <value>The property node.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.ContentNode">
            <summary>
            Gets or sets the content node.
            </summary>
            <value>The content node.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.StyleNode">
            <summary>
            The XmlNode which represent the page layout style element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.MinHeight">
            <summary>
            Gets or sets the min height. e.g. 0cm 
            </summary>
            <value>The height of the min.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.MarginRight">
            <summary>
            Gets or sets the margin right. e.g. 0cm
            </summary>
            <value>The margin right.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.MarginBottom">
            <summary>
            Gets or sets the margin bottom. e.g. 0.499cm
            </summary>
            <value>The margin bottom.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.MarginTop">
            <summary>
            Gets or sets the margin top. e.g. 0.499cm
            </summary>
            <value>The margin bottom.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.MarginLeft">
            <summary>
            Gets or sets the margin left. e.g. 0cm
            </summary>
            <value>The margin left.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageHeaderFooterBase.ContentCollection">
            <summary>
            Gets or sets the content collection.
            </summary>
            <value>The content collection.</value>
            <remarks>This is the content which will be displayed within the footer or the header.</remarks>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageFooter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.MasterStyles.TextPageFooter"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageFooter.New(AODL.Document.Styles.MasterStyles.TextMasterPage)">
            <summary>
            Create a new TextPageFooter object within the passed text master page.
            </summary>
            <param name="textMasterPage">The text master page.</param>
        </member>
        <member name="T:AODL.Document.Styles.MasterStyles.TextPageHeader">
            <summary>
            Summary for TextPageHeader.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.MasterStyles.TextPageHeader"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageHeader.New(AODL.Document.Styles.MasterStyles.TextMasterPage)">
            <summary>
            Create a new TextPageHeader object within the passed text master page.
            </summary>
            <param name="textMasterPage">The text master page.</param>
        </member>
        <member name="T:AODL.Document.Styles.MasterStyles.TextPageLayout">
            <summary>
            Summary for TextPageLayout.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageLayout.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.MasterStyles.TextPageLayout"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageLayout.#ctor(AODL.Document.TextDocuments.TextDocument,System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.MasterStyles.TextPageLayout"/> class.
            </summary>
            <param name="ownerDocument">The owner document.</param>
            <param name="styleNode">The style node.</param>
            <param name="propertyNode">The property node.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageLayout.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageLayout.GetContentWidth">
            <summary>
            Gets the width of the content.
            </summary>
            <value>The width of the content area as double value without the left and right margins. 
            Notice, that you have to call GetLayoutMeasurement() to find out if 
            the the document use cm or inch.</value>
            <remarks>Will return 0 if the width couldn't be calculated.</remarks>
        </member>
        <member name="M:AODL.Document.Styles.MasterStyles.TextPageLayout.GetLayoutMeasurement">
            <summary>
            Gets the layout measurement.
            </summary>
            <returns>True if it's in cm and false if it's in in.</returns>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.PageWidth">
            <summary>
            Gets or sets the width of the page.
            e.g. 20.99 cm (A4)
            </summary>
            <value>The width of the page.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.PageHeight">
            <summary>
            Gets or sets the height of the page.
            e.g 29,699cm (A4)
            </summary>
            <value>The height of the page.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.PrintOrientation">
            <summary>
            Gets or sets the print orientation.
            e.g portrait, landscape
            </summary>
            <value>The print orientation.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.FootnoteMaxHeight">
            <summary>
            Gets or sets the height of the footnote max. e.g. 0cm == without limit
            </summary>
            <value>The height of the footnote max.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.WritingMode">
            <summary>
            Gets or sets the writing mode. e.g. lr-tab
            </summary>
            <value>The writing mode.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.NumFormat">
            <summary>
            Gets or sets the num format. e.g. 1
            </summary>
            <value>The num format.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.MarginTop">
            <summary>
            Gets or sets the margin top.
            e.g. 2cm
            </summary>
            <value>The margin top.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.MarginBottom">
            <summary>
            Gets or sets the margin bottom. e.g. 2cm
            </summary>
            <value>The margin bottom.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.MarginLeft">
            <summary>
            Gets or sets the margin left. e.g. 2cm
            </summary>
            <value>The margin left.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.MarginRight">
            <summary>
            Gets or sets the margin right. e.g. 2cm
            </summary>
            <value>The margin right.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.TextDocument">
            <summary>
            Gets or sets the text document.
            </summary>
            <value>The text document.</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.PropertyNode">
            <summary>
            The XmlNode which represent the page layout property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.MasterStyles.TextPageLayout.StyleNode">
            <summary>
            The XmlNode which represent the page layout style element.
            </summary>
            <value>The node</value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.AxesProperties">
            <summary>
            Summary description for AxesProperties.
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.Properties.ChartProperties">
            <summary>
            Summary description for ChartProperties.
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.Properties.IProperty">
            <summary>
            All classes that should act as a Property class must implement this
            interface.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.IProperty.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.IProperty.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ChartProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            The Constructor, create new instance of ChartProperties
            </summary>
            <param name="style">The ColumnStyle</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ChartProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.Direction">
            <summary>
            gets and sets the direction
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.ThreeDimensional">
            <summary>
            gets and sets the three dimensional
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.CandleStick">
            <summary>
            gets and sets candle stick
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.DataLabelNumber">
            <summary>
            gets and sets the data label number
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.DataLabelText">
            <summary>
            gets and sets data label text
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.DataLabelSymbol">
            <summary>
            gets and sets data label symbol
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.MeanValue">
            <summary>
            gets and sets mean value
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.ErrorCategory">
            <summary>
            gets and sets error category
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.ErrorPercentage">
            <summary>
            gets and sets error percentage
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.ErrorMargin">
            <summary>
            gets and sets error margin
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.ErrorLowerLimit">
            <summary>
            gets and sets error lower limit
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.ErrorUpperLimit">
            <summary>
            gets and sets error upper limit
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.ErrorUpperIndicator">
            <summary>
            gets and sets error upper indicator
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.ErrorLowerIndicator">
            <summary>
            gets and sets error lower indicator
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.Vertical">
            <summary>
            gets and sets vertical
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.ConnectBars">
            <summary>
            gets and sets connect bars
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.GapWidth">
            <summary>
            gets and sets gap width
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.OverLap">
            <summary>
            gets and sets over lap
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.Deep">
            <summary>
            gets and sets deep
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.SymbolType">
            <summary>
            gets and sets symbol type
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.Lines">
            <summary>
            gets and sets lines
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.SolidType">
            <summary>
            gets and sets solid type
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.Stacked">
            <summary>
            gets and sets stacked
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.Percentage">
            <summary>
            gets and sets percentage
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.InterPolation">
            <summary>
            gets and sets inter polation
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="M:AODL.Document.Styles.Properties.AxesProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            The Constructor, create new instance of ChartProperties
            </summary>
            <param name="style">The ColumnStyle</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.AxesProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.LinkDataFormat">
            <summary>
            gets and sets the link data format
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.Visibility">
            <summary>
            gets and sets the visibility
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.Logarithmic">
            <summary>
            gets and sets the logarithmic
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.TickMarkMajorInner">
            <summary>
            gets and sets tick mark major inner
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.TickMarkMajorOuter">
            <summary>
            gets and sets tick mark major outer
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.Maximum">
            <summary>
            gets and set the maximum
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.Minimum">
            <summary>
            gets and sets minimum
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.Origin">
            <summary>
            gets and set origin
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.IntervalMajor">
            <summary>
            gets and sets the interval major
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.IntervalMinor">
            <summary>
            gets and sets interval minor
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.TickMarkMinorInner">
            <summary>
            gets and sets tick mark minor inner
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.TickMarkMinorOuter">
            <summary>
            gets and sets tick mark minor outer
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.DisplayLabel">
            <summary>
            gets and sets the display label
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.TextOverLap">
            <summary>
            gets and sets text overlap
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.LineBreak">
            <summary>
            gets and sets line break
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.AxesProperties.LabelArrangement">
            <summary>
            gets and sets the label arragement
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.Properties.CellProperties">
            <summary>
            Represent the Cell Properties within a Cell which is used
            within a Tabe resp. a Row.
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.IHtmlStyle">
            <summary>
            All IProperty implementations that
            offer a css style must implement this
            interface.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.IHtmlStyle.GetHtmlStyle">
            <summary>
            Get the css style fragement
            </summary>
            <returns>The css style attribute</returns>
        </member>
        <member name="M:AODL.Document.Styles.Properties.CellProperties.#ctor(AODL.Document.Styles.CellStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.Properties.CellProperties"/> class.
            </summary>
            <param name="cellstyle">The cellstyle.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.CellProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.CellProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.CellProperties.GetHtmlStyle">
            <summary>
            Get the css style fragement
            </summary>
            <returns>The css style attribute</returns>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.CellStyle">
            <summary>
            Gets or sets the cell style.
            </summary>
            <value>The cell style.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.Padding">
            <summary>
            Gets or sets the padding. 
            Default 0.097cm
            </summary>
            <value>The padding.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.Border">
            <summary>
            Gets or sets the border.
            This could be e.g. 0.002cm solid #000000 (width, linestyle, color)
            or none
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.BorderLeft">
            <summary>
            Gets or sets the border left.
            This could be e.g. 0.002cm solid #000000 (width, linestyle, color)
            or none
            </summary>
            <value>The border left.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.BorderRight">
            <summary>
            Gets or sets the border right.
            This could be e.g. 0.002cm solid #000000 (width, linestyle, color)
            or none
            </summary>
            <value>The border right.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.BorderTop">
            <summary>
            Gets or sets the border top.
            This could be e.g. 0.002cm solid #000000 (width, linestyle, color)
            or none
            </summary>
            <value>The border top.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.BorderBottom">
            <summary>
            Gets or sets the border bottom.
            This could be e.g. 0.002cm solid #000000 (width, linestyle, color)
            or none
            </summary>
            <value>The border bottom.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.BackgroundColor">
            <summary>
            Gets or sets the color of the background. e.g #000000 for black
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.CellProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.ChartGraphicProperties">
            <summary>
            Summary description for ChartGraphicProperties.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ChartGraphicProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            the constructor of chart graphic property
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ChartGraphicProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ChartGraphicProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.DrawStroke">
            <summary>
            gets and sets the draw stroke
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.StrokeDash">
            <summary>
            gets and sets stroke dash
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.StrokeDashNames">
            <summary>
            gets and sets stroke dash name
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.StrokeWidth">
            <summary>
            gets and sets the stroke width
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.StrokeColor">
            <summary>
            gets and sets stroke color
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.MarkerStart">
            <summary>
            gets and sets marker start
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.MarkerEnd">
            <summary>
            gets and sets marker end
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.MarkerStartWidth">
            <summary>
            gets and sets marker start width
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.MarkerEndWidth">
            <summary>
            gets and set marker end width
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.MarkerEndCenter">
            <summary>
            gets and sets marker end center
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.MarkerStartCenter">
            <summary>
            gets and sets marker start center
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.StrokeOpacity">
            <summary>
            gets and sets stroke opacity
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.StrokeLineJoin">
            <summary>
            gets and sets stroke line join
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillColor">
            <summary>
            gets and sets fill color
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.SecondaryFillColor">
            <summary>
            gets and sets secondary fill color
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillGradientName">
            <summary>
            gets and sets fill gradient name
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.GradientStepCount">
            <summary>
            gets and sets gradient step count
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillHatchName">
            <summary>
            gets and sets fill hatch name
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillHatchSolid">
            <summary>
            gets and sets fill hatch solid
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillImageName">
            <summary>
            gets and sets fill image name
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.StyleRepeat">
            <summary>
            gets and sets style repeat
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillImageWidth">
            <summary>
            gets and sets fill image width
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillImageHeight">
            <summary>
            gets and sets fill image height
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillImageRefPoint">
            <summary>
            gets and sets fill image ref point
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillImageRefPointX">
            <summary>
            gets and sets fill image ref pointx
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillImageRefPointY">
            <summary>
            gets and sets fill image ref pointy
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.TileRepeatOffset">
            <summary>
            gets and sets tile repeat offset
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.Opacity">
            <summary>
            gets and sets opacity
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.OpacityName">
            <summary>
            gets and sets opacity name
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.FillRule">
            <summary>
            gets and sets fill rule
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.SymbolColor">
            <summary>
            gets and sets symbol color
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.HorizontalSegment">
            <summary>
            gets and sets horizontal segment
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.VerticalSegment">
            <summary>
            gets and sets vertical segment
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.EdgeRounding">
            <summary>
            gets and sets edge rounding
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.EdgeRoundingMode">
            <summary>
            gets and sets edge rounding mode
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.BackScale">
            <summary>
            gets and sets back scale
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.Depth">
            <summary>
            gets and sets depth
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.BackFaceCulling">
            <summary>
            gets and sets back face culling
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.EndAngle">
            <summary>
            gets and sets end angle
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.CloseFront">
            <summary>
            gets and sets close front
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.CloseBack">
            <summary>
            gets and sets close back
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ChartGraphicProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.ColumnProperties">
            <summary>
            ColumnProperties represent the table column properties.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ColumnProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            The Constructor, create new instance of ColumnProperties
            </summary>
            <param name="style">The ColumnStyle</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ColumnProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ColumnProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ColumnProperties.Width">
            <summary>
            Set the column width -> table = 16.99cm -> column = 8.49cm
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ColumnProperties.RelativeWidth">
            <summary>
            Set the column relative width
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ColumnProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ColumnProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.GraphicProperties">
            <summary>
            GraphicProperties represent the hraphic properties.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.GraphicProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.Properties.GraphicProperties"/> class.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.GraphicProperties.InitStandardImplemenation">
            <summary>
            Inits the standard implemenation.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.GraphicProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.GraphicProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.FrameStyle">
            <summary>
            Gets or sets the frame style.
            </summary>
            <value>The frame style.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.MarginLeft">
            <summary>
            Gets or sets the margin to the left.
            (distance bewteen image and surrounding text)
            </summary>
            <value>The distance e.g 0.3cm.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.MarginRight">
            <summary>
            Gets or sets the margin to the right.
            (distance bewteen image and surrounding text)
            </summary>
            <value>The distance e.g 0.3cm.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.MarginTop">
            <summary>
            Gets or sets the margin to the top.
            (distance bewteen image and surrounding text)
            </summary>
            <value>The distance e.g 0.3cm.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.MarginBottom">
            <summary>
            Gets or sets the margin to the bottom.
            (distance bewteen image and surrounding text)
            </summary>
            <value>The distance e.g 0.3cm.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.HorizontalPosition">
            <summary>
            Gets or sets the horizontal position. e.g center, from-left, right
            </summary>
            <value>The horizontal position.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.VerticalPosition">
            <summary>
            Gets or sets the vertical position. e.g. from-top
            </summary>
            <value>The vertical position.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.VerticalRelative">
            <summary>
            Gets or sets the vertical relative. e.g. paragraph
            </summary>
            <value>The vertical relative.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.HorizontalRelative">
            <summary>
            Gets or sets the horizontal relative. e.g. paragraph
            </summary>
            <value>The horizontal relative.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.Mirror">
            <summary>
            Gets or sets the mirror. e.g. none
            </summary>
            <value>The mirror.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.Clip">
            <summary>
            Gets or sets the clip. e.g rect(0cm 0cm 0cm 0cm)
            </summary>
            <value>The clip value.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.LuminanceInProcent">
            <summary>
            Gets or sets the luminance in procent. e.g 10%
            </summary>
            <value>The luminance in procent.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.ContrastInProcent">
            <summary>
            Gets or sets the contrast in procent. e.g 10%
            </summary>
            <value>The contrast in procent.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.DrawRedInProcent">
            <summary>
            Gets or sets the draw red in procent. e.g. 10%
            </summary>
            <value>The draw red in procent.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.DrawGreenInProcent">
            <summary>
            Gets or sets the draw green in procent. e.g 10%
            </summary>
            <value>The draw green in procent.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.DrawBlueInProcent">
            <summary>
            Gets or sets the draw blue in procent. e.g 0%
            </summary>
            <value>The draw blue in procent.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.DrawGammaInProcent">
            <summary>
            Gets or sets the draw gamma in procent. e.g. 100%
            </summary>
            <value>The draw gamma in procent.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.ColorInversion">
            <summary>
            Gets or sets a value indicating whether [color inversion].
            </summary>
            <value><c>true</c> if [color inversion]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.ImageOpacityInProcent">
            <summary>
            Gets or sets the image opacity in procent. e.g. 100%
            </summary>
            <value>The image opacity in procent.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.ColorMode">
            <summary>
            Gets or sets the color mode. e.g. standard
            </summary>
            <value>The color mode.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.GraphicProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.IPropertyCollection">
            <summary>
            IPropertyCollection
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.IPropertyCollection.Add(AODL.Document.Styles.Properties.IProperty)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Styles.Properties.IPropertyCollection.Remove(AODL.Document.Styles.Properties.IProperty)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.IPropertyCollection.Insert(System.Int32,AODL.Document.Styles.Properties.IProperty)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.IPropertyCollection.Contains(AODL.Document.Styles.Properties.IProperty)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Styles.Properties.IPropertyCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Styles.Properties.IProperty"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.ListLevelProperties">
            <summary>
            Represent the properties of the list levels.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ListLevelProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            Constructor create a new ListLevelProperties object.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ListLevelProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ListLevelProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ListLevelProperties.SpaceBefore">
            <summary>
            Gets or sets the space before.
            </summary>
            <value>The space before.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ListLevelProperties.MinLabelWidth">
            <summary>
            Gets or sets the width of the min label.
            </summary>
            <value>The width of the min label.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ListLevelProperties.Node">
            <summary>
            The XmlNode.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ListLevelProperties.Style">
            <summary>
            The style to this ListLevelProperties object belongs.
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.Properties.ParagraphProperties">
            <summary>
            Represent access to the possible attributes of of an paragraph-propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ParagraphProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.Properties.ParagraphProperties"/> class.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ParagraphProperties.#ctor(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.Properties.ParagraphProperties"/> class.
            </summary>
            <param name="style">The style.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ParagraphProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ParagraphProperties.NewXmlNode">
            <summary>
            News the XML node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.ParagraphProperties.GetHtmlStyle">
            <summary>
            Get the css style fragement
            </summary>
            <returns>The css style attribute</returns>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.Paragraphstyle">
            <summary>
            The ParagraphStyle object to this object belongs.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.MarginLeft">
            <summary>
            Margin left. in cm an object .MarginLeft = "1cm";
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.BreakBefore">
            <summary>
            Gets or sets the break before.
            e.g. set this to "page" if this paragraph
            should be start on the next page.
            </summary>
            <value>The break before.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.BreakAfter">
            <summary>
            Gets or sets the break after.
            e.g. set this to "page" if after this paragraph
            should be added a new page.
            </summary>
            <value>The break before.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.Border">
            <summary>
            Gets or sets the border.
            This could be e.g. 0.002cm solid #000000 (width, linestyle, color)
            or none
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.BackgroundColor">
            <summary>
            Set the background color
            Use Colors.GetColor(Color color) to set 
            on of the available .net colors
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.Padding">
            <summary>
            Gets or sets the padding. 
            Default 0.049cm 
            Use this in combination with the Border property
            </summary>
            <value>The padding.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.LineSpacing">
            <summary>
            Gets or sets the line height in %.
            200% means double space
            </summary>
            <value>The line height.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.TabStopStyleCollection">
            <summary>
            Gets or sets the tab stop style collection.
            <b>Notice:</b> A TabStopStyleCollection will not work
            within a Standard Paragraph!
            </summary>
            <value>The tab stop style collection.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.Alignment">
            <summary>
            Set paragraph alignment - object.Alignment = TextAlignments.right.ToString()
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.ParagraphProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.ParagraphHelper">
            <summary>
            Some helper constants for Paragraph properties
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.ParagraphHelper.LineSpacing15">
            <summary>
            Line spacing 1.5 lines
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.ParagraphHelper.LineDouble">
            <summary>
            Line spacing double
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.ParagraphHelper.LineSpacing3">
            <summary>
            Line spacing three lines
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.Properties.PlotAreaProperties">
            <summary>
            Summary description for PlotAreaProperties.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.PlotAreaProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            the constructor of plotarea property
            </summary>
            <param name="style"></param>
        </member>
        <member name="P:AODL.Document.Styles.Properties.PlotAreaProperties.SeriesSource">
            <summary>
            gets and sets series source
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.PlotAreaProperties.RegressionType">
            <summary>
            gets and sets regression type
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.Properties.RowProperties">
            <summary>
            RowProperties represent table row properties.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.RowProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.Properties.RowProperties"/> class.
            </summary>
            <param name="style">The rowstyle.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.RowProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.RowProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.RowProperties.GetHtmlStyle">
            <summary>
            Gets the HTML style.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Styles.Properties.RowProperties.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.RowProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.RowProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.SectionProperties">
            <summary>
            SectionProperties represent the section properties which is e.g used
            within a table of contents.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.SectionProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.Properties.SectionProperties"/> class.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.SectionProperties.AddStandardColumnStyle">
            <summary>
            Adds the standard column style.
            While creating new TableOfContent objects
            AODL will only support a TableOfContent
            which use the Header styles with outlining
            without table columns
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.SectionProperties.NewXmlNode">
            <summary>
            Create a new XmlNode.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.SectionProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="P:AODL.Document.Styles.Properties.SectionProperties.Editable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AODL.Document.Styles.Properties.SectionProperties"/> is editable.
            </summary>
            <value><c>true</c> if editable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.SectionProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.SectionProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.TableProperties">
            <summary>
            TableProperties represent the table properties.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.TableProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            Constructor create a new TableProperties instance.
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.TableProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.TableProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.TableProperties.GetHtmlStyle">
            <summary>
            Get the css style fragement
            </summary>
            <returns>The css style attribute</returns>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TableProperties.Width">
            <summary>
            Set the table width -> 16.99cm
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TableProperties.Align">
            <summary>
            Set the table align -> margin
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TableProperties.Shadow">
            <summary>
            Set the table shadow
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TableProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TableProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.TextAlignments">
            <summary>
            Possible text alignments.
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextAlignments.start">
            <summary>
            Start
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextAlignments.end">
            <summary>
            End
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextAlignments.left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextAlignments.right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextAlignments.center">
            <summary>
            center
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextAlignments.justify">
            <summary>
            Justify
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.Properties.TextProperties">
            <summary>
            Represent access to the possible attributes of of an text-propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.TextProperties.#ctor(AODL.Document.Styles.IStyle)">
            <summary>
            Create a new TextProperties object that belongs to the given TextStyle object.
            </summary>
            <param name="style">The TextStyle object.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.TextProperties.SetUnderlineStyles(System.String,System.String,System.String)">
            <summary>
            Use to set all possible underline styles. You can use this method
            instead to set all necessary properties by hand.
            </summary>
            <param name="style">The style. Sess enum LineStyles.</param>
            <param name="width">The width. Sess enum LineWidths.</param>
            <param name="color">The color. "font-color" or as hex #[0-9a-fA-F]{6}</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.TextProperties.NewXmlNode">
            <summary>
            Create the XmlNode which represent the propertie element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.TextProperties.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.Properties.TextProperties.GetHtmlStyle">
            <summary>
            Get the css style fragement
            </summary>
            <returns>The css style attribute</returns>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.Bold">
            <summary>
            Set font-weight bold object.Bold = "bold";
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.Position">
            <summary>
            Set text position, could be sub- ("sub 58%") or superscript ("super 58%")
            See TextPropertieHelper for possible settings
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.Shadow">
            <summary>
            Set text shadow e.g. "1pt 1pt"
            See TextPropertieHelper for possible settings
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.Outline">
            <summary>
            Set text outline e.g. "true"
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.TextLineThrough">
            <summary>
            Set text to line through
            See LineStyles for possible settings
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.FontColor">
            <summary>
            Set the font color
            Use Colors.GetColor(Color color) to set 
            on of the available .net colors
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.BackgroundColor">
            <summary>
            Set the background color
            Use Colors.GetColor(Color color) to set 
            on of the available .net colors
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.Italic">
            <summary>
            Set font-style italic object.Italic = "italic";
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.Underline">
            <summary>
            Set text-underline-style Underline object.Underline = "dotted";
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.UnderlineWidth">
            <summary>
            Set text-underline-style Underline object.Underline = "dotted";
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.UnderlineColor">
            <summary>
            Set text-underline-color - object.UnderlineColor = "font-color";
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.FontName">
            <summary>
            Set font-name you will find all available fonts in class FontFamilies
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.FontSize">
            <summary>
            Set font-name - object.FontSize = "10pt";
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value>The node</value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.TextProperties.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.Properties.TextPropertieHelper">
            <summary>
            Propertie Helpers
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextPropertieHelper.Subscript">
            <summary>
            Subscript use within Postion
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextPropertieHelper.Superscript">
            <summary>
            Superscript use within Postion
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextPropertieHelper.Shadowlight">
            <summary>
            Light shadow use within Shadow
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextPropertieHelper.Shadowmidlle">
            <summary>
            Middle shadow use within Shadow
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Properties.TextPropertieHelper.Shadowheavy">
            <summary>
            Heavy shadow use within Shadow
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.Properties.UnknownProperty">
            <summary>
            UnknownProperty represent an unknown element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.Properties.UnknownProperty.#ctor(AODL.Document.Styles.IStyle,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.Properties.UnknownProperty"/> class.
            </summary>
            <param name="style">The style.</param>
            <param name="node">The node.</param>
        </member>
        <member name="P:AODL.Document.Styles.Properties.UnknownProperty.Node">
            <summary>
            The XmlNode which represent the property element.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.Properties.UnknownProperty.Style">
            <summary>
            The style object to which this property object belongs
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.AxesStyle">
            <summary>
            Summary description for AxesStyle.
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.IStyle">
            <summary>
            All styles that can be used within an document 
            in the OpenDocument format have to implement
            this interface.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.IStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.IStyle.StyleName">
            <summary>
            The style name
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.IStyle.Document">
            <summary>
            The OpenDocument document to which this style
            belongs.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.IStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.AxesStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            the constructor of the axesStyle
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:AODL.Document.Styles.AxesStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TableStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.AxesStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.AxesStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.AxesStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.AxesStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.AxesStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.AxesStyle.ChartGraphicProperties">
            <summary>
            gets and sets the chart graphic property
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.AxesStyle.TextProperties">
            <summary>
            gets and sets the text properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.AxesStyle.AxesProperties">
            <summary>
            gets and sets the axes properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.AxesStyle.FamilyStyle">
            <summary>
            gets and sets the family style
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.AxesStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.AxesStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.AxesStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.AxesStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.CellStyle">
            <summary>
            CellStyle represent the style that is
            used within a table cell.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.CellStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.CellStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
        </member>
        <member name="M:AODL.Document.Styles.CellStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.CellStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.CellStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.CellStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.CellStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.CellStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.CellStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.CellStyle.CellProperties">
            <summary>
            Gets or sets the cell properties.
            </summary>
            <value>The cell properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.CellStyle.FamilyStyle">
            <summary>
            Gets or sets the family style.
            </summary>
            <value>The family style.</value>
        </member>
        <member name="P:AODL.Document.Styles.CellStyle.ParentStyleName">
            <summary>
            Gets or sets the name of the parent style.
            </summary>
            <value>The name of the parent style.</value>
        </member>
        <member name="P:AODL.Document.Styles.CellStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.CellStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.CellStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.CellStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.ChartStyle">
            <summary>
            Summary description for ChartStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ChartStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            the constructor of the chart style
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:AODL.Document.Styles.ChartStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TableStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.ChartStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ChartStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ChartStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.ChartStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.ChartStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.ChartStyle.ChartGraphicProperties">
            <summary>
            gets and sets the chart graphic properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.ChartStyle.TextProperties">
            <summary>
            gets and sets the text properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.ChartStyle.FamilyStyle">
            <summary>
            gets and sets the family style
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.ChartStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ChartStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ChartStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ChartStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.ChartStyles">
            <summary>
            Summary description for ChartStyles.
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.ChartStyles.OfficeStyles">
            <summary>
            XPath to the document office styles
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.ChartStyles.Styles">
            <summary>
            Gets or sets the chart styles from the styles.xml file.
            </summary>
            <value>The styles.</value>
        </member>
        <member name="T:AODL.Document.Styles.ColumnStyle">
            <summary>
            ColumnStyle represent a table column style.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ColumnStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.ColumnStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
        </member>
        <member name="M:AODL.Document.Styles.ColumnStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.ColumnStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.ColumnStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ColumnStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ColumnStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.ColumnStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.ColumnStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.ColumnStyle.ColumnProperties">
            <summary>
            Gets or sets the column properties.
            </summary>
            <value>The column properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.ColumnStyle.ParentStyleName">
            <summary>
            Gets or sets the name of the parent style.
            </summary>
            <value>The name of the parent style.</value>
        </member>
        <member name="P:AODL.Document.Styles.ColumnStyle.FamilyStyle">
            <summary>
            Gets or sets the family style.
            </summary>
            <value>The family style.</value>
        </member>
        <member name="P:AODL.Document.Styles.ColumnStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ColumnStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ColumnStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ColumnStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.DataPointStyle">
            <summary>
            Summary description for DataPointStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.DataPointStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            the constructor of dataPoint style
            </summary>
            <param name="document"></param>
            <param name="styleName"></param>
        </member>
        <member name="M:AODL.Document.Styles.DataPointStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.DataPointStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.DataPointStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.DataPointStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.DataPointStyle.ChartGraphicProperties">
            <summary>
            gets and sets the chart graphic properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.DataPointStyle.TextProperties">
            <summary>
            gets and sets text properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.DataPointStyle.FamilyStyle">
            <summary>
            gets and sets the family style
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.DataPointStyle.StyleName">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>The name of the style.</value>
        </member>
        <member name="P:AODL.Document.Styles.DataPointStyle.Document">
            <summary>
            Every object (typeof(IContent)) have to know his document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.DataPointStyle.Style">
            <summary>
            A Style class wich is referenced with the content object.
            If no style is available this is null.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.DataPointStyle.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Styles.DataPointStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.FamiliyStyles">
            <summary>
            Class that represents th possible values. For a style emlement and his family-style attribute.
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FamiliyStyles.Table">
            <summary>
            table
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FamiliyStyles.TableColumn">
            <summary>
            column
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FamiliyStyles.TableCell">
            <summary>
            cell
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FamiliyStyles.TableRow">
            <summary>
            row
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FamiliyStyles.Paragraph">
            <summary>
            paragraph
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FamiliyStyles.Text">
            <summary>
            text
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FamiliyStyles.Graphic">
            <summary>
            graphic
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.FloorStyle">
            <summary>
            Summary description for FloorStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.FloorStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            the constructor of floor style
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="M:AODL.Document.Styles.FloorStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TableStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.FloorStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.FloorStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.FloorStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.FloorStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.FloorStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.FloorStyle.ChartGraphicProperties">
            <summary>
            gets and sets the chart graphic properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.FloorStyle.FamilyStyle">
            <summary>
            gets and sets family style
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.FloorStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.FloorStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.FloorStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.FloorStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.FontFamilies">
            <summary>
            Class reprsent all 102 available fonts in OpenOffice.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.FontFamilies.PtToPx(System.String)">
            <summary>
            Pts to px.
            </summary>
            <param name="point">The point.</param>
            <returns>The font size in pixel</returns>
        </member>
        <member name="M:AODL.Document.Styles.FontFamilies.HtmlFont(System.String)">
            <summary>
            Replace some numberings of OO fonts 
            </summary>
            <param name="ooFont">The oo font.</param>
            <returns>The html font</returns>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Marlett">
            <summary>
            Marlett
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.OpenSymbol">
            <summary>
            OpenSymbol
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.VisualUI">
            <summary>
            VisualUI
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Wingdings">
            <summary>
            Wingdings
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.MTExtra">
            <summary>
            MT Extra
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Webdings">
            <summary>
            Webdings
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Wingdings2">
            <summary>
            Wingdings 2
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Wingdings3">
            <summary>
            Wingdings 3
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.HolidayPiBT">
            <summary>
            HolidayPi BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Tahoma2">
            <summary>
            Tahoma2
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.BitstreamVeraSansMono">
            <summary>
            Bitstream Vera Sans Mono
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.CourierNew">
            <summary>
            Courier New
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.LucidaConsole">
            <summary>
            Lucida Console
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.AcademyEngravedLET">
            <summary>
            Academy Engraved LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Gautami">
            <summary>
            Gautami
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.HighlightLET">
            <summary>
            Highlight LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.JohnHandyLET">
            <summary>
            John Handy LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.JokermanAltsLET">
            <summary>
            Jokerman Alts LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.LaBambaLET">
            <summary>
            La Bamba LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Latha">
            <summary>
            Latha
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.LucidaSansUnicode1">
            <summary>
            Lucida Sans Unicode1
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.MVBoli">
            <summary>
            MV Boli
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Mangal">
            <summary>
            Mangal
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.MekanikLET">
            <summary>
            Mekanik LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.MilanoLET">
            <summary>
            Milano LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.OdessaLET">
            <summary>
            Odessa LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.OneStrokeScriptLET">
            <summary>
            One Stroke Script LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.OrangeLET">
            <summary>
            Orange LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.PumpDemiBoldLET">
            <summary>
            Pump Demi Bold LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.QuixleyLET">
            <summary>
            Quixley LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Raavi">
            <summary>
            Raavi
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.RageItalicLET">
            <summary>
            Rage Italic LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.RuachLET">
            <summary>
            Ruach LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.ScruffLET">
            <summary>
            Scruff LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Shruti">
            <summary>
            Shruti
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.SmudgerAltsLET">
            <summary>
            Smudger Alts LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Tahoma1">
            <summary>
            Tahoma1
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.TirantiSolidLET">
            <summary>
            Tiranti Solid LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Tunga">
            <summary>
            Tunga
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.UniversityRomanAltsLET">
            <summary>
            University Roman Alts LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.VictorianLET">
            <summary>
            Victorian LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.WestwoodLET">
            <summary>
            Westwood LET
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.BlackadderITC">
            <summary>
            Blackadder ITC
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.BroadwayBT">
            <summary>
            Broadway BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.CurlzMT">
            <summary>
            Curlz MT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.FelixTitling">
            <summary>
            Felix Titling
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.MatisseITC">
            <summary>
            Matisse ITC
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.OldDreadfulNo7BT">
            <summary>
            OldDreadfulNo7 BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.TempusSansITC">
            <summary>
            Tempus Sans ITC
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Modern">
            <summary>
            Modern
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.BitstreamVeraSerif">
            <summary>
            Bitstream Vera Serif
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.BookAntiqua">
            <summary>
            Book Antiqua
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.BookmanOldStyle">
            <summary>
            Bookman Old Style
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.EngraversMT">
            <summary>
            Engravers MT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Garamond">
            <summary>
            Garamond
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Georgia">
            <summary>
            Georgia
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.PalatinoLinotype">
            <summary>
            Palatino Linotype
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Perpetua">
            <summary>
            Perpetua
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.RockwellExtraBold">
            <summary>
            Rockwell Extra Bold
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Roman">
            <summary>
            Roman
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Sylfaen">
            <summary>
            Sylfaen
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.TimesNewRoman">
            <summary>
            Times New Roman
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Blackletter686BT">
            <summary>
            Blackletter686 BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.BradleyHandITC">
            <summary>
            Bradley Hand ITC
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Calligraph421BT">
            <summary>
            Calligraph421 BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.CataneoBT">
            <summary>
            Cataneo BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.ComicSansMS">
            <summary>
            Comic Sans MS
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.EdwardianScriptITC">
            <summary>
            Edwardian Script ITC
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.EstrangeloEdessa">
            <summary>
            Estrangelo Edessa
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.FrenchScriptMT">
            <summary>
            French Script MT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.KristenITC">
            <summary>
            Kristen ITC
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.MisterEarlBT">
            <summary>
            MisterEarl BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Mistral">
            <summary>
            Mistral
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Papyrus">
            <summary>
            Papyrus
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.ParkAvenueBT">
            <summary>
            ParkAvenue BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Script">
            <summary>
            Script
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Staccato222BT">
            <summary>
            Staccato222 BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Vivaldi">
            <summary>
            Vivaldi
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Arial">
            <summary>
            Arial
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.ArialBlack">
            <summary>
            Arial Black
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.ArialNarrow">
            <summary>
            Arial Narrow
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.BitstreamVeraSans">
            <summary>
            Bitstream Vera Sans
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.CenturyGothic">
            <summary>
            Century Gothic
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.CopperplateGothicBold">
            <summary>
            Copperplate Gothic Bold
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.CopperplateGothicLight">
            <summary>
            Copperplate Gothic Light
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.ErasDemiITC">
            <summary>
            Eras Demi ITC
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.ErasLightITC">
            <summary>
            Eras Light ITC
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Eurostile">
            <summary>
            Eurostile
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.FranklinGothicBook">
            <summary>
            Franklin Gothic Book
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.FranklinGothicDemi">
            <summary>
            Franklin Gothic Demi
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.FranklinGothicMedium">
            <summary>
            Franklin Gothic Medium
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.FranklinGothicMediumCond">
            <summary>
            Franklin Gothic Medium Cond
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Impact">
            <summary>
            Impact
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.LucidaSans">
            <summary>
            Lucida Sans
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.LucidaSansUnicode">
            <summary>
            Lucida Sans Unicode
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.MaiandraGD">
            <summary>
            Maiandra GD
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.MicrosoftSansSerif">
            <summary>
            Microsoft Sans Serif
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Square721BT">
            <summary>
            Square721 BT
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Tahoma">
            <summary>
            Tahoma
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.TrebuchetMS">
            <summary>
            Trebuchet MS
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.FontFamilies.Verdana">
            <summary>
            Verdana
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.FrameStyle">
            <summary>
            FrameStyle represent a style which is used within a draw frame object.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.FrameStyle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.FrameStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Styles.FrameStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.FrameStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.FrameStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.FrameStyle.NewXmlNode">
            <summary>
            Create the XmlNode that represent this element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.FrameStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.FrameStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.FrameStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.FrameStyle.GraphicProperties">
            <summary>
            Gets or sets the graphic properties.
            </summary>
            <value>The graphic properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.FrameStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.FrameStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.FrameStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.FrameStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.GridStyle">
            <summary>
            Summary description for GridStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.GridStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.GridStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.GridStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.GridStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.GridStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.GridStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.IStyleCollection">
            <summary>
            IStyleCollection
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.IStyleCollection.Add(AODL.Document.Styles.IStyle)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Styles.IStyleCollection.Remove(AODL.Document.Styles.IStyle)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.IStyleCollection.Insert(System.Int32,AODL.Document.Styles.IStyle)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.IStyleCollection.Contains(AODL.Document.Styles.IStyle)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AODL.Document.Styles.IStyleCollection.GetStyleByName(System.String)">
            <summary>
            Gets the name of the style by.
            </summary>
            <param name="styleName">Name of the style.</param>
            <returns></returns>
        </member>
        <member name="P:AODL.Document.Styles.IStyleCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Styles.IStyle"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.LegendStyle">
            <summary>
            Summary description for LegendStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.LegendStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            the constructor of the legend style
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:AODL.Document.Styles.LegendStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TableStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.LegendStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.LegendStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.LegendStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.LegendStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.LegendStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.LegendStyle.ChartGraphicProperties">
            <summary>
            Gets or sets the chart graphic properties.
            </summary>
            <value>The graphic properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.LegendStyle.TextProperties">
            <summary>
            Gets or sets the text properties.
            </summary>
            <value>The text properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.LegendStyle.FamilyStyle">
            <summary>
            Gets or sets the family style.
            </summary>
            <value>The family style.</value>
        </member>
        <member name="P:AODL.Document.Styles.LegendStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.LegendStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.LegendStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.LegendStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.LineStyles">
            <summary>
            Represents the possible line styles used in OpenDocument.
            e.g for the FormatedText.Underline
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.LineStyles.longdash">
            <summary>
            long-dash
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.LineStyles.dotdash">
            <summary>
            dot-dash
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.LineStyles.dotdotdash">
            <summary>
            dot-dot-dash
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.LineStyles.none">
            <summary>
            No style
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.LineStyles.solid">
            <summary>
            solid
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.LineStyles.dotted">
            <summary>
            dotted
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.LineStyles.dash">
            <summary>
            dash
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.LineStyles.wave">
            <summary>
            wave
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.Border">
            <summary>
            Border helper class
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Border.NormalSolid">
            <summary>
            Normal solid
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Border.MiddleSolid">
            <summary>
            Middlle solid
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.Border.HeavySolid">
            <summary>
            Heavy solid
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.ListLevelStyle">
            <summary>
            Represent the list level style.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyle.#ctor(AODL.Document.IDocument,AODL.Document.Styles.ListStyle,AODL.Document.Styles.ListStyles,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.ListLevelStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="style">The style.</param>
            <param name="typ">The typ.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyle.InitStandards(System.Int32)">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyle.AddListLevel(System.Int32)">
            <summary>
            Adds the list level.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyle.NewXmlNode(AODL.Document.Styles.ListStyles,System.Int32)">
            <summary>
            Create the XmlNode that represent the Style element.
            </summary>
            <param name="typ">The style name.</param>
            <param name="level">The level number which represent this style.</param>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyle.AddTextPropertie">
            <summary>
            Add the TextPropertie, necessary if the list is a bullet list.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.ListLevelStyle.ListStyle">
            <summary>
            The ListStyle to this object belongs.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.ListLevelStyle.ListLevelProperties">
            <summary>
            Gets or sets the text properties.
            </summary>
            <value>The text properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.ListLevelStyle.TextProperties">
            <summary>
            Gets or sets the text properties.
            </summary>
            <value>The text properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.ListLevelStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ListLevelStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ListLevelStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ListLevelStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.ListLevelStyleCollection">
            <summary>
            A ListLevelStyle collection
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyleCollection.Add(AODL.Document.Styles.ListLevelStyle)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyleCollection.Remove(AODL.Document.Styles.ListLevelStyle)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyleCollection.Insert(System.Int32,AODL.Document.Styles.ListLevelStyle)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.ListLevelStyleCollection.Contains(AODL.Document.Styles.ListLevelStyle)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Styles.ListLevelStyleCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Styles.ListLevelStyle"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.ListStyle">
            <summary>
            Represent the ListStyle for a List.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ListStyle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.ListStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Styles.ListStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Create a new ListStyle object.
            </summary>
            <param name="document">The docuemnt</param>
            <param name="styleName">The style name</param>
        </member>
        <member name="M:AODL.Document.Styles.ListStyle.AutomaticAddListLevelStyles(AODL.Document.Styles.ListStyles)">
            <summary>
            Add all possible ListLevelStyle objects automatically.
            Throws exception, if there are already ListLevelStyles
            which could'nt removed.
            </summary>
            <param name="typ">The Liststyle bullet, numbered, ..s</param>
        </member>
        <member name="M:AODL.Document.Styles.ListStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ListStyle.NewXmlNode">
            <summary>
            Create the XmlNode that represent this element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ListStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.ListStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.ListStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.ListStyle.ListlevelStyles">
            <summary>
            The ListLevelStyles which belongs to this object.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.ListStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ListStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ListStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ListStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.ListStyles">
            <summary>
            Represent the different kinds of lis styles.
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.ListStyles.Number">
            <summary>
            Numbered list
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.ListStyles.Bullet">
            <summary>
            Bullet list
            </summary>
        </member>
        <member name="T:AODL.Document.SpreadsheetDocuments.Tables.Style.OfficeValueTypes">
            <summary>
            OfficeValueTypes represent possible values
            for office values that are used within
            spreadsheet table cells
            </summary>
        </member>
        <member name="M:AODL.Document.SpreadsheetDocuments.Tables.Style.OfficeValueTypes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.SpreadsheetDocuments.Tables.Style.OfficeValueTypes"/> class.
            </summary>
        </member>
        <member name="F:AODL.Document.SpreadsheetDocuments.Tables.Style.OfficeValueTypes.Float">
            <summary>
            Type float (floating point number)
            </summary>
        </member>
        <member name="F:AODL.Document.SpreadsheetDocuments.Tables.Style.OfficeValueTypes.String">
            <summary>
            Type string (text)
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.ParagraphStyle">
            <summary>
            Represent the style for a Paragraph object.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ParagraphStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.ParagraphStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.ParagraphStyle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.ParagraphStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Styles.ParagraphStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.ParagraphStyle.NewXmlNode(System.String)">
            <summary>
            Create the XmlNode that represent this element.
            </summary>
            <param name="name">The style name.</param>
        </member>
        <member name="M:AODL.Document.Styles.ParagraphStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.ParagraphStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.ParagraphStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.ParagraphStyle.ParagraphProperties">
            <summary>
            Gets or sets the paragraph properties.
            </summary>
            <value>The paragraph properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.ParagraphStyle.TextProperties">
            <summary>
            Gets or sets the text properties.
            </summary>
            <value>The text properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.ParagraphStyle.ParentStyle">
            <summary>
            The parent style of this object.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.ParagraphStyle.ListStyleName">
            <summary>
            The parent style of this object.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.ParagraphStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ParagraphStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ParagraphStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ParagraphStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.ParagraphStyle.Family">
            <summary>
            The family style.
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.ParentStyles">
            <summary>
            Enum that represents th possible values. For a style emlement and his parent-style attribute.
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.ParentStyles.Standard">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.ParentStyles.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.ParentStyles.Text_20_body">
            <summary>
            Standard body text
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.PlotAreaStyle">
            <summary>
            Summary description for PlotAreaStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.PlotAreaStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            the constructor of the plotarea style
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="M:AODL.Document.Styles.PlotAreaStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.PlotAreaStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.PlotAreaStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.PlotAreaStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.PlotAreaStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.PlotAreaStyle.ChartGraphicProperties">
            <summary>
            gets and sets chart graphic properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.PlotAreaStyle.PlotAreaProperties">
            <summary>
            gets and sets the plotarea properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.PlotAreaStyle.FamilyStyle">
            <summary>
            gets and sets the family style
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.PlotAreaStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.PlotAreaStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.PlotAreaStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.PlotAreaStyle.PropertyCollection">
            <summary>
            Collection of properties. 
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.RowStyle">
            <summary>
            RowStyle represent a style which is used
            within a table row
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.RowStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.RowStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
        </member>
        <member name="M:AODL.Document.Styles.RowStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.RowStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.RowStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.RowStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.RowStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.RowStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.RowStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.RowStyle.RowProperties">
            <summary>
            Gets or sets the row properties.
            </summary>
            <value>The row properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.RowStyle.FamilyStyle">
            <summary>
            Gets or sets the family style.
            </summary>
            <value>The family style.</value>
        </member>
        <member name="P:AODL.Document.Styles.RowStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.RowStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.RowStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.RowStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.SectionStyle">
            <summary>
            SectionStyle represent a section style.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.SectionStyle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.SectionStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Styles.SectionStyle.#ctor(AODL.Document.Content.IContent,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.SectionStyle"/> class.
            </summary>
            <param name="content">The content.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.SectionStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.SectionStyle.NewXmlNode(System.String)">
            <summary>
            Create a new XmlNode.
            </summary>
            <param name="stylename">The stylename which should be referenced with this table of contents.</param>
        </member>
        <member name="M:AODL.Document.Styles.SectionStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.SectionStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.SectionStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.SectionStyle.Content">
            <summary>
            Gets or sets the content to this
            section style belongs
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:AODL.Document.Styles.SectionStyle.SectionProperties">
            <summary>
            Gets or sets the section properties.
            </summary>
            <value>The section properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.SectionStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.SectionStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.SectionStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.SectionStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Content.Charts.SeriesStyle">
            <summary>
            Summary description for SeriesStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesStyle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            the constructor of the series style
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Content.Charts.SeriesStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Content.Charts.SeriesStyle.ChartGraphicProperties">
            <summary>
            gets and sets chart graphic properties
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.SeriesStyle.TextProperties">
            <summary>
            gets and sets the text properties
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.SeriesStyle.ChartProperties">
            <summary>
            gets and sets chart properties
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.SeriesStyle.FamilyStyle">
            <summary>
            gets and sets the family style
            </summary>
        </member>
        <member name="P:AODL.Document.Content.Charts.SeriesStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.SeriesStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.SeriesStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Content.Charts.SeriesStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.TableStyle">
            <summary>
            TableStyle represent the style which is used
            within a spreadsheet table.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TableStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TableStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
        </member>
        <member name="M:AODL.Document.Styles.TableStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TableStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.TableStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TableStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TableStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.TableStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.TableStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.TableStyle.TableProperties">
            <summary>
            Gets or sets the table properties.
            </summary>
            <value>The table properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.TableStyle.FamilyStyle">
            <summary>
            Gets or sets the family style.
            </summary>
            <value>The family style.</value>
        </member>
        <member name="P:AODL.Document.Styles.TableStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TableStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TableStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TableStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.TabStopLeaderStyles">
            <summary>
            Represent all possible TabStopLeader Styles.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TabStopLeaderStyles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TabStopLeaderStyles"/> class.
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.TabStopLeaderStyles.Dotted">
            <summary>
            Dotted style
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.TabStopLeaderStyles.Solid">
            <summary>
            Dotted style
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.TabStopTypes">
            <summary>
            Represent all possible TabStopLeader Styles.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TabStopTypes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TabStopLeaderStyles"/> class.
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.TabStopTypes.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:AODL.Document.Styles.TabStopTypes.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="T:AODL.Document.Styles.TabStopStyle">
            <summary>
            Class represent a TabStopStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TabStopStyle.#ctor(AODL.Document.IDocument,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TabStopStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:AODL.Document.Styles.TabStopStyle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TabStopStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Styles.TabStopStyle.NewXmlNode(System.Double)">
            <summary>
            Create the XmlNode that represent this element.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:AODL.Document.Styles.TabStopStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyle.Position">
            <summary>
            Position e.g = "4.98cm";
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyle.Type">
            <summary>
            A Tabstoptype e.g center
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyle.LeaderStyle">
            <summary>
            The Tabstop LeaderStyle e.g dotted
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyle.LeaderText">
            <summary>
            The Tabstop Leader text e.g. "."
            Use this if you use the LeaderStyle property
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyle.PropertyCollection">
            <summary>
            Not supported. Returns null.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.TabStopStyleCollection">
            <summary>
            Represent a TabStopStyle collection which could be
            used within a ParagraphStyle object.
            Notice: A TabStopStyleCollection will not work
            within a Standard Paragraph!
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TabStopStyleCollection.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TabStopStyleCollection"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:AODL.Document.Styles.TabStopStyleCollection.Add(AODL.Document.Styles.TabStopStyle)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.Styles.TabStopStyleCollection.Remove(AODL.Document.Styles.TabStopStyle)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.TabStopStyleCollection.Insert(System.Int32,AODL.Document.Styles.TabStopStyle)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.TabStopStyleCollection.Contains(AODL.Document.Styles.TabStopStyle)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyleCollection.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyleCollection.Document">
            <summary>
            Gets or sets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:AODL.Document.Styles.TabStopStyleCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.Styles.TabStopStyle"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.TextStyle">
            <summary>
            Represent the style for a FormatedText object.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TextStyle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TextStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:AODL.Document.Styles.TextStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TextStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.TextStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TextStyle.NewXmlNode(System.String)">
            <summary>
            Create the XmlNode that represent the Style element.
            </summary>
            <param name="name">The style name.</param>
        </member>
        <member name="M:AODL.Document.Styles.TextStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.TextStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.TextStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.TextStyle.TextProperties">
            <summary>
            Gets or sets the text properties.
            </summary>
            <value>The text properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.TextStyle.Family">
            <summary>
            The family tyle to this object belongs.
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.TextStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TextStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TextStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TextStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.TitleStyle">
            <summary>
            Summary description for TitleStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TitleStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            the constructor of the title style
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:AODL.Document.Styles.TitleStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TableStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.TitleStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TitleStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.TitleStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.TitleStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.TitleStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.TitleStyle.ChartGraphicProperties">
            <summary>
            Gets or sets the chart graphic properties.
            </summary>
            <value>The chart graphic properties.</value>
        </member>
        <member name="P:AODL.Document.Styles.TitleStyle.TextProperties">
            <summary>
            gets and sets the text properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.TitleStyle.ChartProperties">
            <summary>
            gets and sets the chart properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.TitleStyle.FamilyStyle">
            <summary>
            gets and sets family style
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.TitleStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TitleStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TitleStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.TitleStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.UnknownStyle">
            <summary>
            UnknownStyle represent an unknown style element.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.UnknownStyle.#ctor(AODL.Document.IDocument,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.UnknownStyle"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="unknownNode">The unknown node.</param>
        </member>
        <member name="P:AODL.Document.Styles.UnknownStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.UnknownStyle.StyleName">
            <summary>
            The style name, if no name is found it return null.
            Notice: Set isn't available.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.UnknownStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.UnknownStyle.PropertyCollection">
            <summary>
            A collection of properties isn't available
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.Styles.WallStyle">
            <summary>
            Summary description for WallStyle.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.WallStyle.#ctor(AODL.Document.IDocument)">
            <summary>
            the constructor of wall style
            </summary>
            <param name="document"></param>
            <param name="node"></param>
        </member>
        <member name="M:AODL.Document.Styles.WallStyle.#ctor(AODL.Document.IDocument,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.Styles.TableStyle"/> class.
            </summary>
            <param name="document">The spreadsheet document.</param>
            <param name="styleName">Name of the style.</param>
        </member>
        <member name="M:AODL.Document.Styles.WallStyle.InitStandards">
            <summary>
            Inits the standards.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.WallStyle.NewXmlNode">
            <summary>
            Create a new Xml node.
            </summary>
        </member>
        <member name="M:AODL.Document.Styles.WallStyle.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Create a XmlAttribute for propertie XmlNode.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="text">The attribute value.</param>
            <param name="prefix">The namespace prefix.</param>
        </member>
        <member name="M:AODL.Document.Styles.WallStyle.PropertyCollection_Inserted(System.Int32,System.Object)">
            <summary>
            Properties the collection_ inserted.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.Styles.WallStyle.PropertyCollection_Removed(System.Int32,System.Object)">
            <summary>
            Properties the collection_ removed.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:AODL.Document.Styles.WallStyle.ChartProperties">
            <summary>
            gets and sets the chart graphic properties
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.WallStyle.FamilyStyle">
            <summary>
            gets and sets family style
            </summary>
        </member>
        <member name="P:AODL.Document.Styles.WallStyle.Node">
            <summary>
            The Xml node which represent the
            style
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.WallStyle.StyleName">
            <summary>
            The style name
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.WallStyle.Document">
            <summary>
            The document to which this style
            belongs.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.Styles.WallStyle.PropertyCollection">
            <summary>
            Collection of properties.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.TextDocuments.DocumentConfiguration2">
            <summary>
            DocumentConfiguration2 represent the Configuration2 file.
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.DocumentConfiguration2.FolderName">
            <summary>
            The folder name.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentConfiguration2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.TextDocuments.DocumentConfiguration2"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentConfiguration2.Load(System.String)">
            <summary>
            Loads the specified filename.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentConfiguration2.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentConfiguration2.Configurations2Content">
            <summary>
            Gets or sets the content of the configurations2.
            </summary>
            <value>The content of the configurations2.</value>
        </member>
        <member name="T:AODL.Document.TextDocuments.DocumentMetadata">
            <summary>
            DocumentMetadata global Document Metadata
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.DocumentMetadata.FileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentMetadata.#ctor(AODL.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.TextDocuments.DocumentMetadata"/> class.
            </summary>
            <param name="textDocument">The text document.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.TextDocuments.DocumentMetadata"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentMetadata.New">
            <summary>
            Load the style from assmebly resource.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentMetadata.LoadFromFile(System.String)">
            <summary>
            Loads from file.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentMetadata.GetUserDefinedInfo(AODL.Document.TextDocuments.UserDefinedInfo)">
            <summary>
            Gets the user defined info.
            </summary>
            <param name="info">The info.</param>
            <returns>Info string for the given field.</returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentMetadata.SetUserDefinedInfo(AODL.Document.TextDocuments.UserDefinedInfo,System.String)">
            <summary>
            Sets the user defined info.
            </summary>
            <param name="info">The info.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentMetadata.GetUserDefinedNode(AODL.Document.TextDocuments.UserDefinedInfo)">
            <summary>
            Gets the user defined node.
            </summary>
            <param name="info">The info.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentMetadata.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentMetadata.GetHtml">
            <summary>
            Return the content as Html string
            </summary>
            <returns>The html string</returns>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.Meta">
            <summary>
            Gets or sets the styles.
            </summary>
            <value>The styles.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.TextDocument">
            <summary>
            Gets or sets the text document.
            </summary>
            <value>The text document.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.Generator">
            <summary>
            Gets or sets the generator.
            </summary>
            <value>The generator.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.Title">
            <summary>
            Gets or sets the title.
            April News
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.Subject">
            <summary>
            Gets or sets the subject.
            e.g. April Mailing
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.InitialCreator">
            <summary>
            Gets or sets the initial creator.
            e.g. Your Name
            </summary>
            <value>The initial creator.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.Creator">
            <summary>
            Gets or sets the creator.
            </summary>
            <value>The creator.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.CreationDate">
            <summary>
            Gets or sets the creation date.
            e.g. 2003-02-11T16:41:37
            <code>
            //Get a DateTime which is needed
            DateTime.Now.ToString("s");
            </code>
            </summary>
            <value>The creation date.</value>
            <remarks>This is should not be set to the Last modified date.
            For last update use the last modified property.
            The date format must be: 2003-02-11T16:41:37
            otherwise maybe some Editors wouldn't load the file
            correct or crash.</remarks>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.LastModified">
            <summary>
            Gets or sets the last modified date.
            e.g. 2003-02-11T16:41:37
            </summary>
            <value>The last modified date.</value>
            <remarks>
            The date format must be: 2003-02-11T16:41:37
            otherwise maybe some Editors wouldn't load the file
            correct or crash.</remarks>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
            <value>The keywords.</value>
            <remarks>Set keywords sperated by whitespaces.</remarks>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.Language">
            <summary>
            Gets or sets the language.
            e.g. en-US, de-DE, ...
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.TableCount">
            <summary>
            Gets or sets the table count.
            </summary>
            <value>The table count.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.ImageCount">
            <summary>
            Gets or sets the image count.
            </summary>
            <value>The image count.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.ObjectCount">
            <summary>
            Gets or sets the object count.
            </summary>
            <value>The object count.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.PageCount">
            <summary>
            Gets or sets the page count.
            </summary>
            <value>The page count.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.ParagraphCount">
            <summary>
            Gets or sets the paragraph count.
            </summary>
            <value>The paragraph count.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.WordCount">
            <summary>
            Gets or sets the word count.
            </summary>
            <value>The word count.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentMetadata.CharacterCount">
            <summary>
            Gets or sets the character count.
            </summary>
            <value>The character count.</value>
        </member>
        <member name="T:AODL.Document.TextDocuments.UserDefinedInfo">
            <summary>
            UserDefinedInfo, each OpenDocument TextDocument
            support up to 4 user defined fields, where you
            can place additional information.
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.UserDefinedInfo.Info1">
            <summary>
            Info field 1
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.UserDefinedInfo.Info2">
            <summary>
            Info field 2
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.UserDefinedInfo.Info3">
            <summary>
            Info field 3
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.UserDefinedInfo.Info4">
            <summary>
            Info field 4
            </summary>
        </member>
        <member name="T:AODL.Document.TextDocuments.DocumentPicture">
            <summary>
            DocumentPicture represent a picture resp. graphic which used within
            a file in the OpenDocument format.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentPicture.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.TextDocuments.DocumentPicture"/> class.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentPicture.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Document.TextDocuments.DocumentPicture"/> class.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentPicture.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentPicture.ImageName">
            <summary>
            Gets or sets the name of the image.
            </summary>
            <value>The name of the image.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentPicture.ImagePath">
            <summary>
            Gets or sets the path of the image.
            </summary>
            <value>The path of the image.</value>
        </member>
        <member name="T:AODL.Document.TextDocuments.DocumentPictureCollection">
            <summary>
            A DocumentPicture collection.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentPictureCollection.Add(AODL.Document.TextDocuments.DocumentPicture)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentPictureCollection.Remove(AODL.Document.TextDocuments.DocumentPicture)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentPictureCollection.Insert(System.Int32,AODL.Document.TextDocuments.DocumentPicture)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.DocumentPictureCollection.Contains(AODL.Document.TextDocuments.DocumentPicture)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:AODL.Document.TextDocuments.DocumentPictureCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AODL.Document.TextDocuments.DocumentPicture"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:AODL.Document.TextDocuments.TextDocument">
            <summary>
            Represent a opendocument text document.
            </summary>
            <example>
            <code>
            TextDocument td = new TextDocument();
            td.New();
            Paragraph p = new Paragraph(td, "P1");	
            //add text
            p.TextContent.Add(new SimpleText(p, "Hello"));
            //Add the Paragraph
            td.Content.Add((IContent)p);
            //Blank para
            td.Content.Add(new Paragraph(td, ParentStyles.Standard.ToString()));
            // new para
            p = new Paragraph(td, "P2");
            p.TextContent.Add(new SimpleText(p, "Hello again"));
            td.Content.Add(p);
            td.SaveTo("parablank.odt");
            </code>
            </example>
        </member>
        <member name="F:AODL.Document.TextDocuments.TextDocument._embedobjects">
            <summary>
            gets and sets the embed objects 
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.#ctor">
            <summary>
            Create a new TextDocument object.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.New">
            <summary>
            Create a blank new document.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.ReadCommonStyles">
            <summary>
            Reads the common styles.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.Load(System.String)">
            <summary>
            Loads the document by using the specified importer.
            </summary>
            <param name="file">The the file.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.CreateNode(System.String,System.String)">
            <summary>
            Create a new XmlNode for this document.
            </summary>
            <param name="name">The elementname.</param>
            <param name="prefix">The prefix.</param>
            <returns>The new XmlNode.</returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.CreateAttribute(System.String,System.String)">
            <summary>
            Create a new XmlAttribute for this document.
            </summary>
            <param name="name">The attributename.</param>
            <param name="prefix">The prefixname.</param>
            <returns>The new XmlAttribute.</returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.SaveTo(System.String)">
            <summary>
            Save the TextDocument as OpenDocument textdocument.
            </summary>
            <param name="filename">The filename. With or without full path. Without will save the file to application path!</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.SaveTo(System.String,AODL.Document.Export.IExporter)">
            <summary>
            Save the document by using the passed IExporter
            with the passed file name.
            </summary>
            <param name="filename">The name of the new file.</param>
            <param name="iExporter"></param>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.AddFont(System.String)">
            <summary>
            Adds a font to the document. All fonts that you use
            within your text must be added to the document.
            The class FontFamilies represent all available fonts.
            </summary>
            <param name="fontname">The fontname take it from class FontFamilies.</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.GetNamespaceUri(System.String)">
            <summary>
            Return the namespaceuri for the given prefixname.
            </summary>
            <param name="prefix">The prefixname.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.CreateContentBody">
            <summary>
            Creates the content body.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.CreateLocalStyleContent">
            <summary>
            Creates the content of the local style.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.CreateCommonStyleContent">
            <summary>
            Creates the content of the common style.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.FindControlById(System.String)">
            <summary>
            Looks for a specific control through all the forms by its ID
            </summary>
            <param name="id">Control ID</param>
            <returns>The control</returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.FindControlByName(System.String)">
            <summary>
            Looks for a specific control through all the forms by its name
            </summary>
            <param name="id">Control name</param>
            <returns>The control</returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.AddNewForm(System.String)">
            <summary>
            Adds new form to the forms collection
            </summary>
            <param name="name">Form name</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.Dispose">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.Dispose(System.Boolean)">
            <summary>
            Disposes the specified disposing.
            </summary>
            <param name="disposing">if set to <c>true</c> [disposing].</param>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocument.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:AODL.Document.TextDocuments.TextDocument"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.TableofContentsCount">
            <summary>
            Gets the tableof contents count.
            </summary>
            <value>The tableof contents count.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.TableCount">
            <summary>
            Gets the tableof contents count.
            </summary>
            <value>The tableof contents count.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.XmlDoc">
            <summary>
            The xmldocument the textdocument based on.
            </summary>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.IsLoadedFile">
            <summary>
            If this file was loaded
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.Graphics">
            <summary>
            Gets the graphics.
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.DocumentStyles">
            <summary>
            Gets or sets the document styes.
            </summary>
            <value>The document styes.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.DocumentSetting">
            <summary>
            Gets or sets the document setting.
            </summary>
            <value>The document setting.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.DocumentMetadata">
            <summary>
            Gets or sets the document metadata.
            </summary>
            <value>The document metadata.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.DocumentManifest">
            <summary>
            Gets or sets the document manifest.
            </summary>
            <value>The document manifest.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.DocumentConfigurations2">
            <summary>
            Gets or sets the document configurations2.
            </summary>
            <value>The document configurations2.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.DocumentPictures">
            <summary>
            Gets or sets the document pictures.
            </summary>
            <value>The document pictures.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.DocumentThumbnails">
            <summary>
            Gets or sets the document thumbnails.
            </summary>
            <value>The document thumbnails.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.MimeTyp">
            <summary>
            Gets the MIME typ.
            </summary>
            <value>The MIME typ.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.EmbedObjects">
            <summary>
            Gets the graphics.
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.NamespaceManager">
            <summary>
            The namespacemanager to access the documents namespace uris.
            </summary>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.Content">
            <summary>
            Collection of contents used by this document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.Styles">
            <summary>
            Collection of local styles used with this document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.CommonStyles">
            <summary>
            Collection of common styles used with this document.
            </summary>
            <value></value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.TextMasterPageCollection">
            <summary>
            Gets or sets the text master page collection.
            </summary>
            <value>The text master page collection.</value>
        </member>
        <member name="P:AODL.Document.TextDocuments.TextDocument.FontList">
            <summary>
            Gets or sets the font list.
            </summary>
            <value>The font list.</value>
        </member>
        <member name="T:AODL.Document.TextDocuments.TextDocumentHelper">
            <summary>
            Class with static helper methods for the TextDocument class.
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.TextDocumentHelper.AutomaticStylePath">
            <summary>
            The XPath query for the offic:automatic-style element.
            </summary>
        </member>
        <member name="F:AODL.Document.TextDocuments.TextDocumentHelper.OfficeTextPath">
            <summary>
            The XPath query for the office:text element.
            </summary>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocumentHelper.GetBlankDocument">
            <summary>
            Getting a blank OpenDocument textdocument.
            </summary>
            <returns>The blank document. Which should be loaded for the TextDocument.</returns>
        </member>
        <member name="M:AODL.Document.TextDocuments.TextDocumentHelper.NameSpace(System.Xml.XmlNameTable)">
            <summary>
            Create a new XmlNamespaceManager and fill it with all necessary namespaces and prefixes.
            </summary>
            <param name="nametable">The XmlNameTable of the TextDocument object XmlDocument.</param>
            <returns>The XmlNamespaceManager object.</returns>
        </member>
        <member name="F:AODL.Document.DocumentTypes.TextDocument">
            <summary>
            OpenDocument Text document
            </summary>
        </member>
        <member name="F:AODL.Document.DocumentTypes.SpreadsheetDocument">
            <summary>
            OpenDocument Spreadsheet document
            </summary>
        </member>
        <member name="T:AODL.Package.ODFMemoryStream">
            <summary>
            Zusammenfassung für ODFMemoryStream.
            </summary>
        </member>
        <member name="M:AODL.Package.ODFMemoryStream.GetSource">
            <summary>
            Gets the source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AODL.Package.ODFMemoryStream.#ctor(System.IO.MemoryStream)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Package.ODFMemoryStream"/> class.
            </summary>
            <param name="ms">The ms.</param>
        </member>
        <member name="T:AODL.Package.ODFPackage">
            <summary>
            Zusammenfassung für ODFPackage.
            </summary>
            <example>
            ODFPackage odfPackage = new ODFPackage(testFile1);
            XmlDocument content = new XmlDocument();
            content.Load(odfPackage.GetStreamByName(ODFPackage.ODFContentXML));
            // doing some changes .. content.DocumentElement.AppendChild( content.CreateTextNode("lalalal") );
            MemoryStream saveStream = new MemoryStream();
            content.Save(saveStream);
            odfPackage.AddEntryFromMemoryStream(saveStream, ODFPackage.ODFContentXML);
            odfPackage.Close();
            </example>
        </member>
        <member name="M:AODL.Package.ODFPackage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Package.ODFPackage"/> class.
            </summary>
        </member>
        <member name="M:AODL.Package.ODFPackage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AODL.Package.ODFPackage"/> class.
            </summary>
            <param name="odfFile">The odf file.</param>
        </member>
        <member name="M:AODL.Package.ODFPackage.Load(System.String)">
            <summary>
            Loads the specified odf file.
            </summary>
            <param name="odfFile">The odf file.</param>
        </member>
        <member name="M:AODL.Package.ODFPackage.GetStreamByName(System.String)">
            <summary>
            Gets the name of the stream by.
            </summary>
            <param name="entryName">Name of the entry.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Package.ODFPackage.GetEntryByName(System.String)">
            <summary>
            Gets the name of the entry by.
            </summary>
            <param name="entryName">Name of the entry.</param>
            <returns></returns>
        </member>
        <member name="M:AODL.Package.ODFPackage.BeginUpdate">
            <summary>
            Begins the update.
            </summary>
        </member>
        <member name="M:AODL.Package.ODFPackage.AddEntryFromMemoryStream(System.IO.MemoryStream,System.String)">
            <summary>
            Adds the entry from memory stream.
            </summary>
            <param name="memoryStream">The memory stream.</param>
            <param name="entryName">Name of the entry.</param>
        </member>
        <member name="M:AODL.Package.ODFPackage.AbortPackageUpdate">
            <summary>
            Aborts the package update.
            </summary>
        </member>
        <member name="M:AODL.Package.ODFPackage.CommitChanges">
            <summary>
            Commits the changes.
            </summary>
        </member>
        <member name="M:AODL.Package.ODFPackage.Close">
            <summary>
            Closes this ODFPackage.
            If this package has changes they will be commited and saved.
            If you have done changes to the package and won't save them
            use the AbortPackageUpdate() method before calling Close().
            </summary>
        </member>
        <member name="P:AODL.Package.ODFPackage.CurrentFile">
            <summary>
            Gets the current file.
            </summary>
            <value>The current file.</value>
        </member>
        <member name="P:AODL.Package.ODFPackage.Package">
            <summary>
            Gets or sets the package.
            </summary>
            <value>The package.</value>
        </member>
    </members>
</doc>
