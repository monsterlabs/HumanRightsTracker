require "rubygems"
require "bundler"
require "yaml"
require "active_record"
require "active_record/railtie"
require "csv"
Bundler.setup
Bundler.require :default

%w(user country state city marital_status scholarity_level religion
   ethnic_group date_type institution_type human_rights_violation
   human_rights_violation_category role act_status affiliation_type
   intervention_type location_type victim_status institution_category
   job person person_detail image institution institution_person
   traveling_reason immigration_attempt address case act person_act
   ).each do |model_name|
  if File.exist? "./models/#{model_name}.rb"
    require "./models/#{model_name}"
  end
end

task :default => :migrate

desc "Migrate the database through scripts in db/migrate. Target specific version with VERSION=x"
task :migrate => :environment do
  ActiveRecord::Migrator.migrate('migrate', ENV["VERSION"] ? ENV["VERSION"].to_i : nil )
end


desc "Load seeds in to the database."
task :seeds => :environment do
  User.destroy_all
  CSV.foreach("seeds/users.csv", :col_sep => "|") do |row|
    User.create(:login => row[0].strip,
                    :password => row[1].strip,
                    :salt => row[2].strip)
  end
  
  Country.destroy_all
  CSV.foreach("seeds/countries.csv", :col_sep => "|") do |row|
    Country.create(:code => row[0].strip,
                    :name => row[1].strip,
                    :citizen => row[2].strip)
  end
  
  State.destroy_all
  City.destroy_all
  %w(MX GT HN NI SV).each do |code|
    @country = Country.find_by_code(code)
    CSV.foreach("seeds/states_#{code.downcase}.csv", :col_sep => "|") do |row|
      State.create(:name => row[0].strip, :country_id => @country.id)
    end
  
    CSV.foreach("seeds/cities_#{code.downcase}.csv", :col_sep => "|") do |row|
      state = State.find_by_name(row[0].strip)
      City.create(:name => row[1].strip, :state_id => state.id)
    end
  end
  
  MaritalStatus.destroy_all
  CSV.foreach("seeds/marital_statuses.csv", :col_sep => "|") do |row|
    MaritalStatus.create(:name => row[0].strip)
  end
  
  Religion.destroy_all
  CSV.foreach("seeds/religions.csv", :col_sep => "|") do |row|
    Religion.create(:name => row[0].strip)
  end
  
  EthnicGroup.destroy_all
  CSV.foreach("seeds/ethnic_groups.csv", :col_sep => "|") do |row|
    EthnicGroup.create(:name => row[0].strip)
  end
  
  ScholarityLevel.destroy_all
  CSV.foreach("seeds/scholarity_levels.csv", :col_sep => "|") do |row|
   ScholarityLevel.create(:name => row[0].strip)
  end
  
  DateType.destroy_all
  CSV.foreach("seeds/date_types.csv") do |row|
    DateType.create(:name => row[0].strip)
  end
  
  InstitutionType.destroy_all
  CSV.foreach("seeds/institution_types.csv") do |row|
    InstitutionType.create(:name => row[0].strip)
  end
  
  HumanRightsViolation.destroy_all
  CSV.foreach("seeds/human_rights_violations.csv", :col_sep => "|") do |row|
    p row
    HumanRightsViolation.create(:id => row[0].to_i, :name => row[2].strip, :category_id => row[1].to_i)
  end
  
  Role.destroy_all
  CSV.foreach("seeds/roles.csv") do |row|
    Role.create(:name => row[0].strip)
  end
  
  HumanRightsViolationCategory.destroy_all
  CSV.foreach("seeds/human_rights_violation_categories.csv", :col_sep => "|") do |row|
    HumanRightsViolationCategory.create(:id => row[0].to_i, :name => row[1].strip)
  end
  
  AffiliationType.destroy_all
  CSV.foreach("seeds/affiliation_types.csv") do |row|
    AffiliationType.create(:name => row[0].strip)
  end
  
  ActStatus.destroy_all
  CSV.foreach("seeds/act_statuses.csv") do |row|
    ActStatus.create(:name => row[0].strip)
  end
  
  InterventionType.destroy_all
  CSV.foreach("seeds/intervention_types.csv") do |row|
    InterventionType.create(:name => row[0].strip)
  end
  
  LocationType.destroy_all
  CSV.foreach("seeds/location_types.csv") do |row|
    LocationType.create(:name => row[0].strip)
  end
  
  VictimStatus.destroy_all
  CSV.foreach("seeds/victim_statuses.csv") do |row|
    VictimStatuses.create(:name => row[0].strip)
  end
  
  InstitutionCategory.destroy_all
  CSV.foreach("seeds/institution_categories.csv") do |row|
    InstitutionCategory.create(:name => row[0].to_s.strip, :notes => row[1].to_s.strip)
  end
  
  TravelingReason.destroy_all
  CSV.foreach("seeds/traveling_reasons.csv") do |row|
     TravelingReason.create(:name => row[0].to_s.strip)
  end
  
  Job.destroy_all
  CSV.foreach("seeds/jobs.csv", :col_sep => "|") do |row|
    Job.create(:name => row[0].to_s.strip, :notes => row[1].to_s.strip)
  end

  %w(person institution institution_person cases).each do |blueprint|
    require File.expand_path("../blueprints/#{blueprint}", __FILE__)
  end
  Person.make!(60)
  Institution.make!(30)
  InstitutionPerson.make!(10)
  Case.make!(20)
end

task :environment do
  ActiveRecord::Base.establish_connection(YAML::load(File.open('config/database.yml')))
  ActiveRecord::Base.logger = Logger.new(File.open('database.log', 'a'))
end

